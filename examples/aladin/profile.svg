<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="474" onload="init(evt)" viewBox="0 0 1200 474" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="474" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">D:\repos\AgentLib-MPC\venv/Scripts\py-spy.exe record -o profile.svg --pid 2388</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="463.00"> </text><svg id="frames" x="10" width="1180" total_samples="3460"><g><title>step (simpy\core.py:188) (6 samples, 0.17%)</title><rect x="0.0289%" y="132" width="0.1734%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="6"/><text x="0.2789%" y="142.50"></text></g><g><title>_execute_callbacks (agentlib\core\data_broker.py:212) (4 samples, 0.12%)</title><rect x="0.2890%" y="164" width="0.1156%" height="15" fill="rgb(217,0,24)" fg:x="10" fg:w="4"/><text x="0.5390%" y="174.50"></text></g><g><title>_execute_callbacks (agentlib\core\data_broker.py:213) (6 samples, 0.17%)</title><rect x="0.4046%" y="164" width="0.1734%" height="15" fill="rgb(221,193,54)" fg:x="14" fg:w="6"/><text x="0.6546%" y="174.50"></text></g><g><title>log_queue_status (agentlib\core\data_broker.py:502) (5 samples, 0.14%)</title><rect x="0.4335%" y="180" width="0.1445%" height="15" fill="rgb(248,212,6)" fg:x="15" fg:w="5"/><text x="0.6835%" y="190.50"></text></g><g><title>_filter_unmapped_callbacks (agentlib\core\data_broker.py:249) (15 samples, 0.43%)</title><rect x="0.6647%" y="180" width="0.4335%" height="15" fill="rgb(208,68,35)" fg:x="23" fg:w="15"/><text x="0.9147%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (agentlib\core\data_broker.py:250) (14 samples, 0.40%)</title><rect x="0.6936%" y="196" width="0.4046%" height="15" fill="rgb(232,128,0)" fg:x="24" fg:w="14"/><text x="0.9436%" y="206.50"></text></g><g><title>_execute_callbacks (agentlib\core\data_broker.py:221) (22 samples, 0.64%)</title><rect x="0.6069%" y="164" width="0.6358%" height="15" fill="rgb(207,160,47)" fg:x="21" fg:w="22"/><text x="0.8569%" y="174.50"></text></g><g><title>_filter_unmapped_callbacks (agentlib\core\data_broker.py:253) (5 samples, 0.14%)</title><rect x="1.0983%" y="180" width="0.1445%" height="15" fill="rgb(228,23,34)" fg:x="38" fg:w="5"/><text x="1.3483%" y="190.50"></text></g><g><title>_execute_callbacks (agentlib\core\data_broker.py:225) (4 samples, 0.12%)</title><rect x="1.2428%" y="164" width="0.1156%" height="15" fill="rgb(218,30,26)" fg:x="43" fg:w="4"/><text x="1.4928%" y="174.50"></text></g><g><title>_callback_config_vars (agentlib\core\module.py:641) (6 samples, 0.17%)</title><rect x="1.4740%" y="196" width="0.1734%" height="15" fill="rgb(220,122,19)" fg:x="51" fg:w="6"/><text x="1.7240%" y="206.50"></text></g><g><title>deepcopy (copy.py:146) (5 samples, 0.14%)</title><rect x="1.5029%" y="212" width="0.1445%" height="15" fill="rgb(250,228,42)" fg:x="52" fg:w="5"/><text x="1.7529%" y="222.50"></text></g><g><title>_deepcopy_list (copy.py:206) (4 samples, 0.12%)</title><rect x="1.5318%" y="228" width="0.1156%" height="15" fill="rgb(240,193,28)" fg:x="53" fg:w="4"/><text x="1.7818%" y="238.50"></text></g><g><title>_receive (agentlib\modules\communicator\communicator.py:217) (4 samples, 0.12%)</title><rect x="2.1965%" y="244" width="0.1156%" height="15" fill="rgb(216,20,37)" fg:x="76" fg:w="4"/><text x="2.4465%" y="254.50"></text></g><g><title>_send_only_shared_variables (agentlib\modules\communicator\communicator.py:94) (19 samples, 0.55%)</title><rect x="1.9075%" y="196" width="0.5491%" height="15" fill="rgb(206,188,39)" fg:x="66" fg:w="19"/><text x="2.1575%" y="206.50"></text></g><g><title>_send (agentlib\modules\communicator\local_broadcast.py:30) (18 samples, 0.52%)</title><rect x="1.9364%" y="212" width="0.5202%" height="15" fill="rgb(217,207,13)" fg:x="67" fg:w="18"/><text x="2.1864%" y="222.50"></text></g><g><title>broadcast (agentlib\utils\local_broadcast_broker.py:23) (9 samples, 0.26%)</title><rect x="2.1965%" y="228" width="0.2601%" height="15" fill="rgb(231,73,38)" fg:x="76" fg:w="9"/><text x="2.4465%" y="238.50"></text></g><g><title>copy (agentlib\core\datamodels.py:732) (5 samples, 0.14%)</title><rect x="2.6301%" y="212" width="0.1445%" height="15" fill="rgb(225,20,46)" fg:x="91" fg:w="5"/><text x="2.8801%" y="222.50"></text></g><g><title>init_iteration_callback (agentlib_mpc\modules\dmpc\aladin\aladin_coordinated.py:121) (4 samples, 0.12%)</title><rect x="2.7746%" y="212" width="0.1156%" height="15" fill="rgb(210,31,41)" fg:x="96" fg:w="4"/><text x="3.0246%" y="222.50"></text></g><g><title>shift_opt_variable (agentlib_mpc\modules\dmpc\aladin\aladin_coordinated.py:137) (4 samples, 0.12%)</title><rect x="2.7746%" y="228" width="0.1156%" height="15" fill="rgb(221,200,47)" fg:x="96" fg:w="4"/><text x="3.0246%" y="238.50"></text></g><g><title>shift_opt_var (agentlib_mpc\optimization_backends\casadi_\aladin.py:691) (4 samples, 0.12%)</title><rect x="2.7746%" y="244" width="0.1156%" height="15" fill="rgb(226,26,5)" fg:x="96" fg:w="4"/><text x="3.0246%" y="254.50"></text></g><g><title>_finish_optimization (agentlib_mpc\modules\dmpc\aladin\aladin_coordinated.py:234) (4 samples, 0.12%)</title><rect x="2.9191%" y="228" width="0.1156%" height="15" fill="rgb(249,33,26)" fg:x="101" fg:w="4"/><text x="3.1691%" y="238.50"></text></g><g><title>init_iteration_callback (agentlib_mpc\modules\dmpc\aladin\aladin_coordinated.py:128) (6 samples, 0.17%)</title><rect x="2.9191%" y="212" width="0.1734%" height="15" fill="rgb(235,183,28)" fg:x="101" fg:w="6"/><text x="3.1691%" y="222.50"></text></g><g><title>optim_results_callback (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:294) (10 samples, 0.29%)</title><rect x="3.0925%" y="212" width="0.2890%" height="15" fill="rgb(221,5,38)" fg:x="107" fg:w="10"/><text x="3.3425%" y="222.50"></text></g><g><title>from_json (agentlib_mpc\data_structures\coordinator_datatypes.py:108) (10 samples, 0.29%)</title><rect x="3.0925%" y="228" width="0.2890%" height="15" fill="rgb(247,18,42)" fg:x="107" fg:w="10"/><text x="3.3425%" y="238.50"></text></g><g><title>optimize (agentlib_mpc\modules\dmpc\aladin\aladin_coordinated.py:197) (10 samples, 0.29%)</title><rect x="3.8150%" y="212" width="0.2890%" height="15" fill="rgb(241,131,45)" fg:x="132" fg:w="10"/><text x="4.0650%" y="222.50"></text></g><g><title>set_global_variable (agentlib_mpc\optimization_backends\casadi_\aladin.py:694) (10 samples, 0.29%)</title><rect x="3.8150%" y="228" width="0.2890%" height="15" fill="rgb(249,31,29)" fg:x="132" fg:w="10"/><text x="4.0650%" y="238.50"></text></g><g><title>vertcat (casadi\casadi.py:518) (10 samples, 0.29%)</title><rect x="3.8150%" y="244" width="0.2890%" height="15" fill="rgb(225,111,53)" fg:x="132" fg:w="10"/><text x="4.0650%" y="254.50"></text></g><g><title>_vertcat (casadi\casadi.py:34167) (10 samples, 0.29%)</title><rect x="3.8150%" y="260" width="0.2890%" height="15" fill="rgb(238,160,17)" fg:x="132" fg:w="10"/><text x="4.0650%" y="270.50"></text></g><g><title>__call__ (casadi\casadi.py:23556) (17 samples, 0.49%)</title><rect x="4.4798%" y="276" width="0.4913%" height="15" fill="rgb(214,148,48)" fg:x="155" fg:w="17"/><text x="4.7298%" y="286.50"></text></g><g><title>call (casadi\casadi.py:20205) (17 samples, 0.49%)</title><rect x="4.4798%" y="292" width="0.4913%" height="15" fill="rgb(232,36,49)" fg:x="155" fg:w="17"/><text x="4.7298%" y="302.50"></text></g><g><title>_get_current_mpc_inputs (agentlib_mpc\optimization_backends\casadi_\core\casadi_backend.py:240) (46 samples, 1.33%)</title><rect x="4.2775%" y="244" width="1.3295%" height="15" fill="rgb(209,103,24)" fg:x="148" fg:w="46"/><text x="4.5275%" y="254.50"></text></g><g><title>get_parameter_values (agentlib_mpc\optimization_backends\casadi_\core\casadi_backend.py:235) (41 samples, 1.18%)</title><rect x="4.4220%" y="260" width="1.1850%" height="15" fill="rgb(229,88,8)" fg:x="153" fg:w="41"/><text x="4.6720%" y="270.50"></text></g><g><title>horzcat (casadi\casadi.py:525) (20 samples, 0.58%)</title><rect x="5.0289%" y="276" width="0.5780%" height="15" fill="rgb(213,181,19)" fg:x="174" fg:w="20"/><text x="5.2789%" y="286.50"></text></g><g><title>_horzcat (casadi\casadi.py:34141) (20 samples, 0.58%)</title><rect x="5.0289%" y="292" width="0.5780%" height="15" fill="rgb(254,191,54)" fg:x="174" fg:w="20"/><text x="5.2789%" y="302.50"></text></g><g><title>get_variable_boundaries (agentlib_mpc\optimization_backends\casadi_\core\casadi_backend.py:185) (37 samples, 1.07%)</title><rect x="5.7514%" y="260" width="1.0694%" height="15" fill="rgb(241,83,37)" fg:x="199" fg:w="37"/><text x="6.0014%" y="270.50"></text></g><g><title>__call__ (casadi\casadi.py:23556) (37 samples, 1.07%)</title><rect x="5.7514%" y="276" width="1.0694%" height="15" fill="rgb(233,36,39)" fg:x="199" fg:w="37"/><text x="6.0014%" y="286.50"></text></g><g><title>call (casadi\casadi.py:20205) (37 samples, 1.07%)</title><rect x="5.7514%" y="292" width="1.0694%" height="15" fill="rgb(226,3,54)" fg:x="199" fg:w="37"/><text x="6.0014%" y="302.50"></text></g><g><title>horzcat (casadi\casadi.py:522) (4 samples, 0.12%)</title><rect x="6.8786%" y="276" width="0.1156%" height="15" fill="rgb(245,192,40)" fg:x="238" fg:w="4"/><text x="7.1286%" y="286.50"></text></g><g><title>_get_current_mpc_inputs (agentlib_mpc\optimization_backends\casadi_\core\casadi_backend.py:243) (57 samples, 1.65%)</title><rect x="5.6647%" y="244" width="1.6474%" height="15" fill="rgb(238,167,29)" fg:x="196" fg:w="57"/><text x="5.9147%" y="254.50"></text></g><g><title>get_variable_boundaries (agentlib_mpc\optimization_backends\casadi_\core\casadi_backend.py:186) (17 samples, 0.49%)</title><rect x="6.8208%" y="260" width="0.4913%" height="15" fill="rgb(232,182,51)" fg:x="236" fg:w="17"/><text x="7.0708%" y="270.50"></text></g><g><title>horzcat (casadi\casadi.py:525) (11 samples, 0.32%)</title><rect x="6.9942%" y="276" width="0.3179%" height="15" fill="rgb(231,60,39)" fg:x="242" fg:w="11"/><text x="7.2442%" y="286.50"></text></g><g><title>_horzcat (casadi\casadi.py:34141) (11 samples, 0.32%)</title><rect x="6.9942%" y="292" width="0.3179%" height="15" fill="rgb(208,69,12)" fg:x="242" fg:w="11"/><text x="7.2442%" y="302.50"></text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\core\casadi_backend.py:128) (109 samples, 3.15%)</title><rect x="4.1908%" y="228" width="3.1503%" height="15" fill="rgb(235,93,37)" fg:x="145" fg:w="109"/><text x="4.4408%" y="238.50">sol..</text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:163) (22 samples, 0.64%)</title><rect x="7.6879%" y="244" width="0.6358%" height="15" fill="rgb(213,116,39)" fg:x="266" fg:w="22"/><text x="7.9379%" y="254.50"></text></g><g><title>__call__ (casadi\casadi.py:23556) (22 samples, 0.64%)</title><rect x="7.6879%" y="260" width="0.6358%" height="15" fill="rgb(222,207,29)" fg:x="266" fg:w="22"/><text x="7.9379%" y="270.50"></text></g><g><title>call (casadi\casadi.py:20205) (22 samples, 0.64%)</title><rect x="7.6879%" y="276" width="0.6358%" height="15" fill="rgb(206,96,30)" fg:x="266" fg:w="22"/><text x="7.9379%" y="286.50"></text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:166) (1,440 samples, 41.62%)</title><rect x="8.3237%" y="244" width="41.6185%" height="15" fill="rgb(218,138,4)" fg:x="288" fg:w="1440"/><text x="8.5737%" y="254.50">solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:166)</text></g><g><title>__call__ (casadi\casadi.py:23556) (1,440 samples, 41.62%)</title><rect x="8.3237%" y="260" width="41.6185%" height="15" fill="rgb(250,191,14)" fg:x="288" fg:w="1440"/><text x="8.5737%" y="270.50">__call__ (casadi\casadi.py:23556)</text></g><g><title>call (casadi\casadi.py:20205) (1,440 samples, 41.62%)</title><rect x="8.3237%" y="276" width="41.6185%" height="15" fill="rgb(239,60,40)" fg:x="288" fg:w="1440"/><text x="8.5737%" y="286.50">call (casadi\casadi.py:20205)</text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:167) (19 samples, 0.55%)</title><rect x="49.9422%" y="244" width="0.5491%" height="15" fill="rgb(206,27,48)" fg:x="1728" fg:w="19"/><text x="50.1922%" y="254.50"></text></g><g><title>stats (casadi\casadi.py:21672) (16 samples, 0.46%)</title><rect x="50.0289%" y="260" width="0.4624%" height="15" fill="rgb(225,35,8)" fg:x="1731" fg:w="16"/><text x="50.2789%" y="270.50"></text></g><g><title>__array_custom__ (casadi\casadi.py:11039) (8 samples, 0.23%)</title><rect x="50.7803%" y="292" width="0.2312%" height="15" fill="rgb(250,213,24)" fg:x="1757" fg:w="8"/><text x="51.0303%" y="302.50"></text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:168) (25 samples, 0.72%)</title><rect x="50.4913%" y="244" width="0.7225%" height="15" fill="rgb(247,123,22)" fg:x="1747" fg:w="25"/><text x="50.7413%" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (agentlib_mpc\optimization_backends\casadi_\aladin.py:169) (24 samples, 0.69%)</title><rect x="50.5202%" y="260" width="0.6936%" height="15" fill="rgb(231,138,38)" fg:x="1748" fg:w="24"/><text x="50.7702%" y="270.50"></text></g><g><title>__array__ (casadi\casadi.py:11021) (15 samples, 0.43%)</title><rect x="50.7803%" y="276" width="0.4335%" height="15" fill="rgb(231,145,46)" fg:x="1757" fg:w="15"/><text x="51.0303%" y="286.50"></text></g><g><title>__array_custom__ (casadi\casadi.py:11042) (7 samples, 0.20%)</title><rect x="51.0116%" y="292" width="0.2023%" height="15" fill="rgb(251,118,11)" fg:x="1765" fg:w="7"/><text x="51.2616%" y="302.50"></text></g><g><title>full (casadi\casadi.py:10929) (7 samples, 0.20%)</title><rect x="51.0116%" y="308" width="0.2023%" height="15" fill="rgb(217,147,25)" fg:x="1765" fg:w="7"/><text x="51.2616%" y="318.50"></text></g><g><title>toarray (casadi\casadi.py:11059) (6 samples, 0.17%)</title><rect x="51.0405%" y="324" width="0.1734%" height="15" fill="rgb(247,81,37)" fg:x="1766" fg:w="6"/><text x="51.2905%" y="334.50"></text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:170) (9 samples, 0.26%)</title><rect x="51.2139%" y="244" width="0.2601%" height="15" fill="rgb(209,12,38)" fg:x="1772" fg:w="9"/><text x="51.4639%" y="254.50"></text></g><g><title>__call__ (casadi\casadi.py:23556) (7 samples, 0.20%)</title><rect x="51.2717%" y="260" width="0.2023%" height="15" fill="rgb(227,1,9)" fg:x="1774" fg:w="7"/><text x="51.5217%" y="270.50"></text></g><g><title>call (casadi\casadi.py:20205) (6 samples, 0.17%)</title><rect x="51.3006%" y="276" width="0.1734%" height="15" fill="rgb(248,47,43)" fg:x="1775" fg:w="6"/><text x="51.5506%" y="286.50"></text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:176) (12 samples, 0.35%)</title><rect x="51.4740%" y="244" width="0.3468%" height="15" fill="rgb(221,10,30)" fg:x="1781" fg:w="12"/><text x="51.7240%" y="254.50"></text></g><g><title>__call__ (casadi\casadi.py:23547) (11 samples, 0.32%)</title><rect x="51.5029%" y="260" width="0.3179%" height="15" fill="rgb(210,229,1)" fg:x="1782" fg:w="11"/><text x="51.7529%" y="270.50"></text></g><g><title>call (casadi\casadi.py:20205) (11 samples, 0.32%)</title><rect x="51.5029%" y="276" width="0.3179%" height="15" fill="rgb(222,148,37)" fg:x="1782" fg:w="11"/><text x="51.7529%" y="286.50"></text></g><g><title>_get_active_constraints (agentlib_mpc\optimization_backends\casadi_\aladin.py:223) (7 samples, 0.20%)</title><rect x="51.9075%" y="260" width="0.2023%" height="15" fill="rgb(234,67,33)" fg:x="1796" fg:w="7"/><text x="52.1575%" y="270.50"></text></g><g><title>zeros_like (numpy\core\numeric.py:129) (6 samples, 0.17%)</title><rect x="51.9364%" y="276" width="0.1734%" height="15" fill="rgb(247,98,35)" fg:x="1797" fg:w="6"/><text x="52.1864%" y="286.50"></text></g><g><title>__array__ (casadi\casadi.py:11021) (6 samples, 0.17%)</title><rect x="51.9364%" y="292" width="0.1734%" height="15" fill="rgb(247,138,52)" fg:x="1797" fg:w="6"/><text x="52.1864%" y="302.50"></text></g><g><title>__array_custom__ (casadi\casadi.py:11042) (5 samples, 0.14%)</title><rect x="51.9653%" y="308" width="0.1445%" height="15" fill="rgb(213,79,30)" fg:x="1798" fg:w="5"/><text x="52.2153%" y="318.50"></text></g><g><title>full (casadi\casadi.py:10929) (4 samples, 0.12%)</title><rect x="51.9942%" y="324" width="0.1156%" height="15" fill="rgb(246,177,23)" fg:x="1799" fg:w="4"/><text x="52.2442%" y="334.50"></text></g><g><title>_get_active_constraints (agentlib_mpc\optimization_backends\casadi_\aladin.py:226) (6 samples, 0.17%)</title><rect x="52.1098%" y="260" width="0.1734%" height="15" fill="rgb(230,62,27)" fg:x="1803" fg:w="6"/><text x="52.3598%" y="270.50"></text></g><g><title>_get_active_constraints (agentlib_mpc\optimization_backends\casadi_\aladin.py:230) (6 samples, 0.17%)</title><rect x="52.2832%" y="260" width="0.1734%" height="15" fill="rgb(216,154,8)" fg:x="1809" fg:w="6"/><text x="52.5332%" y="270.50"></text></g><g><title>_get_active_constraints (agentlib_mpc\optimization_backends\casadi_\aladin.py:232) (8 samples, 0.23%)</title><rect x="52.4566%" y="260" width="0.2312%" height="15" fill="rgb(244,35,45)" fg:x="1815" fg:w="8"/><text x="52.7066%" y="270.50"></text></g><g><title>_get_active_constraints (agentlib_mpc\optimization_backends\casadi_\aladin.py:235) (6 samples, 0.17%)</title><rect x="52.7168%" y="260" width="0.1734%" height="15" fill="rgb(251,115,12)" fg:x="1824" fg:w="6"/><text x="52.9668%" y="270.50"></text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:177) (38 samples, 1.10%)</title><rect x="51.8208%" y="244" width="1.0983%" height="15" fill="rgb(240,54,50)" fg:x="1793" fg:w="38"/><text x="52.0708%" y="254.50"></text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:185) (11 samples, 0.32%)</title><rect x="52.9191%" y="244" width="0.3179%" height="15" fill="rgb(233,84,52)" fg:x="1831" fg:w="11"/><text x="53.1691%" y="254.50"></text></g><g><title>__setitem__ (casadi\casadi.py:10910) (10 samples, 0.29%)</title><rect x="52.9480%" y="260" width="0.2890%" height="15" fill="rgb(207,117,47)" fg:x="1832" fg:w="10"/><text x="53.1980%" y="270.50"></text></g><g><title>set (casadi\casadi.py:9332) (10 samples, 0.29%)</title><rect x="52.9480%" y="276" width="0.2890%" height="15" fill="rgb(249,43,39)" fg:x="1832" fg:w="10"/><text x="53.1980%" y="286.50"></text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:186) (53 samples, 1.53%)</title><rect x="53.2370%" y="244" width="1.5318%" height="15" fill="rgb(209,38,44)" fg:x="1842" fg:w="53"/><text x="53.4870%" y="254.50"></text></g><g><title>__call__ (casadi\casadi.py:23556) (53 samples, 1.53%)</title><rect x="53.2370%" y="260" width="1.5318%" height="15" fill="rgb(236,212,23)" fg:x="1842" fg:w="53"/><text x="53.4870%" y="270.50"></text></g><g><title>call (casadi\casadi.py:20205) (53 samples, 1.53%)</title><rect x="53.2370%" y="276" width="1.5318%" height="15" fill="rgb(242,79,21)" fg:x="1842" fg:w="53"/><text x="53.4870%" y="286.50"></text></g><g><title>elements (casadi\casadi.py:10472) (7 samples, 0.20%)</title><rect x="55.0289%" y="276" width="0.2023%" height="15" fill="rgb(211,96,35)" fg:x="1904" fg:w="7"/><text x="55.2789%" y="286.50"></text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:191) (17 samples, 0.49%)</title><rect x="54.7688%" y="244" width="0.4913%" height="15" fill="rgb(253,215,40)" fg:x="1895" fg:w="17"/><text x="55.0188%" y="254.50"></text></g><g><title>toarray (casadi\casadi.py:11059) (16 samples, 0.46%)</title><rect x="54.7977%" y="260" width="0.4624%" height="15" fill="rgb(211,81,21)" fg:x="1896" fg:w="16"/><text x="55.0477%" y="270.50"></text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:192) (7 samples, 0.20%)</title><rect x="55.2601%" y="244" width="0.2023%" height="15" fill="rgb(208,190,38)" fg:x="1912" fg:w="7"/><text x="55.5101%" y="254.50"></text></g><g><title>toarray (casadi\casadi.py:11059) (7 samples, 0.20%)</title><rect x="55.2601%" y="260" width="0.2023%" height="15" fill="rgb(235,213,38)" fg:x="1912" fg:w="7"/><text x="55.5101%" y="270.50"></text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:193) (4 samples, 0.12%)</title><rect x="55.4624%" y="244" width="0.1156%" height="15" fill="rgb(237,122,38)" fg:x="1919" fg:w="4"/><text x="55.7124%" y="254.50"></text></g><g><title>T (casadi\casadi.py:10893) (4 samples, 0.12%)</title><rect x="55.6647%" y="276" width="0.1156%" height="15" fill="rgb(244,218,35)" fg:x="1926" fg:w="4"/><text x="55.9147%" y="286.50"></text></g><g><title>regularize_h (agentlib_mpc\optimization_backends\casadi_\aladin.py:653) (8 samples, 0.23%)</title><rect x="55.6358%" y="260" width="0.2312%" height="15" fill="rgb(240,68,47)" fg:x="1925" fg:w="8"/><text x="55.8858%" y="270.50"></text></g><g><title>_makearray (numpy\linalg\linalg.py:136) (16 samples, 0.46%)</title><rect x="55.8960%" y="292" width="0.4624%" height="15" fill="rgb(210,16,53)" fg:x="1934" fg:w="16"/><text x="56.1460%" y="302.50"></text></g><g><title>__array__ (casadi\casadi.py:11021) (14 samples, 0.40%)</title><rect x="55.9538%" y="308" width="0.4046%" height="15" fill="rgb(235,124,12)" fg:x="1936" fg:w="14"/><text x="56.2038%" y="318.50"></text></g><g><title>__array_custom__ (casadi\casadi.py:11042) (14 samples, 0.40%)</title><rect x="55.9538%" y="324" width="0.4046%" height="15" fill="rgb(224,169,11)" fg:x="1936" fg:w="14"/><text x="56.2038%" y="334.50"></text></g><g><title>full (casadi\casadi.py:10929) (14 samples, 0.40%)</title><rect x="55.9538%" y="340" width="0.4046%" height="15" fill="rgb(250,166,2)" fg:x="1936" fg:w="14"/><text x="56.2038%" y="350.50"></text></g><g><title>toarray (casadi\casadi.py:11059) (14 samples, 0.40%)</title><rect x="55.9538%" y="356" width="0.4046%" height="15" fill="rgb(242,216,29)" fg:x="1936" fg:w="14"/><text x="56.2038%" y="366.50"></text></g><g><title>eig (numpy\linalg\linalg.py:1326) (17 samples, 0.49%)</title><rect x="55.8960%" y="276" width="0.4913%" height="15" fill="rgb(230,116,27)" fg:x="1934" fg:w="17"/><text x="56.1460%" y="286.50"></text></g><g><title>eig (numpy\linalg\linalg.py:1335) (32 samples, 0.92%)</title><rect x="56.4162%" y="276" width="0.9249%" height="15" fill="rgb(228,99,48)" fg:x="1952" fg:w="32"/><text x="56.6662%" y="286.50"></text></g><g><title>regularize_h (agentlib_mpc\optimization_backends\casadi_\aladin.py:656) (54 samples, 1.56%)</title><rect x="55.8671%" y="260" width="1.5607%" height="15" fill="rgb(253,11,6)" fg:x="1933" fg:w="54"/><text x="56.1171%" y="270.50"></text></g><g><title>regularize_h (agentlib_mpc\optimization_backends\casadi_\aladin.py:665) (18 samples, 0.52%)</title><rect x="57.4855%" y="260" width="0.5202%" height="15" fill="rgb(247,143,39)" fg:x="1989" fg:w="18"/><text x="57.7355%" y="270.50"></text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:197) (85 samples, 2.46%)</title><rect x="55.5780%" y="244" width="2.4566%" height="15" fill="rgb(236,97,10)" fg:x="1923" fg:w="85"/><text x="55.8280%" y="254.50">so..</text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:200) (12 samples, 0.35%)</title><rect x="58.0347%" y="244" width="0.3468%" height="15" fill="rgb(233,208,19)" fg:x="2008" fg:w="12"/><text x="58.2847%" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (agentlib_mpc\optimization_backends\casadi_\aladin.py:201) (12 samples, 0.35%)</title><rect x="58.0347%" y="260" width="0.3468%" height="15" fill="rgb(216,164,2)" fg:x="2008" fg:w="12"/><text x="58.2847%" y="270.50"></text></g><g><title>__array__ (casadi\casadi.py:11021) (10 samples, 0.29%)</title><rect x="58.0925%" y="276" width="0.2890%" height="15" fill="rgb(220,129,5)" fg:x="2010" fg:w="10"/><text x="58.3425%" y="286.50"></text></g><g><title>__array_custom__ (casadi\casadi.py:11042) (9 samples, 0.26%)</title><rect x="58.1214%" y="292" width="0.2601%" height="15" fill="rgb(242,17,10)" fg:x="2011" fg:w="9"/><text x="58.3714%" y="302.50"></text></g><g><title>full (casadi\casadi.py:10929) (9 samples, 0.26%)</title><rect x="58.1214%" y="308" width="0.2601%" height="15" fill="rgb(242,107,0)" fg:x="2011" fg:w="9"/><text x="58.3714%" y="318.50"></text></g><g><title>toarray (casadi\casadi.py:11059) (7 samples, 0.20%)</title><rect x="58.1792%" y="324" width="0.2023%" height="15" fill="rgb(251,28,31)" fg:x="2013" fg:w="7"/><text x="58.4292%" y="334.50"></text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:206) (9 samples, 0.26%)</title><rect x="58.3815%" y="244" width="0.2601%" height="15" fill="rgb(233,223,10)" fg:x="2020" fg:w="9"/><text x="58.6315%" y="254.50"></text></g><g><title>__call__ (casadi\casadi.py:23556) (9 samples, 0.26%)</title><rect x="58.3815%" y="260" width="0.2601%" height="15" fill="rgb(215,21,27)" fg:x="2020" fg:w="9"/><text x="58.6315%" y="270.50"></text></g><g><title>call (casadi\casadi.py:20205) (9 samples, 0.26%)</title><rect x="58.3815%" y="276" width="0.2601%" height="15" fill="rgb(232,23,21)" fg:x="2020" fg:w="9"/><text x="58.6315%" y="286.50"></text></g><g><title>_process_solution (agentlib_mpc\optimization_backends\casadi_\core\discretization.py:259) (11 samples, 0.32%)</title><rect x="58.6994%" y="260" width="0.3179%" height="15" fill="rgb(244,5,23)" fg:x="2031" fg:w="11"/><text x="58.9494%" y="270.50"></text></g><g><title>__call__ (casadi\casadi.py:23556) (11 samples, 0.32%)</title><rect x="58.6994%" y="276" width="0.3179%" height="15" fill="rgb(226,81,46)" fg:x="2031" fg:w="11"/><text x="58.9494%" y="286.50"></text></g><g><title>call (casadi\casadi.py:20205) (11 samples, 0.32%)</title><rect x="58.6994%" y="292" width="0.3179%" height="15" fill="rgb(247,70,30)" fg:x="2031" fg:w="11"/><text x="58.9494%" y="302.50"></text></g><g><title>make_results_view (agentlib_mpc\optimization_backends\casadi_\aladin.py:414) (4 samples, 0.12%)</title><rect x="59.0173%" y="276" width="0.1156%" height="15" fill="rgb(212,68,19)" fg:x="2042" fg:w="4"/><text x="59.2673%" y="286.50"></text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\core\casadi_backend.py:129) (1,800 samples, 52.02%)</title><rect x="7.3410%" y="228" width="52.0231%" height="15" fill="rgb(240,187,13)" fg:x="254" fg:w="1800"/><text x="7.5910%" y="238.50">solve (agentlib_mpc\optimization_backends\casadi_\core\casadi_backend.py:129)</text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\aladin.py:208) (25 samples, 0.72%)</title><rect x="58.6416%" y="244" width="0.7225%" height="15" fill="rgb(223,113,26)" fg:x="2029" fg:w="25"/><text x="58.8916%" y="254.50"></text></g><g><title>_process_solution (agentlib_mpc\optimization_backends\casadi_\core\discretization.py:261) (12 samples, 0.35%)</title><rect x="59.0173%" y="260" width="0.3468%" height="15" fill="rgb(206,192,2)" fg:x="2042" fg:w="12"/><text x="59.2673%" y="270.50"></text></g><g><title>stats (casadi\casadi.py:21672) (8 samples, 0.23%)</title><rect x="59.1329%" y="276" width="0.2312%" height="15" fill="rgb(241,108,4)" fg:x="2046" fg:w="8"/><text x="59.3829%" y="286.50"></text></g><g><title>__init__ (pandas\core\frame.py:841) (6 samples, 0.17%)</title><rect x="59.6532%" y="276" width="0.1734%" height="15" fill="rgb(247,173,49)" fg:x="2064" fg:w="6"/><text x="59.9032%" y="286.50"></text></g><g><title>__array__ (casadi\casadi.py:11021) (5 samples, 0.14%)</title><rect x="59.6821%" y="292" width="0.1445%" height="15" fill="rgb(224,114,35)" fg:x="2065" fg:w="5"/><text x="59.9321%" y="302.50"></text></g><g><title>__array_custom__ (casadi\casadi.py:11042) (5 samples, 0.14%)</title><rect x="59.6821%" y="308" width="0.1445%" height="15" fill="rgb(245,159,27)" fg:x="2065" fg:w="5"/><text x="59.9321%" y="318.50"></text></g><g><title>full (casadi\casadi.py:10929) (5 samples, 0.14%)</title><rect x="59.6821%" y="324" width="0.1445%" height="15" fill="rgb(245,172,44)" fg:x="2065" fg:w="5"/><text x="59.9321%" y="334.50"></text></g><g><title>toarray (casadi\casadi.py:11059) (5 samples, 0.14%)</title><rect x="59.6821%" y="340" width="0.1445%" height="15" fill="rgb(236,23,11)" fg:x="2065" fg:w="5"/><text x="59.9321%" y="350.50"></text></g><g><title>sanitize_array (pandas\core\construction.py:654) (8 samples, 0.23%)</title><rect x="60.2023%" y="356" width="0.2312%" height="15" fill="rgb(205,117,38)" fg:x="2083" fg:w="8"/><text x="60.4523%" y="366.50"></text></g><g><title>maybe_convert_platform (pandas\core\dtypes\cast.py:138) (6 samples, 0.17%)</title><rect x="60.2601%" y="372" width="0.1734%" height="15" fill="rgb(237,72,25)" fg:x="2085" fg:w="6"/><text x="60.5101%" y="382.50"></text></g><g><title>__new__ (pandas\core\indexes\base.py:565) (13 samples, 0.38%)</title><rect x="60.0867%" y="340" width="0.3757%" height="15" fill="rgb(244,70,9)" fg:x="2079" fg:w="13"/><text x="60.3367%" y="350.50"></text></g><g><title>ndarray_to_mgr (pandas\core\internals\construction.py:332) (19 samples, 0.55%)</title><rect x="60.0289%" y="292" width="0.5491%" height="15" fill="rgb(217,125,39)" fg:x="2077" fg:w="19"/><text x="60.2789%" y="302.50"></text></g><g><title>_get_axes (pandas\core\internals\construction.py:751) (19 samples, 0.55%)</title><rect x="60.0289%" y="308" width="0.5491%" height="15" fill="rgb(235,36,10)" fg:x="2077" fg:w="19"/><text x="60.2789%" y="318.50"></text></g><g><title>ensure_index (pandas\core\indexes\base.py:7647) (18 samples, 0.52%)</title><rect x="60.0578%" y="324" width="0.5202%" height="15" fill="rgb(251,123,47)" fg:x="2078" fg:w="18"/><text x="60.3078%" y="334.50"></text></g><g><title>save_result_df (agentlib_mpc\optimization_backends\casadi_\admm.py:393) (47 samples, 1.36%)</title><rect x="59.3931%" y="244" width="1.3584%" height="15" fill="rgb(221,13,13)" fg:x="2055" fg:w="47"/><text x="59.6431%" y="254.50"></text></g><g><title>df (agentlib_mpc\optimization_backends\casadi_\core\discretization.py:69) (46 samples, 1.33%)</title><rect x="59.4220%" y="260" width="1.3295%" height="15" fill="rgb(238,131,9)" fg:x="2056" fg:w="46"/><text x="59.6720%" y="270.50"></text></g><g><title>__init__ (pandas\core\frame.py:867) (32 samples, 0.92%)</title><rect x="59.8266%" y="276" width="0.9249%" height="15" fill="rgb(211,50,8)" fg:x="2070" fg:w="32"/><text x="60.0766%" y="286.50"></text></g><g><title>&lt;lambda&gt; (agentlib_mpc\optimization_backends\casadi_\admm.py:394) (4 samples, 0.12%)</title><rect x="60.8092%" y="260" width="0.1156%" height="15" fill="rgb(245,182,24)" fg:x="2104" fg:w="4"/><text x="61.0592%" y="270.50"></text></g><g><title>_set_axis (pandas\core\generic.py:813) (6 samples, 0.17%)</title><rect x="60.9538%" y="276" width="0.1734%" height="15" fill="rgb(242,14,37)" fg:x="2109" fg:w="6"/><text x="61.2038%" y="286.50"></text></g><g><title>ensure_index (pandas\core\indexes\base.py:7647) (4 samples, 0.12%)</title><rect x="61.0116%" y="292" width="0.1156%" height="15" fill="rgb(246,228,12)" fg:x="2111" fg:w="4"/><text x="61.2616%" y="302.50"></text></g><g><title>save_result_df (agentlib_mpc\optimization_backends\casadi_\admm.py:394) (15 samples, 0.43%)</title><rect x="60.7514%" y="244" width="0.4335%" height="15" fill="rgb(213,55,15)" fg:x="2102" fg:w="15"/><text x="61.0014%" y="254.50"></text></g><g><title>__setattr__ (pandas\core\generic.py:6313) (8 samples, 0.23%)</title><rect x="60.9538%" y="260" width="0.2312%" height="15" fill="rgb(209,9,3)" fg:x="2109" fg:w="8"/><text x="61.2038%" y="270.50"></text></g><g><title>save_result_df (agentlib_mpc\optimization_backends\casadi_\admm.py:399) (5 samples, 0.14%)</title><rect x="61.2139%" y="244" width="0.1445%" height="15" fill="rgb(230,59,30)" fg:x="2118" fg:w="5"/><text x="61.4639%" y="254.50"></text></g><g><title>stats_line (agentlib_mpc\optimization_backends\casadi_\core\discretization.py:81) (4 samples, 0.12%)</title><rect x="61.2428%" y="260" width="0.1156%" height="15" fill="rgb(209,121,21)" fg:x="2119" fg:w="4"/><text x="61.4928%" y="270.50"></text></g><g><title>save_result_df (agentlib_mpc\optimization_backends\casadi_\admm.py:406) (26 samples, 0.75%)</title><rect x="61.3584%" y="244" width="0.7514%" height="15" fill="rgb(220,109,13)" fg:x="2123" fg:w="26"/><text x="61.6084%" y="254.50"></text></g><g><title>_get_values_for_csv (pandas\core\indexes\base.py:1478) (4 samples, 0.12%)</title><rect x="62.3699%" y="356" width="0.1156%" height="15" fill="rgb(232,18,1)" fg:x="2158" fg:w="4"/><text x="62.6199%" y="366.50"></text></g><g><title>_get_values_for_csv (pandas\core\indexes\multi.py:1396) (5 samples, 0.14%)</title><rect x="62.3699%" y="340" width="0.1445%" height="15" fill="rgb(215,41,42)" fg:x="2158" fg:w="5"/><text x="62.6199%" y="350.50"></text></g><g><title>__new__ (pandas\core\indexes\multi.py:350) (15 samples, 0.43%)</title><rect x="62.6590%" y="356" width="0.4335%" height="15" fill="rgb(224,123,36)" fg:x="2168" fg:w="15"/><text x="62.9090%" y="366.50"></text></g><g><title>_set_levels (pandas\core\indexes\multi.py:924) (15 samples, 0.43%)</title><rect x="62.6590%" y="372" width="0.4335%" height="15" fill="rgb(240,125,3)" fg:x="2168" fg:w="15"/><text x="62.9090%" y="382.50"></text></g><g><title>&lt;genexpr&gt; (pandas\core\indexes\multi.py:925) (14 samples, 0.40%)</title><rect x="62.6879%" y="388" width="0.4046%" height="15" fill="rgb(205,98,50)" fg:x="2169" fg:w="14"/><text x="62.9379%" y="398.50"></text></g><g><title>ensure_index (pandas\core\indexes\base.py:7649) (11 samples, 0.32%)</title><rect x="62.7746%" y="404" width="0.3179%" height="15" fill="rgb(205,185,37)" fg:x="2172" fg:w="11"/><text x="63.0246%" y="414.50"></text></g><g><title>__new__ (pandas\core\indexes\base.py:565) (7 samples, 0.20%)</title><rect x="62.8902%" y="420" width="0.2023%" height="15" fill="rgb(238,207,15)" fg:x="2176" fg:w="7"/><text x="63.1402%" y="430.50"></text></g><g><title>_get_values_for_csv (pandas\core\indexes\multi.py:1415) (17 samples, 0.49%)</title><rect x="62.6301%" y="340" width="0.4913%" height="15" fill="rgb(213,199,42)" fg:x="2167" fg:w="17"/><text x="62.8801%" y="350.50"></text></g><g><title>to_csv (pandas\io\formats\format.py:1012) (40 samples, 1.16%)</title><rect x="62.2543%" y="292" width="1.1561%" height="15" fill="rgb(235,201,11)" fg:x="2154" fg:w="40"/><text x="62.5043%" y="302.50"></text></g><g><title>__init__ (pandas\io\formats\csvs.py:98) (38 samples, 1.10%)</title><rect x="62.3121%" y="308" width="1.0983%" height="15" fill="rgb(207,46,11)" fg:x="2156" fg:w="38"/><text x="62.5621%" y="318.50"></text></g><g><title>_initialize_columns (pandas\io\formats\csvs.py:172) (38 samples, 1.10%)</title><rect x="62.3121%" y="324" width="1.0983%" height="15" fill="rgb(241,35,35)" fg:x="2156" fg:w="38"/><text x="62.5621%" y="334.50"></text></g><g><title>_get_values_for_csv (pandas\core\indexes\multi.py:1422) (10 samples, 0.29%)</title><rect x="63.1214%" y="340" width="0.2890%" height="15" fill="rgb(243,32,47)" fg:x="2184" fg:w="10"/><text x="63.3714%" y="350.50"></text></g><g><title>save (pandas\io\formats\csvs.py:251) (5 samples, 0.14%)</title><rect x="63.4104%" y="308" width="0.1445%" height="15" fill="rgb(247,202,23)" fg:x="2194" fg:w="5"/><text x="63.6604%" y="318.50"></text></g><g><title>_save_chunk (pandas\io\formats\csvs.py:318) (9 samples, 0.26%)</title><rect x="63.5549%" y="356" width="0.2601%" height="15" fill="rgb(219,102,11)" fg:x="2199" fg:w="9"/><text x="63.8049%" y="366.50"></text></g><g><title>__getitem__ (pandas\core\indexing.py:1191) (6 samples, 0.17%)</title><rect x="63.6416%" y="372" width="0.1734%" height="15" fill="rgb(243,110,44)" fg:x="2202" fg:w="6"/><text x="63.8916%" y="382.50"></text></g><g><title>_getitem_axis (pandas\core\indexing.py:1729) (5 samples, 0.14%)</title><rect x="63.6705%" y="388" width="0.1445%" height="15" fill="rgb(222,74,54)" fg:x="2203" fg:w="5"/><text x="63.9205%" y="398.50"></text></g><g><title>_get_slice_axis (pandas\core\indexing.py:1765) (5 samples, 0.14%)</title><rect x="63.6705%" y="404" width="0.1445%" height="15" fill="rgb(216,99,12)" fg:x="2203" fg:w="5"/><text x="63.9205%" y="414.50"></text></g><g><title>get_values_for_csv (pandas\core\indexes\base.py:7834) (14 samples, 0.40%)</title><rect x="63.8150%" y="436" width="0.4046%" height="15" fill="rgb(226,22,26)" fg:x="2208" fg:w="14"/><text x="64.0650%" y="446.50"></text></g><g><title>_get_values_for_csv (pandas\core\frame.py:1410) (20 samples, 0.58%)</title><rect x="63.8150%" y="372" width="0.5780%" height="15" fill="rgb(217,163,10)" fg:x="2208" fg:w="20"/><text x="64.0650%" y="382.50"></text></g><g><title>get_values_for_csv (pandas\core\internals\managers.py:466) (20 samples, 0.58%)</title><rect x="63.8150%" y="388" width="0.5780%" height="15" fill="rgb(213,25,53)" fg:x="2208" fg:w="20"/><text x="64.0650%" y="398.50"></text></g><g><title>apply (pandas\core\internals\managers.py:363) (20 samples, 0.58%)</title><rect x="63.8150%" y="404" width="0.5780%" height="15" fill="rgb(252,105,26)" fg:x="2208" fg:w="20"/><text x="64.0650%" y="414.50"></text></g><g><title>get_values_for_csv (pandas\core\internals\blocks.py:780) (20 samples, 0.58%)</title><rect x="63.8150%" y="420" width="0.5780%" height="15" fill="rgb(220,39,43)" fg:x="2208" fg:w="20"/><text x="64.0650%" y="430.50"></text></g><g><title>get_values_for_csv (pandas\core\indexes\base.py:7839) (6 samples, 0.17%)</title><rect x="64.2197%" y="436" width="0.1734%" height="15" fill="rgb(229,68,48)" fg:x="2222" fg:w="6"/><text x="64.4697%" y="446.50"></text></g><g><title>_save_chunk (pandas\io\formats\csvs.py:320) (21 samples, 0.61%)</title><rect x="63.8150%" y="356" width="0.6069%" height="15" fill="rgb(252,8,32)" fg:x="2208" fg:w="21"/><text x="64.0650%" y="366.50"></text></g><g><title>iget_values (pandas\core\internals\managers.py:1034) (5 samples, 0.14%)</title><rect x="64.5376%" y="404" width="0.1445%" height="15" fill="rgb(223,20,43)" fg:x="2233" fg:w="5"/><text x="64.7876%" y="414.50"></text></g><g><title>_save_chunk (pandas\io\formats\csvs.py:321) (10 samples, 0.29%)</title><rect x="64.4220%" y="356" width="0.2890%" height="15" fill="rgb(229,81,49)" fg:x="2229" fg:w="10"/><text x="64.6720%" y="366.50"></text></g><g><title>_iter_column_arrays (pandas\core\frame.py:4039) (7 samples, 0.20%)</title><rect x="64.5087%" y="372" width="0.2023%" height="15" fill="rgb(236,28,36)" fg:x="2232" fg:w="7"/><text x="64.7587%" y="382.50"></text></g><g><title>_get_column_array (pandas\core\frame.py:4025) (6 samples, 0.17%)</title><rect x="64.5376%" y="388" width="0.1734%" height="15" fill="rgb(249,185,26)" fg:x="2233" fg:w="6"/><text x="64.7876%" y="398.50"></text></g><g><title>get_values_for_csv (pandas\core\indexes\base.py:7864) (4 samples, 0.12%)</title><rect x="64.7399%" y="388" width="0.1156%" height="15" fill="rgb(249,174,33)" fg:x="2240" fg:w="4"/><text x="64.9899%" y="398.50"></text></g><g><title>isna (pandas\core\dtypes\missing.py:178) (4 samples, 0.12%)</title><rect x="64.7399%" y="404" width="0.1156%" height="15" fill="rgb(233,201,37)" fg:x="2240" fg:w="4"/><text x="64.9899%" y="414.50"></text></g><g><title>_save_chunk (pandas\io\formats\csvs.py:323) (6 samples, 0.17%)</title><rect x="64.7110%" y="356" width="0.1734%" height="15" fill="rgb(221,78,26)" fg:x="2239" fg:w="6"/><text x="64.9610%" y="366.50"></text></g><g><title>_get_values_for_csv (pandas\core\indexes\base.py:1478) (6 samples, 0.17%)</title><rect x="64.7110%" y="372" width="0.1734%" height="15" fill="rgb(250,127,30)" fg:x="2239" fg:w="6"/><text x="64.9610%" y="382.50"></text></g><g><title>save_result_df (agentlib_mpc\optimization_backends\casadi_\admm.py:408) (103 samples, 2.98%)</title><rect x="62.1387%" y="244" width="2.9769%" height="15" fill="rgb(230,49,44)" fg:x="2150" fg:w="103"/><text x="62.3887%" y="254.50">sav..</text></g><g><title>wrapper (pandas\util\_decorators.py:333) (103 samples, 2.98%)</title><rect x="62.1387%" y="260" width="2.9769%" height="15" fill="rgb(229,67,23)" fg:x="2150" fg:w="103"/><text x="62.3887%" y="270.50">wra..</text></g><g><title>to_csv (pandas\core\generic.py:3967) (101 samples, 2.92%)</title><rect x="62.1965%" y="276" width="2.9191%" height="15" fill="rgb(249,83,47)" fg:x="2152" fg:w="101"/><text x="62.4465%" y="286.50">to..</text></g><g><title>to_csv (pandas\io\formats\format.py:1014) (59 samples, 1.71%)</title><rect x="63.4104%" y="292" width="1.7052%" height="15" fill="rgb(215,43,3)" fg:x="2194" fg:w="59"/><text x="63.6604%" y="302.50"></text></g><g><title>save (pandas\io\formats\csvs.py:270) (54 samples, 1.56%)</title><rect x="63.5549%" y="308" width="1.5607%" height="15" fill="rgb(238,154,13)" fg:x="2199" fg:w="54"/><text x="63.8049%" y="318.50"></text></g><g><title>_save (pandas\io\formats\csvs.py:275) (54 samples, 1.56%)</title><rect x="63.5549%" y="324" width="1.5607%" height="15" fill="rgb(219,56,2)" fg:x="2199" fg:w="54"/><text x="63.8049%" y="334.50"></text></g><g><title>_save_body (pandas\io\formats\csvs.py:313) (54 samples, 1.56%)</title><rect x="63.5549%" y="340" width="1.5607%" height="15" fill="rgb(233,0,4)" fg:x="2199" fg:w="54"/><text x="63.8049%" y="350.50"></text></g><g><title>_save_chunk (pandas\io\formats\csvs.py:324) (8 samples, 0.23%)</title><rect x="64.8844%" y="356" width="0.2312%" height="15" fill="rgb(235,30,7)" fg:x="2245" fg:w="8"/><text x="65.1344%" y="366.50"></text></g><g><title>save_result_df (agentlib_mpc\optimization_backends\casadi_\admm.py:410) (15 samples, 0.43%)</title><rect x="65.1156%" y="244" width="0.4335%" height="15" fill="rgb(250,79,13)" fg:x="2253" fg:w="15"/><text x="65.3656%" y="254.50"></text></g><g><title>optimize (agentlib_mpc\modules\dmpc\aladin\aladin_coordinated.py:198) (2,127 samples, 61.47%)</title><rect x="4.1040%" y="212" width="61.4740%" height="15" fill="rgb(211,146,34)" fg:x="142" fg:w="2127"/><text x="4.3540%" y="222.50">optimize (agentlib_mpc\modules\dmpc\aladin\aladin_coordinated.py:198)</text></g><g><title>solve (agentlib_mpc\optimization_backends\casadi_\core\casadi_backend.py:130) (215 samples, 6.21%)</title><rect x="59.3642%" y="228" width="6.2139%" height="15" fill="rgb(228,22,38)" fg:x="2054" fg:w="215"/><text x="59.6142%" y="238.50">solve (a..</text></g><g><title>T (casadi\casadi.py:10893) (4 samples, 0.12%)</title><rect x="65.6358%" y="260" width="0.1156%" height="15" fill="rgb(235,168,5)" fg:x="2271" fg:w="4"/><text x="65.8858%" y="270.50"></text></g><g><title>get_sensitivities (agentlib_mpc\optimization_backends\casadi_\aladin.py:699) (7 samples, 0.20%)</title><rect x="65.5780%" y="228" width="0.2023%" height="15" fill="rgb(221,155,16)" fg:x="2269" fg:w="7"/><text x="65.8280%" y="238.50"></text></g><g><title>toarray (casadi\casadi.py:11059) (6 samples, 0.17%)</title><rect x="65.6069%" y="244" width="0.1734%" height="15" fill="rgb(215,215,53)" fg:x="2270" fg:w="6"/><text x="65.8569%" y="254.50"></text></g><g><title>optimize (agentlib_mpc\modules\dmpc\aladin\aladin_coordinated.py:201) (12 samples, 0.35%)</title><rect x="65.5780%" y="212" width="0.3468%" height="15" fill="rgb(223,4,10)" fg:x="2269" fg:w="12"/><text x="65.8280%" y="222.50"></text></g><g><title>get_sensitivities (agentlib_mpc\optimization_backends\casadi_\aladin.py:700) (5 samples, 0.14%)</title><rect x="65.7803%" y="228" width="0.1445%" height="15" fill="rgb(234,103,6)" fg:x="2276" fg:w="5"/><text x="66.0303%" y="238.50"></text></g><g><title>toarray (casadi\casadi.py:11059) (4 samples, 0.12%)</title><rect x="65.8092%" y="244" width="0.1156%" height="15" fill="rgb(227,97,0)" fg:x="2277" fg:w="4"/><text x="66.0592%" y="254.50"></text></g><g><title>set (agentlib\core\module.py:571) (4 samples, 0.12%)</title><rect x="65.9249%" y="228" width="0.1156%" height="15" fill="rgb(234,150,53)" fg:x="2281" fg:w="4"/><text x="66.1749%" y="238.50"></text></g><g><title>set (agentlib\core\module.py:574) (6 samples, 0.17%)</title><rect x="66.0405%" y="228" width="0.1734%" height="15" fill="rgb(228,201,54)" fg:x="2285" fg:w="6"/><text x="66.2905%" y="238.50"></text></g><g><title>send_variable (agentlib\core\data_broker.py:197) (5 samples, 0.14%)</title><rect x="66.0694%" y="244" width="0.1445%" height="15" fill="rgb(222,22,37)" fg:x="2286" fg:w="5"/><text x="66.3194%" y="254.50"></text></g><g><title>_send_variable_to_modules (agentlib\core\data_broker.py:370) (4 samples, 0.12%)</title><rect x="66.0983%" y="260" width="0.1156%" height="15" fill="rgb(237,53,32)" fg:x="2287" fg:w="4"/><text x="66.3483%" y="270.50"></text></g><g><title>_send_variable_to_modules (agentlib\core\data_broker.py:206) (4 samples, 0.12%)</title><rect x="66.0983%" y="276" width="0.1156%" height="15" fill="rgb(233,25,53)" fg:x="2287" fg:w="4"/><text x="66.3483%" y="286.50"></text></g><g><title>copy (copy.py:102) (6 samples, 0.17%)</title><rect x="66.3006%" y="260" width="0.1734%" height="15" fill="rgb(210,40,34)" fg:x="2294" fg:w="6"/><text x="66.5506%" y="270.50"></text></g><g><title>copy (agentlib\core\datamodels.py:730) (13 samples, 0.38%)</title><rect x="66.2717%" y="244" width="0.3757%" height="15" fill="rgb(241,220,44)" fg:x="2293" fg:w="13"/><text x="66.5217%" y="254.50"></text></g><g><title>copy (copy.py:92) (5 samples, 0.14%)</title><rect x="66.5029%" y="260" width="0.1445%" height="15" fill="rgb(235,28,35)" fg:x="2301" fg:w="5"/><text x="66.7529%" y="270.50"></text></g><g><title>slots_getstate (attr\_make.py:977) (4 samples, 0.12%)</title><rect x="66.5318%" y="276" width="0.1156%" height="15" fill="rgb(210,56,17)" fg:x="2302" fg:w="4"/><text x="66.7818%" y="286.50"></text></g><g><title>&lt;dictcomp&gt; (attr\_make.py:977) (4 samples, 0.12%)</title><rect x="66.5318%" y="292" width="0.1156%" height="15" fill="rgb(224,130,29)" fg:x="2302" fg:w="4"/><text x="66.7818%" y="302.50"></text></g><g><title>copy (agentlib\core\datamodels.py:735) (4 samples, 0.12%)</title><rect x="66.6474%" y="244" width="0.1156%" height="15" fill="rgb(235,212,8)" fg:x="2306" fg:w="4"/><text x="66.8974%" y="254.50"></text></g><g><title>__setattr__ (attr\_make.py:1119) (4 samples, 0.12%)</title><rect x="66.6474%" y="260" width="0.1156%" height="15" fill="rgb(223,33,50)" fg:x="2306" fg:w="4"/><text x="66.8974%" y="270.50"></text></g><g><title>wrapped_pipe (attr\setters.py:22) (4 samples, 0.12%)</title><rect x="66.6474%" y="276" width="0.1156%" height="15" fill="rgb(219,149,13)" fg:x="2306" fg:w="4"/><text x="66.8974%" y="286.50"></text></g><g><title>set (agentlib\core\module.py:575) (21 samples, 0.61%)</title><rect x="66.2139%" y="228" width="0.6069%" height="15" fill="rgb(250,156,29)" fg:x="2291" fg:w="21"/><text x="66.4639%" y="238.50"></text></g><g><title>to_json (agentlib_mpc\data_structures\coordinator_datatypes.py:100) (15 samples, 0.43%)</title><rect x="66.8208%" y="228" width="0.4335%" height="15" fill="rgb(216,193,19)" fg:x="2312" fg:w="15"/><text x="67.0708%" y="238.50"></text></g><g><title>_execute_callback_simpy (agentlib\core\data_broker.py:380) (2,318 samples, 66.99%)</title><rect x="0.2890%" y="148" width="66.9942%" height="15" fill="rgb(216,135,14)" fg:x="10" fg:w="2318"/><text x="0.5390%" y="158.50">_execute_callback_simpy (agentlib\core\data_broker.py:380)</text></g><g><title>_execute_callbacks (agentlib\core\data_broker.py:230) (2,281 samples, 65.92%)</title><rect x="1.3584%" y="164" width="65.9249%" height="15" fill="rgb(241,47,5)" fg:x="47" fg:w="2281"/><text x="1.6084%" y="174.50">_execute_callbacks (agentlib\core\data_broker.py:230)</text></g><g><title>_run_callbacks (agentlib\core\data_broker.py:386) (2,280 samples, 65.90%)</title><rect x="1.3873%" y="180" width="65.8960%" height="15" fill="rgb(233,42,35)" fg:x="48" fg:w="2280"/><text x="1.6373%" y="190.50">_run_callbacks (agentlib\core\data_broker.py:386)</text></g><g><title>callback_copy (agentlib\core\data_broker.py:154) (2,243 samples, 64.83%)</title><rect x="2.4566%" y="196" width="64.8266%" height="15" fill="rgb(231,13,6)" fg:x="85" fg:w="2243"/><text x="2.7066%" y="206.50">callback_copy (agentlib\core\data_broker.py:154)</text></g><g><title>optimize (agentlib_mpc\modules\dmpc\aladin\aladin_coordinated.py:203) (47 samples, 1.36%)</title><rect x="65.9249%" y="212" width="1.3584%" height="15" fill="rgb(207,181,40)" fg:x="2281" fg:w="47"/><text x="66.1749%" y="222.50"></text></g><g><title>_send_simpy (agentlib\modules\communicator\communicator.py:207) (4 samples, 0.12%)</title><rect x="67.3121%" y="148" width="0.1156%" height="15" fill="rgb(254,173,49)" fg:x="2329" fg:w="4"/><text x="67.5621%" y="158.50"></text></g><g><title>copy (copy.py:102) (7 samples, 0.20%)</title><rect x="67.5723%" y="196" width="0.2023%" height="15" fill="rgb(221,1,38)" fg:x="2338" fg:w="7"/><text x="67.8223%" y="206.50"></text></g><g><title>copy (agentlib\core\datamodels.py:730) (12 samples, 0.35%)</title><rect x="67.5723%" y="180" width="0.3468%" height="15" fill="rgb(206,124,46)" fg:x="2338" fg:w="12"/><text x="67.8223%" y="190.50"></text></g><g><title>_send_simpy (agentlib\modules\communicator\communicator.py:208) (25 samples, 0.72%)</title><rect x="67.4277%" y="148" width="0.7225%" height="15" fill="rgb(249,21,11)" fg:x="2333" fg:w="25"/><text x="67.6777%" y="158.50"></text></g><g><title>send_variable (agentlib\core\data_broker.py:195) (24 samples, 0.69%)</title><rect x="67.4566%" y="164" width="0.6936%" height="15" fill="rgb(222,201,40)" fg:x="2334" fg:w="24"/><text x="67.7066%" y="174.50"></text></g><g><title>copy (agentlib\core\datamodels.py:732) (8 samples, 0.23%)</title><rect x="67.9191%" y="180" width="0.2312%" height="15" fill="rgb(235,61,29)" fg:x="2350" fg:w="8"/><text x="68.1691%" y="190.50"></text></g><g><title>deepcopy (copy.py:146) (5 samples, 0.14%)</title><rect x="68.0058%" y="196" width="0.1445%" height="15" fill="rgb(219,207,3)" fg:x="2353" fg:w="5"/><text x="68.2558%" y="206.50"></text></g><g><title>_deepcopy_list (copy.py:206) (5 samples, 0.14%)</title><rect x="68.0058%" y="212" width="0.1445%" height="15" fill="rgb(222,56,46)" fg:x="2353" fg:w="5"/><text x="68.2558%" y="222.50"></text></g><g><title>copy (agentlib\core\datamodels.py:730) (4 samples, 0.12%)</title><rect x="68.3237%" y="212" width="0.1156%" height="15" fill="rgb(239,76,54)" fg:x="2364" fg:w="4"/><text x="68.5737%" y="222.50"></text></g><g><title>set (agentlib\core\module.py:575) (7 samples, 0.20%)</title><rect x="68.2948%" y="196" width="0.2023%" height="15" fill="rgb(231,124,27)" fg:x="2363" fg:w="7"/><text x="68.5448%" y="206.50"></text></g><g><title>_fast_process (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:192) (14 samples, 0.40%)</title><rect x="68.1503%" y="164" width="0.4046%" height="15" fill="rgb(249,195,6)" fg:x="2358" fg:w="14"/><text x="68.4003%" y="174.50"></text></g><g><title>trigger_optimizations (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:290) (14 samples, 0.40%)</title><rect x="68.1503%" y="180" width="0.4046%" height="15" fill="rgb(237,174,47)" fg:x="2358" fg:w="14"/><text x="68.4003%" y="190.50"></text></g><g><title>makeRecord (agentlib\core\logging_.py:29) (5 samples, 0.14%)</title><rect x="68.6416%" y="228" width="0.1445%" height="15" fill="rgb(206,201,31)" fg:x="2375" fg:w="5"/><text x="68.8916%" y="238.50"></text></g><g><title>makeRecord (logging\__init__.py:1601) (5 samples, 0.14%)</title><rect x="68.6416%" y="244" width="0.1445%" height="15" fill="rgb(231,57,52)" fg:x="2375" fg:w="5"/><text x="68.8916%" y="254.50"></text></g><g><title>_log (logging\__init__.py:1632) (6 samples, 0.17%)</title><rect x="68.6416%" y="212" width="0.1734%" height="15" fill="rgb(248,177,22)" fg:x="2375" fg:w="6"/><text x="68.8916%" y="222.50"></text></g><g><title>emit (logging\__init__.py:1110) (5 samples, 0.14%)</title><rect x="68.8439%" y="276" width="0.1445%" height="15" fill="rgb(215,211,37)" fg:x="2382" fg:w="5"/><text x="69.0939%" y="286.50"></text></g><g><title>format (logging\__init__.py:953) (5 samples, 0.14%)</title><rect x="68.8439%" y="292" width="0.1445%" height="15" fill="rgb(241,128,51)" fg:x="2382" fg:w="5"/><text x="69.0939%" y="302.50"></text></g><g><title>format (logging\__init__.py:690) (5 samples, 0.14%)</title><rect x="68.8439%" y="308" width="0.1445%" height="15" fill="rgb(227,165,31)" fg:x="2382" fg:w="5"/><text x="69.0939%" y="318.50"></text></g><g><title>_wait_for_ready (agentlib_mpc\modules\dmpc\coordinator.py:437) (19 samples, 0.55%)</title><rect x="68.5549%" y="180" width="0.5491%" height="15" fill="rgb(228,167,24)" fg:x="2372" fg:w="19"/><text x="68.8049%" y="190.50"></text></g><g><title>info (logging\__init__.py:1489) (19 samples, 0.55%)</title><rect x="68.5549%" y="196" width="0.5491%" height="15" fill="rgb(228,143,12)" fg:x="2372" fg:w="19"/><text x="68.8049%" y="206.50"></text></g><g><title>_log (logging\__init__.py:1634) (10 samples, 0.29%)</title><rect x="68.8150%" y="212" width="0.2890%" height="15" fill="rgb(249,149,8)" fg:x="2381" fg:w="10"/><text x="69.0650%" y="222.50"></text></g><g><title>handle (logging\__init__.py:1644) (10 samples, 0.29%)</title><rect x="68.8150%" y="228" width="0.2890%" height="15" fill="rgb(243,35,44)" fg:x="2381" fg:w="10"/><text x="69.0650%" y="238.50"></text></g><g><title>callHandlers (logging\__init__.py:1706) (9 samples, 0.26%)</title><rect x="68.8439%" y="244" width="0.2601%" height="15" fill="rgb(246,89,9)" fg:x="2382" fg:w="9"/><text x="69.0939%" y="254.50"></text></g><g><title>handle (logging\__init__.py:978) (9 samples, 0.26%)</title><rect x="68.8439%" y="260" width="0.2601%" height="15" fill="rgb(233,213,13)" fg:x="2382" fg:w="9"/><text x="69.0939%" y="270.50"></text></g><g><title>emit (logging\__init__.py:1113) (4 samples, 0.12%)</title><rect x="68.9884%" y="276" width="0.1156%" height="15" fill="rgb(233,141,41)" fg:x="2387" fg:w="4"/><text x="69.2384%" y="286.50"></text></g><g><title>_fast_process (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:194) (23 samples, 0.66%)</title><rect x="68.5549%" y="164" width="0.6647%" height="15" fill="rgb(239,167,4)" fg:x="2372" fg:w="23"/><text x="68.8049%" y="174.50"></text></g><g><title>_wait_for_ready (agentlib_mpc\modules\dmpc\coordinator.py:445) (4 samples, 0.12%)</title><rect x="69.1040%" y="180" width="0.1156%" height="15" fill="rgb(209,217,16)" fg:x="2391" fg:w="4"/><text x="69.3540%" y="190.50"></text></g><g><title>info (logging\__init__.py:1489) (4 samples, 0.12%)</title><rect x="69.1040%" y="196" width="0.1156%" height="15" fill="rgb(219,88,35)" fg:x="2391" fg:w="4"/><text x="69.3540%" y="206.50"></text></g><g><title>_block (scipy\sparse\_construct.py:1009) (8 samples, 0.23%)</title><rect x="69.4798%" y="212" width="0.2312%" height="15" fill="rgb(220,193,23)" fg:x="2404" fg:w="8"/><text x="69.7298%" y="222.50"></text></g><g><title>_check (scipy\sparse\_coo.py:214) (4 samples, 0.12%)</title><rect x="69.8266%" y="244" width="0.1156%" height="15" fill="rgb(230,90,52)" fg:x="2416" fg:w="4"/><text x="70.0766%" y="254.50"></text></g><g><title>__init__ (scipy\sparse\_coo.py:101) (14 samples, 0.40%)</title><rect x="69.7688%" y="228" width="0.4046%" height="15" fill="rgb(252,106,19)" fg:x="2414" fg:w="14"/><text x="70.0188%" y="238.50"></text></g><g><title>_check (scipy\sparse\_coo.py:224) (4 samples, 0.12%)</title><rect x="70.0578%" y="244" width="0.1156%" height="15" fill="rgb(206,74,20)" fg:x="2424" fg:w="4"/><text x="70.3078%" y="254.50"></text></g><g><title>_amin (numpy\core\_methods.py:45) (4 samples, 0.12%)</title><rect x="70.0578%" y="260" width="0.1156%" height="15" fill="rgb(230,138,44)" fg:x="2424" fg:w="4"/><text x="70.3078%" y="270.50"></text></g><g><title>_block (scipy\sparse\_construct.py:961) (19 samples, 0.55%)</title><rect x="69.7688%" y="212" width="0.5491%" height="15" fill="rgb(235,182,43)" fg:x="2414" fg:w="19"/><text x="70.0188%" y="222.50"></text></g><g><title>_block (scipy\sparse\_construct.py:987) (9 samples, 0.26%)</title><rect x="70.4046%" y="212" width="0.2601%" height="15" fill="rgb(242,16,51)" fg:x="2436" fg:w="9"/><text x="70.6546%" y="222.50"></text></g><g><title>setup_qp_params (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:513) (51 samples, 1.47%)</title><rect x="69.2775%" y="180" width="1.4740%" height="15" fill="rgb(248,9,4)" fg:x="2397" fg:w="51"/><text x="69.5275%" y="190.50"></text></g><g><title>hstack (scipy\sparse\_construct.py:756) (47 samples, 1.36%)</title><rect x="69.3931%" y="196" width="1.3584%" height="15" fill="rgb(210,31,22)" fg:x="2401" fg:w="47"/><text x="69.6431%" y="206.50"></text></g><g><title>tocsr (scipy\sparse\_coo.py:376) (4 samples, 0.12%)</title><rect x="70.8671%" y="196" width="0.1156%" height="15" fill="rgb(239,54,39)" fg:x="2452" fg:w="4"/><text x="71.1171%" y="206.50"></text></g><g><title>setup_qp_params (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:515) (11 samples, 0.32%)</title><rect x="70.7514%" y="180" width="0.3179%" height="15" fill="rgb(230,99,41)" fg:x="2448" fg:w="11"/><text x="71.0014%" y="190.50"></text></g><g><title>setup_qp_params (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:520) (4 samples, 0.12%)</title><rect x="71.0694%" y="180" width="0.1156%" height="15" fill="rgb(253,106,12)" fg:x="2459" fg:w="4"/><text x="71.3194%" y="190.50"></text></g><g><title>ensure_symmetric (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:958) (8 samples, 0.23%)</title><rect x="71.2717%" y="196" width="0.2312%" height="15" fill="rgb(213,46,41)" fg:x="2466" fg:w="8"/><text x="71.5217%" y="206.50"></text></g><g><title>within_tol (numpy\core\numeric.py:2331) (6 samples, 0.17%)</title><rect x="71.7630%" y="244" width="0.1734%" height="15" fill="rgb(215,133,35)" fg:x="2483" fg:w="6"/><text x="72.0130%" y="254.50"></text></g><g><title>setup_qp_params (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:528) (27 samples, 0.78%)</title><rect x="71.2717%" y="180" width="0.7803%" height="15" fill="rgb(213,28,5)" fg:x="2466" fg:w="27"/><text x="71.5217%" y="190.50"></text></g><g><title>ensure_symmetric (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:971) (19 samples, 0.55%)</title><rect x="71.5029%" y="196" width="0.5491%" height="15" fill="rgb(215,77,49)" fg:x="2474" fg:w="19"/><text x="71.7529%" y="206.50"></text></g><g><title>allclose (numpy\core\numeric.py:2241) (19 samples, 0.55%)</title><rect x="71.5029%" y="212" width="0.5491%" height="15" fill="rgb(248,100,22)" fg:x="2474" fg:w="19"/><text x="71.7529%" y="222.50"></text></g><g><title>isclose (numpy\core\numeric.py:2351) (10 samples, 0.29%)</title><rect x="71.7630%" y="228" width="0.2890%" height="15" fill="rgb(208,67,9)" fg:x="2483" fg:w="10"/><text x="72.0130%" y="238.50"></text></g><g><title>within_tol (numpy\core\numeric.py:2332) (4 samples, 0.12%)</title><rect x="71.9364%" y="244" width="0.1156%" height="15" fill="rgb(219,133,21)" fg:x="2489" fg:w="4"/><text x="72.1864%" y="254.50"></text></g><g><title>diags (scipy\sparse\_construct.py:297) (8 samples, 0.23%)</title><rect x="72.0809%" y="196" width="0.2312%" height="15" fill="rgb(246,46,29)" fg:x="2494" fg:w="8"/><text x="72.3309%" y="206.50"></text></g><g><title>diags_array (scipy\sparse\_construct.py:211) (4 samples, 0.12%)</title><rect x="72.1965%" y="212" width="0.1156%" height="15" fill="rgb(246,185,52)" fg:x="2498" fg:w="4"/><text x="72.4465%" y="222.50"></text></g><g><title>tocsc (scipy\sparse\_dia.py:347) (6 samples, 0.17%)</title><rect x="72.6590%" y="228" width="0.1734%" height="15" fill="rgb(252,136,11)" fg:x="2514" fg:w="6"/><text x="72.9090%" y="238.50"></text></g><g><title>setup_qp_params (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:533) (28 samples, 0.81%)</title><rect x="72.0520%" y="180" width="0.8092%" height="15" fill="rgb(219,138,53)" fg:x="2493" fg:w="28"/><text x="72.3020%" y="190.50"></text></g><g><title>diags (scipy\sparse\_construct.py:298) (19 samples, 0.55%)</title><rect x="72.3121%" y="196" width="0.5491%" height="15" fill="rgb(211,51,23)" fg:x="2502" fg:w="19"/><text x="72.5621%" y="206.50"></text></g><g><title>asformat (scipy\sparse\_base.py:456) (18 samples, 0.52%)</title><rect x="72.3410%" y="212" width="0.5202%" height="15" fill="rgb(247,221,28)" fg:x="2503" fg:w="18"/><text x="72.5910%" y="222.50"></text></g><g><title>__init__ (scipy\sparse\_coo.py:101) (5 samples, 0.14%)</title><rect x="72.8902%" y="228" width="0.1445%" height="15" fill="rgb(251,222,45)" fg:x="2522" fg:w="5"/><text x="73.1402%" y="238.50"></text></g><g><title>block_diag (scipy\sparse\_construct.py:1073) (12 samples, 0.35%)</title><rect x="72.8902%" y="196" width="0.3468%" height="15" fill="rgb(217,162,53)" fg:x="2522" fg:w="12"/><text x="73.1402%" y="206.50"></text></g><g><title>tocoo (scipy\sparse\_compressed.py:1161) (12 samples, 0.35%)</title><rect x="72.8902%" y="212" width="0.3468%" height="15" fill="rgb(229,93,14)" fg:x="2522" fg:w="12"/><text x="73.1402%" y="222.50"></text></g><g><title>block_diag (scipy\sparse\_construct.py:1082) (5 samples, 0.14%)</title><rect x="73.2370%" y="196" width="0.1445%" height="15" fill="rgb(209,67,49)" fg:x="2534" fg:w="5"/><text x="73.4870%" y="206.50"></text></g><g><title>setup_qp_params (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:537) (25 samples, 0.72%)</title><rect x="72.8613%" y="180" width="0.7225%" height="15" fill="rgb(213,87,29)" fg:x="2521" fg:w="25"/><text x="73.1113%" y="190.50"></text></g><g><title>block_diag (scipy\sparse\_construct.py:1094) (6 samples, 0.17%)</title><rect x="73.4104%" y="196" width="0.1734%" height="15" fill="rgb(205,151,52)" fg:x="2540" fg:w="6"/><text x="73.6604%" y="206.50"></text></g><g><title>asformat (scipy\sparse\_base.py:456) (4 samples, 0.12%)</title><rect x="73.4682%" y="212" width="0.1156%" height="15" fill="rgb(253,215,39)" fg:x="2542" fg:w="4"/><text x="73.7182%" y="222.50"></text></g><g><title>setup_qp_params (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:540) (10 samples, 0.29%)</title><rect x="73.5838%" y="180" width="0.2890%" height="15" fill="rgb(221,220,41)" fg:x="2546" fg:w="10"/><text x="73.8338%" y="190.50"></text></g><g><title>ensure_symmetric (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:963) (9 samples, 0.26%)</title><rect x="73.6127%" y="196" width="0.2601%" height="15" fill="rgb(218,133,21)" fg:x="2547" fg:w="9"/><text x="73.8627%" y="206.50"></text></g><g><title>allclose (numpy\core\numeric.py:2241) (9 samples, 0.26%)</title><rect x="73.6127%" y="212" width="0.2601%" height="15" fill="rgb(221,193,43)" fg:x="2547" fg:w="9"/><text x="73.8627%" y="222.50"></text></g><g><title>isclose (numpy\core\numeric.py:2351) (7 samples, 0.20%)</title><rect x="73.6705%" y="228" width="0.2023%" height="15" fill="rgb(240,128,52)" fg:x="2549" fg:w="7"/><text x="73.9205%" y="238.50"></text></g><g><title>within_tol (numpy\core\numeric.py:2332) (6 samples, 0.17%)</title><rect x="73.6994%" y="244" width="0.1734%" height="15" fill="rgb(253,114,12)" fg:x="2550" fg:w="6"/><text x="73.9494%" y="254.50"></text></g><g><title>__init__ (scipy\sparse\_coo.py:101) (5 samples, 0.14%)</title><rect x="73.9306%" y="212" width="0.1445%" height="15" fill="rgb(215,223,47)" fg:x="2558" fg:w="5"/><text x="74.1806%" y="222.50"></text></g><g><title>block_diag (scipy\sparse\_construct.py:1071) (28 samples, 0.81%)</title><rect x="73.8728%" y="196" width="0.8092%" height="15" fill="rgb(248,225,23)" fg:x="2556" fg:w="28"/><text x="74.1228%" y="206.50"></text></g><g><title>atleast_2d (numpy\core\shape_base.py:121) (13 samples, 0.38%)</title><rect x="74.3064%" y="212" width="0.3757%" height="15" fill="rgb(250,108,0)" fg:x="2571" fg:w="13"/><text x="74.5564%" y="222.50"></text></g><g><title>setup_qp_params (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:543) (34 samples, 0.98%)</title><rect x="73.8728%" y="180" width="0.9827%" height="15" fill="rgb(228,208,7)" fg:x="2556" fg:w="34"/><text x="74.1228%" y="190.50"></text></g><g><title>__init__ (scipy\sparse\_coo.py:101) (4 samples, 0.12%)</title><rect x="75.0578%" y="228" width="0.1156%" height="15" fill="rgb(244,45,10)" fg:x="2597" fg:w="4"/><text x="75.3078%" y="238.50"></text></g><g><title>_block (scipy\sparse\_construct.py:961) (7 samples, 0.20%)</title><rect x="75.0578%" y="212" width="0.2023%" height="15" fill="rgb(207,125,25)" fg:x="2597" fg:w="7"/><text x="75.3078%" y="222.50"></text></g><g><title>setup_qp_params (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:562) (16 samples, 0.46%)</title><rect x="74.8555%" y="180" width="0.4624%" height="15" fill="rgb(210,195,18)" fg:x="2590" fg:w="16"/><text x="75.1055%" y="190.50"></text></g><g><title>vstack (scipy\sparse\_construct.py:804) (15 samples, 0.43%)</title><rect x="74.8844%" y="196" width="0.4335%" height="15" fill="rgb(249,80,12)" fg:x="2591" fg:w="15"/><text x="75.1344%" y="206.50"></text></g><g><title>__init__ (scipy\sparse\_coo.py:101) (4 samples, 0.12%)</title><rect x="75.5202%" y="228" width="0.1156%" height="15" fill="rgb(221,65,9)" fg:x="2613" fg:w="4"/><text x="75.7702%" y="238.50"></text></g><g><title>_block (scipy\sparse\_construct.py:1009) (8 samples, 0.23%)</title><rect x="75.5202%" y="212" width="0.2312%" height="15" fill="rgb(235,49,36)" fg:x="2613" fg:w="8"/><text x="75.7702%" y="222.50"></text></g><g><title>__init__ (scipy\sparse\_coo.py:101) (5 samples, 0.14%)</title><rect x="75.8092%" y="228" width="0.1445%" height="15" fill="rgb(225,32,20)" fg:x="2623" fg:w="5"/><text x="76.0592%" y="238.50"></text></g><g><title>__init__ (scipy\sparse\_coo.py:57) (4 samples, 0.12%)</title><rect x="76.0116%" y="260" width="0.1156%" height="15" fill="rgb(215,141,46)" fg:x="2630" fg:w="4"/><text x="76.2616%" y="270.50"></text></g><g><title>_get_index_dtype (scipy\sparse\_base.py:1389) (4 samples, 0.12%)</title><rect x="76.0116%" y="276" width="0.1156%" height="15" fill="rgb(250,160,47)" fg:x="2630" fg:w="4"/><text x="76.2616%" y="286.50"></text></g><g><title>_block (scipy\sparse\_construct.py:961) (12 samples, 0.35%)</title><rect x="75.8092%" y="212" width="0.3468%" height="15" fill="rgb(216,222,40)" fg:x="2623" fg:w="12"/><text x="76.0592%" y="222.50"></text></g><g><title>__init__ (scipy\sparse\_coo.py:72) (7 samples, 0.20%)</title><rect x="75.9538%" y="228" width="0.2023%" height="15" fill="rgb(234,217,39)" fg:x="2628" fg:w="7"/><text x="76.2038%" y="238.50"></text></g><g><title>tocoo (scipy\sparse\_compressed.py:1161) (7 samples, 0.20%)</title><rect x="75.9538%" y="244" width="0.2023%" height="15" fill="rgb(207,178,40)" fg:x="2628" fg:w="7"/><text x="76.2038%" y="254.50"></text></g><g><title>setup_qp_params (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:564) (34 samples, 0.98%)</title><rect x="75.3179%" y="180" width="0.9827%" height="15" fill="rgb(221,136,13)" fg:x="2606" fg:w="34"/><text x="75.5679%" y="190.50"></text></g><g><title>hstack (scipy\sparse\_construct.py:756) (32 samples, 0.92%)</title><rect x="75.3757%" y="196" width="0.9249%" height="15" fill="rgb(249,199,10)" fg:x="2608" fg:w="32"/><text x="75.6257%" y="206.50"></text></g><g><title>setup_qp_params (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:565) (8 samples, 0.23%)</title><rect x="76.3006%" y="180" width="0.2312%" height="15" fill="rgb(249,222,13)" fg:x="2640" fg:w="8"/><text x="76.5506%" y="190.50"></text></g><g><title>eye (scipy\sparse\_construct.py:455) (6 samples, 0.17%)</title><rect x="76.3584%" y="196" width="0.1734%" height="15" fill="rgb(244,185,38)" fg:x="2642" fg:w="6"/><text x="76.6084%" y="206.50"></text></g><g><title>setup_qp_params (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:570) (4 samples, 0.12%)</title><rect x="76.5607%" y="180" width="0.1156%" height="15" fill="rgb(236,202,9)" fg:x="2649" fg:w="4"/><text x="76.8107%" y="190.50"></text></g><g><title>tocsc (scipy\sparse\_coo.py:342) (5 samples, 0.14%)</title><rect x="76.7630%" y="196" width="0.1445%" height="15" fill="rgb(250,229,37)" fg:x="2656" fg:w="5"/><text x="77.0130%" y="206.50"></text></g><g><title>setup_qp_params (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:576) (9 samples, 0.26%)</title><rect x="76.6763%" y="180" width="0.2601%" height="15" fill="rgb(206,174,23)" fg:x="2653" fg:w="9"/><text x="76.9263%" y="190.50"></text></g><g><title>_fast_process (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:198) (273 samples, 7.89%)</title><rect x="69.2197%" y="164" width="7.8902%" height="15" fill="rgb(211,33,43)" fg:x="2395" fg:w="273"/><text x="69.4697%" y="174.50">_fast_proce..</text></g><g><title>setup_qp_params (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:586) (5 samples, 0.14%)</title><rect x="76.9653%" y="180" width="0.1445%" height="15" fill="rgb(245,58,50)" fg:x="2663" fg:w="5"/><text x="77.2153%" y="190.50"></text></g><g><title>_solve_coordination_qp (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:420) (12 samples, 0.35%)</title><rect x="77.1676%" y="180" width="0.3468%" height="15" fill="rgb(244,68,36)" fg:x="2670" fg:w="12"/><text x="77.4176%" y="190.50"></text></g><g><title>_create_qp_solver (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:408) (11 samples, 0.32%)</title><rect x="77.1965%" y="196" width="0.3179%" height="15" fill="rgb(232,229,15)" fg:x="2671" fg:w="11"/><text x="77.4465%" y="206.50"></text></g><g><title>conic (casadi\casadi.py:27199) (11 samples, 0.32%)</title><rect x="77.1965%" y="212" width="0.3179%" height="15" fill="rgb(254,30,23)" fg:x="2671" fg:w="11"/><text x="77.4465%" y="222.50"></text></g><g><title>__init__ (casadi\casadi.py:10864) (226 samples, 6.53%)</title><rect x="77.5434%" y="196" width="6.5318%" height="15" fill="rgb(235,160,14)" fg:x="2683" fg:w="226"/><text x="77.7934%" y="206.50">__init__ ..</text></g><g><title>_solve_coordination_qp (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:421) (229 samples, 6.62%)</title><rect x="77.5145%" y="180" width="6.6185%" height="15" fill="rgb(212,155,44)" fg:x="2682" fg:w="229"/><text x="77.7645%" y="190.50">_solve_co..</text></g><g><title>_solve_coordination_qp (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:425) (97 samples, 2.80%)</title><rect x="84.1329%" y="180" width="2.8035%" height="15" fill="rgb(226,2,50)" fg:x="2911" fg:w="97"/><text x="84.3829%" y="190.50">_s..</text></g><g><title>__call__ (casadi\casadi.py:23556) (97 samples, 2.80%)</title><rect x="84.1329%" y="196" width="2.8035%" height="15" fill="rgb(234,177,6)" fg:x="2911" fg:w="97"/><text x="84.3829%" y="206.50">__..</text></g><g><title>call (casadi\casadi.py:20205) (97 samples, 2.80%)</title><rect x="84.1329%" y="212" width="2.8035%" height="15" fill="rgb(217,24,9)" fg:x="2911" fg:w="97"/><text x="84.3829%" y="222.50">ca..</text></g><g><title>__init__ (casadi\casadi.py:10864) (279 samples, 8.06%)</title><rect x="87.0231%" y="196" width="8.0636%" height="15" fill="rgb(220,13,46)" fg:x="3011" fg:w="279"/><text x="87.2731%" y="206.50">__init__ (c..</text></g><g><title>_solve_coordination_qp (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:426) (283 samples, 8.18%)</title><rect x="86.9364%" y="180" width="8.1792%" height="15" fill="rgb(239,221,27)" fg:x="3008" fg:w="283"/><text x="87.1864%" y="190.50">_solve_coor..</text></g><g><title>_solve_coordination_qp (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:435) (4 samples, 0.12%)</title><rect x="95.1156%" y="180" width="0.1156%" height="15" fill="rgb(222,198,25)" fg:x="3291" fg:w="4"/><text x="95.3656%" y="190.50"></text></g><g><title>_solve_coordination_qp (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:444) (6 samples, 0.17%)</title><rect x="95.3179%" y="180" width="0.1734%" height="15" fill="rgb(211,99,13)" fg:x="3298" fg:w="6"/><text x="95.5679%" y="190.50"></text></g><g><title>_fast_process (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:199) (639 samples, 18.47%)</title><rect x="77.1098%" y="164" width="18.4682%" height="15" fill="rgb(232,111,31)" fg:x="2668" fg:w="639"/><text x="77.3598%" y="174.50">_fast_process (agentlib_mpc\m..</text></g><g><title>_matmul_dispatch (scipy\sparse\_coo.py:699) (5 samples, 0.14%)</title><rect x="95.8382%" y="228" width="0.1445%" height="15" fill="rgb(245,82,37)" fg:x="3316" fg:w="5"/><text x="96.0882%" y="238.50"></text></g><g><title>_matmul_dispatch (scipy\sparse\_base.py:619) (5 samples, 0.14%)</title><rect x="95.8382%" y="244" width="0.1445%" height="15" fill="rgb(227,149,46)" fg:x="3316" fg:w="5"/><text x="96.0882%" y="254.50"></text></g><g><title>_matmul_vector (scipy\sparse\_coo.py:647) (5 samples, 0.14%)</title><rect x="95.8382%" y="260" width="0.1445%" height="15" fill="rgb(218,36,50)" fg:x="3316" fg:w="5"/><text x="96.0882%" y="270.50"></text></g><g><title>_check (scipy\sparse\_coo.py:214) (4 samples, 0.12%)</title><rect x="96.0116%" y="260" width="0.1156%" height="15" fill="rgb(226,80,48)" fg:x="3322" fg:w="4"/><text x="96.2616%" y="270.50"></text></g><g><title>__init__ (scipy\sparse\_coo.py:101) (7 samples, 0.20%)</title><rect x="96.0116%" y="244" width="0.2023%" height="15" fill="rgb(238,224,15)" fg:x="3322" fg:w="7"/><text x="96.2616%" y="254.50"></text></g><g><title>compute_al_step (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:616) (24 samples, 0.69%)</title><rect x="95.7225%" y="180" width="0.6936%" height="15" fill="rgb(241,136,10)" fg:x="3312" fg:w="24"/><text x="95.9725%" y="190.50"></text></g><g><title>__rmatmul__ (scipy\sparse\_base.py:738) (21 samples, 0.61%)</title><rect x="95.8092%" y="196" width="0.6069%" height="15" fill="rgb(208,32,45)" fg:x="3315" fg:w="21"/><text x="96.0592%" y="206.50"></text></g><g><title>_rmatmul_dispatch (scipy\sparse\_coo.py:669) (20 samples, 0.58%)</title><rect x="95.8382%" y="212" width="0.5780%" height="15" fill="rgb(207,135,9)" fg:x="3316" fg:w="20"/><text x="96.0882%" y="222.50"></text></g><g><title>transpose (scipy\sparse\_coo.py:242) (14 samples, 0.40%)</title><rect x="96.0116%" y="228" width="0.4046%" height="15" fill="rgb(206,86,44)" fg:x="3322" fg:w="14"/><text x="96.2616%" y="238.50"></text></g><g><title>_fast_process (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:200) (30 samples, 0.87%)</title><rect x="95.5780%" y="164" width="0.8671%" height="15" fill="rgb(245,177,15)" fg:x="3307" fg:w="30"/><text x="95.8280%" y="174.50"></text></g><g><title>_fast_process (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:203) (6 samples, 0.17%)</title><rect x="96.4451%" y="164" width="0.1734%" height="15" fill="rgb(206,64,50)" fg:x="3337" fg:w="6"/><text x="96.6951%" y="174.50"></text></g><g><title>_save_stats (agentlib_mpc\modules\dmpc\coordinator.py:495) (5 samples, 0.14%)</title><rect x="96.7630%" y="212" width="0.1445%" height="15" fill="rgb(234,36,40)" fg:x="3348" fg:w="5"/><text x="97.0130%" y="222.50"></text></g><g><title>__init__ (pandas\core\frame.py:778) (5 samples, 0.14%)</title><rect x="96.7630%" y="228" width="0.1445%" height="15" fill="rgb(213,64,8)" fg:x="3348" fg:w="5"/><text x="97.0130%" y="238.50"></text></g><g><title>dict_to_mgr (pandas\core\internals\construction.py:503) (4 samples, 0.12%)</title><rect x="96.7919%" y="244" width="0.1156%" height="15" fill="rgb(210,75,36)" fg:x="3349" fg:w="4"/><text x="97.0419%" y="254.50"></text></g><g><title>_save_stats (agentlib_mpc\modules\dmpc\coordinator.py:502) (4 samples, 0.12%)</title><rect x="96.9075%" y="212" width="0.1156%" height="15" fill="rgb(229,88,21)" fg:x="3353" fg:w="4"/><text x="97.1575%" y="222.50"></text></g><g><title>save (pandas\io\formats\csvs.py:251) (4 samples, 0.12%)</title><rect x="97.1098%" y="276" width="0.1156%" height="15" fill="rgb(252,204,47)" fg:x="3360" fg:w="4"/><text x="97.3598%" y="286.50"></text></g><g><title>__exit__ (pandas\io\common.py:157) (4 samples, 0.12%)</title><rect x="97.1098%" y="292" width="0.1156%" height="15" fill="rgb(208,77,27)" fg:x="3360" fg:w="4"/><text x="97.3598%" y="302.50"></text></g><g><title>close (pandas\io\common.py:144) (4 samples, 0.12%)</title><rect x="97.1098%" y="308" width="0.1156%" height="15" fill="rgb(221,76,26)" fg:x="3360" fg:w="4"/><text x="97.3598%" y="318.50"></text></g><g><title>_fast_process (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:212) (23 samples, 0.66%)</title><rect x="96.6763%" y="164" width="0.6647%" height="15" fill="rgb(225,139,18)" fg:x="3345" fg:w="23"/><text x="96.9263%" y="174.50"></text></g><g><title>_wrap_up_algorithm (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:929) (23 samples, 0.66%)</title><rect x="96.6763%" y="180" width="0.6647%" height="15" fill="rgb(230,137,11)" fg:x="3345" fg:w="23"/><text x="96.9263%" y="190.50"></text></g><g><title>_save_stats (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:925) (23 samples, 0.66%)</title><rect x="96.6763%" y="196" width="0.6647%" height="15" fill="rgb(212,28,1)" fg:x="3345" fg:w="23"/><text x="96.9263%" y="206.50"></text></g><g><title>_save_stats (agentlib_mpc\modules\dmpc\coordinator.py:503) (11 samples, 0.32%)</title><rect x="97.0231%" y="212" width="0.3179%" height="15" fill="rgb(248,164,17)" fg:x="3357" fg:w="11"/><text x="97.2731%" y="222.50"></text></g><g><title>wrapper (pandas\util\_decorators.py:333) (11 samples, 0.32%)</title><rect x="97.0231%" y="228" width="0.3179%" height="15" fill="rgb(222,171,42)" fg:x="3357" fg:w="11"/><text x="97.2731%" y="238.50"></text></g><g><title>to_csv (pandas\core\generic.py:3967) (11 samples, 0.32%)</title><rect x="97.0231%" y="244" width="0.3179%" height="15" fill="rgb(243,84,45)" fg:x="3357" fg:w="11"/><text x="97.2731%" y="254.50"></text></g><g><title>to_csv (pandas\io\formats\format.py:1014) (8 samples, 0.23%)</title><rect x="97.1098%" y="260" width="0.2312%" height="15" fill="rgb(252,49,23)" fg:x="3360" fg:w="8"/><text x="97.3598%" y="270.50"></text></g><g><title>save (pandas\io\formats\csvs.py:270) (4 samples, 0.12%)</title><rect x="97.2254%" y="276" width="0.1156%" height="15" fill="rgb(215,19,7)" fg:x="3364" fg:w="4"/><text x="97.4754%" y="286.50"></text></g><g><title>_save (pandas\io\formats\csvs.py:275) (4 samples, 0.12%)</title><rect x="97.2254%" y="292" width="0.1156%" height="15" fill="rgb(238,81,41)" fg:x="3364" fg:w="4"/><text x="97.4754%" y="302.50"></text></g><g><title>_save_body (pandas\io\formats\csvs.py:313) (4 samples, 0.12%)</title><rect x="97.2254%" y="308" width="0.1156%" height="15" fill="rgb(210,199,37)" fg:x="3364" fg:w="4"/><text x="97.4754%" y="318.50"></text></g><g><title>_fast_process (agentlib_mpc\modules\dmpc\aladin\aladin_coordinator.py:213) (4 samples, 0.12%)</title><rect x="97.3410%" y="164" width="0.1156%" height="15" fill="rgb(244,192,49)" fg:x="3368" fg:w="4"/><text x="97.5910%" y="174.50"></text></g><g><title>get_input_values (agentlib_mpc\models\casadi_model.py:453) (4 samples, 0.12%)</title><rect x="97.4566%" y="212" width="0.1156%" height="15" fill="rgb(226,211,11)" fg:x="3372" fg:w="4"/><text x="97.7066%" y="222.50"></text></g><g><title>vertcat (casadi\casadi.py:518) (4 samples, 0.12%)</title><rect x="97.4566%" y="228" width="0.1156%" height="15" fill="rgb(236,162,54)" fg:x="3372" fg:w="4"/><text x="97.7066%" y="238.50"></text></g><g><title>_vertcat (casadi\casadi.py:34167) (4 samples, 0.12%)</title><rect x="97.4566%" y="244" width="0.1156%" height="15" fill="rgb(220,229,9)" fg:x="3372" fg:w="4"/><text x="97.7066%" y="254.50"></text></g><g><title>do_step (agentlib_mpc\models\casadi_model.py:331) (5 samples, 0.14%)</title><rect x="97.4566%" y="196" width="0.1445%" height="15" fill="rgb(250,87,22)" fg:x="3372" fg:w="5"/><text x="97.7066%" y="206.50"></text></g><g><title>do_step (agentlib_mpc\models\casadi_model.py:337) (69 samples, 1.99%)</title><rect x="97.6012%" y="196" width="1.9942%" height="15" fill="rgb(239,43,17)" fg:x="3377" fg:w="69"/><text x="97.8512%" y="206.50">d..</text></g><g><title>__call__ (casadi\casadi.py:23556) (68 samples, 1.97%)</title><rect x="97.6301%" y="212" width="1.9653%" height="15" fill="rgb(231,177,25)" fg:x="3378" fg:w="68"/><text x="97.8801%" y="222.50">_..</text></g><g><title>call (casadi\casadi.py:20205) (67 samples, 1.94%)</title><rect x="97.6590%" y="228" width="1.9364%" height="15" fill="rgb(219,179,1)" fg:x="3379" fg:w="67"/><text x="97.9090%" y="238.50">c..</text></g><g><title>do_step (agentlib_mpc\models\casadi_model.py:340) (4 samples, 0.12%)</title><rect x="99.5954%" y="196" width="0.1156%" height="15" fill="rgb(238,219,53)" fg:x="3446" fg:w="4"/><text x="99.8454%" y="206.50"></text></g><g><title>process (agentlib\modules\simulation\simulator.py:405) (81 samples, 2.34%)</title><rect x="97.4566%" y="164" width="2.3410%" height="15" fill="rgb(232,167,36)" fg:x="3372" fg:w="81"/><text x="97.7066%" y="174.50">p..</text></g><g><title>do_step (agentlib\modules\simulation\simulator.py:433) (81 samples, 2.34%)</title><rect x="97.4566%" y="180" width="2.3410%" height="15" fill="rgb(244,19,51)" fg:x="3372" fg:w="81"/><text x="97.7066%" y="190.50">d..</text></g><g><title>all (3,460 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(224,6,22)" fg:x="0" fg:w="3460"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (aladin_example_coordinator.py:504) (3,460 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(224,145,5)" fg:x="0" fg:w="3460"/><text x="0.2500%" y="78.50">&lt;module&gt; (aladin_example_coordinator.py:504)</text></g><g><title>run_example (aladin_example_coordinator.py:494) (3,460 samples, 100.00%)</title><rect x="0.0000%" y="84" width="100.0000%" height="15" fill="rgb(234,130,49)" fg:x="0" fg:w="3460"/><text x="0.2500%" y="94.50">run_example (aladin_example_coordinator.py:494)</text></g><g><title>run (agentlib\utils\multi_agent_system.py:152) (3,460 samples, 100.00%)</title><rect x="0.0000%" y="100" width="100.0000%" height="15" fill="rgb(254,6,2)" fg:x="0" fg:w="3460"/><text x="0.2500%" y="110.50">run (agentlib\utils\multi_agent_system.py:152)</text></g><g><title>run (simpy\core.py:246) (3,460 samples, 100.00%)</title><rect x="0.0000%" y="116" width="100.0000%" height="15" fill="rgb(208,96,46)" fg:x="0" fg:w="3460"/><text x="0.2500%" y="126.50">run (simpy\core.py:246)</text></g><g><title>step (simpy\core.py:196) (3,450 samples, 99.71%)</title><rect x="0.2890%" y="132" width="99.7110%" height="15" fill="rgb(239,3,39)" fg:x="10" fg:w="3450"/><text x="0.5390%" y="142.50">step (simpy\core.py:196)</text></g><g><title>new_resume (agentlib\core\environment.py:246) (1,102 samples, 31.85%)</title><rect x="68.1503%" y="148" width="31.8497%" height="15" fill="rgb(233,210,1)" fg:x="2358" fg:w="1102"/><text x="68.4003%" y="158.50">new_resume (agentlib\core\environment.py:246)</text></g><g><title>process (agentlib\modules\simulation\simulator.py:407) (7 samples, 0.20%)</title><rect x="99.7977%" y="164" width="0.2023%" height="15" fill="rgb(244,137,37)" fg:x="3453" fg:w="7"/><text x="100.0477%" y="174.50"></text></g><g><title>update_module_vars (agentlib\modules\simulation\simulator.py:469) (5 samples, 0.14%)</title><rect x="99.8555%" y="180" width="0.1445%" height="15" fill="rgb(240,136,2)" fg:x="3455" fg:w="5"/><text x="100.1055%" y="190.50"></text></g></svg></svg>