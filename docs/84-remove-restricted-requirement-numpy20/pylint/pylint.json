{
    "messages": [
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'print-statement' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'parameter-unpacking' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'unpacking-in-except' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'old-raise-syntax' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'backtick' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'import-star-module-level' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'apply-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'basestring-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'buffer-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'cmp-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'coerce-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'execfile-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'file-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'long-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'raw_input-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'reduce-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'standarderror-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'unicode-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'xrange-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'coerce-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'delslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'getslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'setslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'no-absolute-import' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'old-division' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-iter-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-view-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'next-method-called' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'metaclass-assignment' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'indexing-exception' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'raising-string' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'reload-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'oct-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'hex-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'nonzero-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'cmp-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'input-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'round-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'intern-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'unichr-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'map-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'zip-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'range-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'filter-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'using-cmp-argument' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'div-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'idiv-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'rdiv-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'exception-message-attribute' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'invalid-str-codec' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'sys-max-int' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'bad-python3-import' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-string-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-str-translate-call' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-itertools-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-types-field' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'next-method-defined' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-items-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-keys-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-values-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-operator-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-urllib-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'xreadlines-attribute' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-sys-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'exception-escape' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'comprehension-escape' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'no-self-use' was moved to an optional extension, see https://pylint.readthedocs.io/en/latest/whatsnew/2/2.14/summary.html#removed-checkers.",
            "message-id": "R0022"
        },
        {
            "type": "warning",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'long-suffix'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'old-ne-operator'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'old-octal-literal'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'non-ascii-bytes-literal'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/home/runner/work/AgentLib-MPC/AgentLib-MPC/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'eq-without-hash'",
            "message-id": "W0012"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.utils.plotting.basic",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/basic.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/utils/plotting/basic.py: Fatal error while checking 'agentlib_mpc/utils/plotting/basic.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-42.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.data_structures.mpc_datamodels",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/data_structures/mpc_datamodels.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/data_structures/mpc_datamodels.py: Fatal error while checking 'agentlib_mpc/data_structures/mpc_datamodels.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-42.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.data_structures.admm_datatypes",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/data_structures/admm_datatypes.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/data_structures/admm_datatypes.py: Fatal error while checking 'agentlib_mpc/data_structures/admm_datatypes.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-43.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.data_structures.casadi_utils",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/data_structures/casadi_utils.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/data_structures/casadi_utils.py: Fatal error while checking 'agentlib_mpc/data_structures/casadi_utils.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-43.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_predictor",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_predictor.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.models.casadi_predictor",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_predictor.py",
            "symbol": "import-error",
            "message": "Unable to import 'casadi'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.models.casadi_predictor",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_predictor.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.models.casadi_predictor",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_predictor.py",
            "symbol": "import-error",
            "message": "Unable to import 'keras'",
            "message-id": "E0401"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.models.casadi_predictor",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_predictor.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/models/casadi_predictor.py: Fatal error while checking 'agentlib_mpc/models/casadi_predictor.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-43.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 60,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 115,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "line-too-long",
            "message": "Line too long (112/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 130,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 144,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 251,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 256,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 261,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 317,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 421,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 555,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "line-too-long",
            "message": "Line too long (264/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "import-error",
            "message": "Unable to import 'keras'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.gaussian_process'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 14,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.gaussian_process.kernels'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 15,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.linear_model'",
            "message-id": "E0401"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/models/serialized_ml_model.py: Fatal error while checking 'agentlib_mpc/models/serialized_ml_model.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-44.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_ml_model",
            "obj": "",
            "line": 453,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_ml_model.py",
            "symbol": "line-too-long",
            "message": "Line too long (131/100)",
            "message-id": "C0301"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.models.casadi_ml_model",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_ml_model.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/models/casadi_ml_model.py: Fatal error while checking 'agentlib_mpc/models/casadi_ml_model.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-44.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_model",
            "obj": "",
            "line": 529,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_model.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.models.casadi_model",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_model.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/models/casadi_model.py: Fatal error while checking 'agentlib_mpc/models/casadi_model.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-44.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.models",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_mpc/models/__init__.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.utils.plugin_import'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_predictor",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_predictor.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from enum import Enum\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import abc\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import json\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import logging\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import subprocess\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from enum import Enum\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from copy import deepcopy\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from pathlib import Path\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_ml_model",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_ml_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import itertools\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_ml_model",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_ml_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import logging\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_ml_model",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_ml_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from itertools import chain\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_ml_model",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_ml_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from pathlib import Path\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_model",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import json\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_model",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import logging\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_model",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import abc\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_model",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from itertools import chain\" should be placed before \"import casadi as ca\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package abc are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package enum are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_ml_model",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_ml_model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package logging are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_ml_model",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_ml_model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package pathlib are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_model",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package json are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_model",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package logging are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_model",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package abc are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.casadi_model",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_mpc/models/casadi_model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package itertools are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package numpy are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.models.serialized_ml_model",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "agentlib_mpc/models/serialized_ml_model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package keras are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.sampling",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/sampling.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.utils.sampling",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/sampling.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/utils/sampling.py: Fatal error while checking 'agentlib_mpc/utils/sampling.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-44.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.analysis",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/analysis.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.utils.analysis",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/analysis.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/utils/analysis.py: Fatal error while checking 'agentlib_mpc/utils/analysis.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-45.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.utils.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/__init__.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/utils/__init__.py: Fatal error while checking 'agentlib_mpc/utils/__init__.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-45.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.interactive",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/interactive.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.utils.plotting.interactive",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/interactive.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.utils.plotting.interactive",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/interactive.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/utils/plotting/interactive.py: Fatal error while checking 'agentlib_mpc/utils/plotting/interactive.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-45.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_consensus_shades",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_consensus_shades.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.utils.plotting.admm_consensus_shades",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_consensus_shades.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.utils.plotting.admm_consensus_shades",
            "obj": "plot_consensus_shades",
            "line": 9,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_consensus_shades.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (17/15)",
            "message-id": "R0914"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.utils.plotting.admm_consensus_shades",
            "obj": "plot_consensus_shades",
            "line": 52,
            "column": 43,
            "path": "agentlib_mpc/utils/plotting/admm_consensus_shades.py",
            "symbol": "undefined-variable",
            "message": "Undefined variable 'series'",
            "message-id": "E0602"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.utils.plotting.admm_consensus_shades",
            "obj": "plot_consensus_shades",
            "line": 12,
            "column": 4,
            "path": "agentlib_mpc/utils/plotting/admm_consensus_shades.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'time_step'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.utils.plotting.admm_consensus_shades",
            "obj": "plot_consensus_shades.mean",
            "line": 28,
            "column": 4,
            "path": "agentlib_mpc/utils/plotting/admm_consensus_shades.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'mean'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.utils.plotting.admm_consensus_shades",
            "obj": "plot_consensus_shades.local",
            "line": 31,
            "column": 4,
            "path": "agentlib_mpc/utils/plotting/admm_consensus_shades.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'local'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.utils.plotting.admm_consensus_shades",
            "obj": "plot_consensus_shades.lmbda",
            "line": 34,
            "column": 4,
            "path": "agentlib_mpc/utils/plotting/admm_consensus_shades.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'lmbda'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.utils.plotting.admm_consensus_shades",
            "obj": "plot_consensus_shades",
            "line": 41,
            "column": 4,
            "path": "agentlib_mpc/utils/plotting/admm_consensus_shades.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'a_trajectory'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.utils.plotting.admm_consensus_shades",
            "obj": "plot_consensus_shades",
            "line": 42,
            "column": 4,
            "path": "agentlib_mpc/utils/plotting/admm_consensus_shades.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'number_of_iterations'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.utils.plotting.admm_consensus_shades",
            "obj": "plot_consensus_shades",
            "line": 57,
            "column": 8,
            "path": "agentlib_mpc/utils/plotting/admm_consensus_shades.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prediction_color'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.mpc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/mpc.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.utils.plotting.mpc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/mpc.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/utils/plotting/mpc.py: Fatal error while checking 'agentlib_mpc/utils/plotting/mpc.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-45.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.mpc_dashboard",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/mpc_dashboard.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.utils.plotting.mpc_dashboard",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/mpc_dashboard.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/utils/plotting/mpc_dashboard.py: Fatal error while checking 'agentlib_mpc/utils/plotting/mpc_dashboard.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-45.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.discretization_structure",
            "obj": "",
            "line": 57,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/discretization_structure.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.discretization_structure",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/discretization_structure.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.utils.plotting.discretization_structure",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/discretization_structure.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.pyplot'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.utils.plotting.discretization_structure",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/discretization_structure.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.utils.plotting.discretization_structure",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/discretization_structure.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/utils/plotting/discretization_structure.py: Fatal error while checking 'agentlib_mpc/utils/plotting/discretization_structure.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-45.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.ml_model_test",
            "obj": "",
            "line": 127,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/ml_model_test.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.ml_model_test",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/ml_model_test.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.utils.plotting.ml_model_test",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/ml_model_test.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/utils/plotting/ml_model_test.py: Fatal error while checking 'agentlib_mpc/utils/plotting/ml_model_test.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-46.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_dashboard",
            "obj": "",
            "line": 110,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_dashboard.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_dashboard",
            "obj": "",
            "line": 122,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_dashboard.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_dashboard",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_dashboard.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.utils.plotting.admm_dashboard",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_dashboard.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/utils/plotting/admm_dashboard.py: Fatal error while checking 'agentlib_mpc/utils/plotting/admm_dashboard.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-46.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_residuals",
            "obj": "",
            "line": 144,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_residuals.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_residuals",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_residuals.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.utils.plotting.admm_residuals",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_residuals.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/utils/plotting/admm_residuals.py: Fatal error while checking 'agentlib_mpc/utils/plotting/admm_residuals.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-46.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.utils.plotting.admm_animation",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_animation.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/utils/plotting/admm_animation.py: Fatal error while checking 'agentlib_mpc/utils/plotting/admm_animation.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-46.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.ml_model_test",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/ml_model_test.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from pathlib import Path\" should be placed before \"import matplotlib.pyplot as plt\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_dashboard",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_dashboard.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import os\" should be placed before \"import matplotlib.pyplot as plt\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_dashboard",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_dashboard.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import webbrowser\" should be placed before \"import matplotlib.pyplot as plt\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_dashboard",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_dashboard.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from pathlib import Path\" should be placed before \"import matplotlib.pyplot as plt\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_residuals",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_residuals.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from ast import literal_eval\" should be placed before \"import matplotlib.pyplot as plt\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_residuals",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_residuals.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from pathlib import Path\" should be placed before \"import matplotlib.pyplot as plt\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_animation",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_animation.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import functools\" should be placed before \"import matplotlib.pyplot as plt\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_animation",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_animation.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from pathlib import Path\" should be placed before \"import matplotlib.pyplot as plt\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.mpc_dashboard",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/mpc_dashboard.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package pathlib are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_dashboard",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_dashboard.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package webbrowser are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_dashboard",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_dashboard.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package pathlib are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_residuals",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_residuals.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package pathlib are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.utils.plotting.admm_animation",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_mpc/utils/plotting/admm_animation.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package pathlib are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.ml_model_datatypes",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/data_structures/ml_model_datatypes.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.data_structures.ml_model_datatypes",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/data_structures/ml_model_datatypes.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/data_structures/ml_model_datatypes.py: Fatal error while checking 'agentlib_mpc/data_structures/ml_model_datatypes.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-46.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.interpolation",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/data_structures/interpolation.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.interpolation",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/data_structures/interpolation.py",
            "symbol": "invalid-name",
            "message": "Constant name \"a\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.interpolation",
            "obj": "InterpolationMethods",
            "line": 6,
            "column": 0,
            "path": "agentlib_mpc/data_structures/interpolation.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.interpolation",
            "obj": "InterpolationMethods",
            "line": 7,
            "column": 4,
            "path": "agentlib_mpc/data_structures/interpolation.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"linear\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.interpolation",
            "obj": "InterpolationMethods",
            "line": 8,
            "column": 4,
            "path": "agentlib_mpc/data_structures/interpolation.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"previous\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.interpolation",
            "obj": "InterpolationMethods",
            "line": 9,
            "column": 4,
            "path": "agentlib_mpc/data_structures/interpolation.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"no_interpolation\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.interpolation",
            "obj": "InterpolationMethods",
            "line": 10,
            "column": 4,
            "path": "agentlib_mpc/data_structures/interpolation.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"spline3\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.interpolation",
            "obj": "InterpolationMethods",
            "line": 24,
            "column": 4,
            "path": "agentlib_mpc/data_structures/interpolation.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"mean_over_interval\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.interpolation",
            "obj": "",
            "line": 27,
            "column": 0,
            "path": "agentlib_mpc/data_structures/interpolation.py",
            "symbol": "invalid-name",
            "message": "Constant name \"c\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.coordinator_datatypes",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/data_structures/coordinator_datatypes.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.data_structures.coordinator_datatypes",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_mpc/data_structures/coordinator_datatypes.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.data_structures.coordinator_datatypes",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib_mpc/data_structures/coordinator_datatypes.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.coordinator_datatypes",
            "obj": "CoordinatorStatus",
            "line": 29,
            "column": 4,
            "path": "agentlib_mpc/data_structures/coordinator_datatypes.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"sleeping\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.coordinator_datatypes",
            "obj": "CoordinatorStatus",
            "line": 30,
            "column": 4,
            "path": "agentlib_mpc/data_structures/coordinator_datatypes.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"init_iterations\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.coordinator_datatypes",
            "obj": "CoordinatorStatus",
            "line": 31,
            "column": 4,
            "path": "agentlib_mpc/data_structures/coordinator_datatypes.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"optimization\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.coordinator_datatypes",
            "obj": "CoordinatorStatus",
            "line": 32,
            "column": 4,
            "path": "agentlib_mpc/data_structures/coordinator_datatypes.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"updating\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.coordinator_datatypes",
            "obj": "AgentStatus",
            "line": 39,
            "column": 4,
            "path": "agentlib_mpc/data_structures/coordinator_datatypes.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"pending\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.coordinator_datatypes",
            "obj": "AgentStatus",
            "line": 40,
            "column": 4,
            "path": "agentlib_mpc/data_structures/coordinator_datatypes.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"standby\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.coordinator_datatypes",
            "obj": "AgentStatus",
            "line": 41,
            "column": 4,
            "path": "agentlib_mpc/data_structures/coordinator_datatypes.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"ready\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.coordinator_datatypes",
            "obj": "AgentStatus",
            "line": 42,
            "column": 4,
            "path": "agentlib_mpc/data_structures/coordinator_datatypes.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"busy\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.coordinator_datatypes",
            "obj": "OptimizationData.to_dict",
            "line": 54,
            "column": 4,
            "path": "agentlib_mpc/data_structures/coordinator_datatypes.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.coordinator_datatypes",
            "obj": "OptimizationData.from_dict",
            "line": 62,
            "column": 4,
            "path": "agentlib_mpc/data_structures/coordinator_datatypes.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.data_structures.coordinator_datatypes",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib_mpc/data_structures/coordinator_datatypes.py",
            "symbol": "unused-import",
            "message": "Unused Source imported from agentlib.core",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.data_structures.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/data_structures/__init__.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.backend",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/backend.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.optimization_backends.backend",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/backend.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/optimization_backends/backend.py: Fatal error while checking 'agentlib_mpc/optimization_backends/backend.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-46.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/__init__.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.optimization_backends",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/__init__.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "import-error",
            "message": "Unable to import 'casadi'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "BaseSystem",
            "line": 28,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "BaseSystem",
            "line": 28,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (11/7)",
            "message-id": "R0902"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "BaseSystem.initialize",
            "line": 99,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'time' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "CollocationMatrices",
            "line": 103,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "CollocationMatrices",
            "line": 106,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"B\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "CollocationMatrices",
            "line": 107,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"C\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "CollocationMatrices",
            "line": 108,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"D\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation",
            "line": 111,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._discretize",
            "line": 112,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (17/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._discretize",
            "line": 122,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"n\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._discretize",
            "line": 123,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ts\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._discretize",
            "line": 127,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._discretize",
            "line": 137,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"uk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._discretize",
            "line": 139,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._discretize",
            "line": 164,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._collocation_inner_loop",
            "line": 249,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (7/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._collocation_inner_loop",
            "line": 249,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (24/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._collocation_inner_loop",
            "line": 283,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ts\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._collocation_inner_loop",
            "line": 314,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xp\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._collocation_inner_loop",
            "line": 315,
            "column": 16,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"r\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._collocation_inner_loop",
            "line": 316,
            "column": 16,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xp\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._collocation_polynomial",
            "line": 345,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"d\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._collocation_polynomial",
            "line": 352,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"C\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._collocation_polynomial",
            "line": 355,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"D\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._collocation_polynomial",
            "line": 358,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"B\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._collocation_polynomial",
            "line": 364,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"p\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._collocation_polynomial",
            "line": 365,
            "column": 16,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"r\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._collocation_polynomial",
            "line": 367,
            "column": 20,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"p\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "DirectCollocation._collocation_polynomial",
            "line": 376,
            "column": 16,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"r\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "MultipleShooting",
            "line": 393,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "MultipleShooting._discretize",
            "line": 394,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (18/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "MultipleShooting._discretize",
            "line": 399,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"n\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "MultipleShooting._discretize",
            "line": 400,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ts\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "MultipleShooting._discretize",
            "line": 404,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "MultipleShooting._discretize",
            "line": 411,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"uk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "MultipleShooting._discretize",
            "line": 412,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "MultipleShooting._discretize",
            "line": 413,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"zk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "MultipleShooting._discretize",
            "line": 414,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"yk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "MultipleShooting._discretize",
            "line": 435,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"fk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "MultipleShooting._discretize",
            "line": 443,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.basic",
            "obj": "MultipleShooting._create_ode",
            "line": 457,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/basic.py",
            "symbol": "invalid-name",
            "message": "Variable name \"p\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.casadi_ml",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/casadi_ml.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.optimization_backends.casadi_.casadi_ml",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/casadi_ml.py",
            "symbol": "import-error",
            "message": "Unable to import 'casadi'",
            "message-id": "E0401"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.optimization_backends.casadi_.casadi_ml",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/casadi_ml.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/optimization_backends/casadi_/casadi_ml.py: Fatal error while checking 'agentlib_mpc/optimization_backends/casadi_/casadi_ml.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-47.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "import-error",
            "message": "Unable to import 'casadi'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "FullSystem",
            "line": 17,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "FullSystem.initialize",
            "line": 39,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'time' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "DirectCollocation",
            "line": 42,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "DirectCollocation._discretize",
            "line": 43,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (17/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "DirectCollocation._discretize",
            "line": 53,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"n\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "DirectCollocation._discretize",
            "line": 54,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ts\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "DirectCollocation._discretize",
            "line": 58,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "DirectCollocation._discretize",
            "line": 59,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"uk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "DirectCollocation._discretize",
            "line": 70,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"uk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "DirectCollocation._discretize",
            "line": 93,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "MultipleShooting",
            "line": 103,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "MultipleShooting._discretize",
            "line": 104,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (20/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "MultipleShooting._discretize",
            "line": 109,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"n\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "MultipleShooting._discretize",
            "line": 110,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ts\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "MultipleShooting._discretize",
            "line": 114,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "MultipleShooting._discretize",
            "line": 116,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"uk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "MultipleShooting._discretize",
            "line": 127,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"uk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "MultipleShooting._discretize",
            "line": 130,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "MultipleShooting._discretize",
            "line": 131,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"zk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "MultipleShooting._discretize",
            "line": 132,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"yk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "MultipleShooting._discretize",
            "line": 149,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"fk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.full",
            "obj": "MultipleShooting._discretize",
            "line": 156,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/full.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "import-error",
            "message": "Unable to import 'casadi'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "CasadiADMMSystem",
            "line": 22,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "CasadiADMMSystem",
            "line": 22,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (9/7)",
            "message-id": "R0902"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "ADMMCollocation",
            "line": 107,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "ADMMCollocation._discretize",
            "line": 108,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (18/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "ADMMCollocation._discretize",
            "line": 118,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "invalid-name",
            "message": "Variable name \"n\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "ADMMCollocation._discretize",
            "line": 119,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ts\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "ADMMCollocation._discretize",
            "line": 123,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "ADMMCollocation._discretize",
            "line": 124,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "invalid-name",
            "message": "Variable name \"uk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "ADMMCollocation._discretize",
            "line": 136,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "invalid-name",
            "message": "Variable name \"uk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "ADMMCollocation._discretize",
            "line": 173,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "ADMMMultipleShooting",
            "line": 183,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "ADMMMultipleShooting._discretize",
            "line": 184,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (28/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "ADMMMultipleShooting._create_ode",
            "line": 307,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "invalid-name",
            "message": "Variable name \"p\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "CasADiADMMBackend.__init__",
            "line": 342,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"it\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "CasADiADMMBackend.save_result_df",
            "line": 402,
            "column": 13,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "CasADiADMMBackend.save_result_df",
            "line": 402,
            "column": 48,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "CasADiADMMBackend.save_result_df",
            "line": 406,
            "column": 13,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.admm",
            "obj": "CasADiADMMBackend.save_result_df",
            "line": 406,
            "column": 48,
            "path": "agentlib_mpc/optimization_backends/casadi_/admm.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "import-error",
            "message": "Unable to import 'casadi'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "CasadiMINLPSystem",
            "line": 17,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "DirectCollocation",
            "line": 63,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "DirectCollocation._discretize",
            "line": 64,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (17/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "DirectCollocation._discretize",
            "line": 74,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"n\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "DirectCollocation._discretize",
            "line": 75,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ts\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "DirectCollocation._discretize",
            "line": 79,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "DirectCollocation._discretize",
            "line": 88,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"uk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "DirectCollocation._discretize",
            "line": 89,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"wk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "DirectCollocation._discretize",
            "line": 92,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "DirectCollocation._discretize",
            "line": 118,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "MultipleShooting",
            "line": 128,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "MultipleShooting._discretize",
            "line": 129,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (19/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "MultipleShooting._discretize",
            "line": 134,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"n\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "MultipleShooting._discretize",
            "line": 135,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ts\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "MultipleShooting._discretize",
            "line": 139,
            "column": 8,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "MultipleShooting._discretize",
            "line": 146,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"uk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "MultipleShooting._discretize",
            "line": 147,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"wk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "MultipleShooting._discretize",
            "line": 148,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "MultipleShooting._discretize",
            "line": 149,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"zk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "MultipleShooting._discretize",
            "line": 150,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"yk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "MultipleShooting._discretize",
            "line": 166,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"fk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp",
            "obj": "MultipleShooting._discretize",
            "line": 174,
            "column": 12,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xk\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp_cia",
            "obj": "",
            "line": 28,
            "column": 29,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp_cia.py",
            "symbol": "anomalous-backslash-in-string",
            "message": "Anomalous backslash in string: '\\ '. String constant might be missing an r prefix.",
            "message-id": "W1401"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp_cia",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp_cia.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.optimization_backends.casadi_.minlp_cia",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/minlp_cia.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/optimization_backends/casadi_/minlp_cia.py: Fatal error while checking 'agentlib_mpc/optimization_backends/casadi_/minlp_cia.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-47.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.mhe",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/mhe.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.optimization_backends.casadi_.mhe",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/mhe.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/optimization_backends/casadi_/mhe.py: Fatal error while checking 'agentlib_mpc/optimization_backends/casadi_/mhe.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-48.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/casadi_admm_ml.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/casadi_admm_ml.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/optimization_backends/casadi_/casadi_admm_ml.py: Fatal error while checking 'agentlib_mpc/optimization_backends/casadi_/casadi_admm_ml.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-48.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.core.VariableGroup",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/core/VariableGroup.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.core.VariableGroup",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/core/VariableGroup.py",
            "symbol": "invalid-name",
            "message": "Module name \"VariableGroup\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.optimization_backends.casadi_.core.VariableGroup",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/core/VariableGroup.py",
            "symbol": "import-error",
            "message": "Unable to import 'casadi'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.core.VariableGroup",
            "obj": "OptimizationQuantity",
            "line": 11,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/core/VariableGroup.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.core.VariableGroup",
            "obj": "OptimizationVariable",
            "line": 33,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/core/VariableGroup.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.optimization_backends.casadi_.core.VariableGroup",
            "obj": "OptimizationVariable.declare",
            "line": 40,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/core/VariableGroup.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (7/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.optimization_backends.casadi_.core.VariableGroup",
            "obj": "OptimizationVariable.declare",
            "line": 40,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/core/VariableGroup.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (22/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.core.VariableGroup",
            "obj": "OptimizationParameter",
            "line": 144,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/core/VariableGroup.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.optimization_backends.casadi_.core.VariableGroup",
            "obj": "OptimizationParameter.declare",
            "line": 149,
            "column": 4,
            "path": "agentlib_mpc/optimization_backends/casadi_/core/VariableGroup.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (6/5)",
            "message-id": "R0913"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.optimization_backends.casadi_.core.casadi_backend",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/core/casadi_backend.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.optimization_backends.casadi_.core.casadi_backend",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/core/casadi_backend.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/optimization_backends/casadi_/core/casadi_backend.py: Fatal error while checking 'agentlib_mpc/optimization_backends/casadi_/core/casadi_backend.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-48.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.optimization_backends.casadi_.core.system",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/core/system.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/optimization_backends/casadi_/core/system.py: Fatal error while checking 'agentlib_mpc/optimization_backends/casadi_/core/system.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-48.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.optimization_backends.casadi_.core.discretization",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/optimization_backends/casadi_/core/discretization.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/optimization_backends/casadi_/core/discretization.py: Fatal error while checking 'agentlib_mpc/optimization_backends/casadi_/core/discretization.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-48.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.data_source",
            "obj": "",
            "line": 122,
            "column": 0,
            "path": "agentlib_mpc/modules/data_source.py",
            "symbol": "line-too-long",
            "message": "Line too long (147/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.data_source",
            "obj": "",
            "line": 178,
            "column": 0,
            "path": "agentlib_mpc/modules/data_source.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.data_source",
            "obj": "",
            "line": 180,
            "column": 0,
            "path": "agentlib_mpc/modules/data_source.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.data_source",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/data_source.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.data_source",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/modules/data_source.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.data_source",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_mpc/modules/data_source.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.data_source",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_mpc/modules/data_source.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.modules.data_source",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/data_source.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/modules/data_source.py: Fatal error while checking 'agentlib_mpc/modules/data_source.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-49.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.minlp_mpc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/minlp_mpc.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.minlp_mpc",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_mpc/modules/minlp_mpc.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.minlp_mpc",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "agentlib_mpc/modules/minlp_mpc.py",
            "symbol": "no-name-in-module",
            "message": "No name 'BaseMPCConfig' in module 'agentlib_mpc.modules.mpc'",
            "message-id": "E0611"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.minlp_mpc",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "agentlib_mpc/modules/minlp_mpc.py",
            "symbol": "no-name-in-module",
            "message": "No name 'BaseMPC' in module 'agentlib_mpc.modules.mpc'",
            "message-id": "E0611"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.minlp_mpc",
            "obj": "MINLPMPCConfig.validate_binary_bounds",
            "line": 31,
            "column": 12,
            "path": "agentlib_mpc/modules/minlp_mpc.py",
            "symbol": "invalid-name",
            "message": "Variable name \"bc\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.modules.minlp_mpc",
            "obj": "MINLPMPCConfig.validate_binary_bounds",
            "line": 34,
            "column": 12,
            "path": "agentlib_mpc/modules/minlp_mpc.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.minlp_mpc",
            "obj": "MINLPMPC",
            "line": 43,
            "column": 0,
            "path": "agentlib_mpc/modules/minlp_mpc.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.minlp_mpc",
            "obj": "MINLPMPC.cleanup_results",
            "line": 103,
            "column": 4,
            "path": "agentlib_mpc/modules/minlp_mpc.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.data_source",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_mpc/modules/data_source.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import logging\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.minlp_mpc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/minlp_mpc.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import logging\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.minlp_mpc",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_mpc/modules/minlp_mpc.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import os\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_simulator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_simulator.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.ml_model_simulator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_simulator.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.ml_model_simulator",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_simulator.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.ml_model_simulator",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_simulator.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.errors'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.ml_model_simulator",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_simulator.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.modules.simulator'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.ml_model_simulator",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_simulator.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic_core.core_schema'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.ml_model_simulator",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_simulator.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_simulator",
            "obj": "MLModelSimulatorConfig",
            "line": 12,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_simulator.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_simulator",
            "obj": "MLModelSimulator",
            "line": 28,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_simulator.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_simulator",
            "obj": "MLModelSimulator.register_callbacks",
            "line": 39,
            "column": 4,
            "path": "agentlib_mpc/modules/ml_model_simulator.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_simulator",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_simulator.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"from pydantic import field_validator\" should be placed before \"from agentlib_mpc.models.casadi_ml_model import CasadiMLModel\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules",
            "obj": "ModuleImport",
            "line": 11,
            "column": 0,
            "path": "agentlib_mpc/modules/__init__.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules",
            "obj": "ModuleImport.import_class",
            "line": 16,
            "column": 4,
            "path": "agentlib_mpc/modules/__init__.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.deactivate_mpc.fallback_pid",
            "obj": "",
            "line": 56,
            "column": 0,
            "path": "agentlib_mpc/modules/deactivate_mpc/fallback_pid.py",
            "symbol": "line-too-long",
            "message": "Line too long (115/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.deactivate_mpc.fallback_pid",
            "obj": "",
            "line": 97,
            "column": 0,
            "path": "agentlib_mpc/modules/deactivate_mpc/fallback_pid.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.deactivate_mpc.fallback_pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/deactivate_mpc/fallback_pid.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.modules.deactivate_mpc.fallback_pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/deactivate_mpc/fallback_pid.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/modules/deactivate_mpc/fallback_pid.py: Fatal error while checking 'agentlib_mpc/modules/deactivate_mpc/fallback_pid.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-49.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.deactivate_mpc.deactivate_mpc",
            "obj": "",
            "line": 29,
            "column": 0,
            "path": "agentlib_mpc/modules/deactivate_mpc/deactivate_mpc.py",
            "symbol": "line-too-long",
            "message": "Line too long (139/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.deactivate_mpc.deactivate_mpc",
            "obj": "",
            "line": 33,
            "column": 0,
            "path": "agentlib_mpc/modules/deactivate_mpc/deactivate_mpc.py",
            "symbol": "line-too-long",
            "message": "Line too long (139/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.deactivate_mpc.deactivate_mpc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/deactivate_mpc/deactivate_mpc.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.deactivate_mpc.deactivate_mpc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/deactivate_mpc/deactivate_mpc.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.deactivate_mpc.deactivate_mpc",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_mpc/modules/deactivate_mpc/deactivate_mpc.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.deactivate_mpc.deactivate_mpc",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/modules/deactivate_mpc/deactivate_mpc.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.modules.deactivate_mpc.deactivate_mpc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/deactivate_mpc/deactivate_mpc.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/modules/deactivate_mpc/deactivate_mpc.py: Fatal error while checking 'agentlib_mpc/modules/deactivate_mpc/deactivate_mpc.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-49.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.modules.mpc.mpc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/mpc/mpc.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/modules/mpc/mpc.py: Fatal error while checking 'agentlib_mpc/modules/mpc/mpc.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-49.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.modules.mpc.mpc_full",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/mpc/mpc_full.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/modules/mpc/mpc_full.py: Fatal error while checking 'agentlib_mpc/modules/mpc/mpc_full.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-49.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.mpc.skippable_mixin",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/mpc/skippable_mixin.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.modules.mpc.skippable_mixin",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/mpc/skippable_mixin.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/modules/mpc/skippable_mixin.py: Fatal error while checking 'agentlib_mpc/modules/mpc/skippable_mixin.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-49.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.estimation.mhe",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/estimation/mhe.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.modules.estimation.mhe",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/estimation/mhe.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/modules/estimation/mhe.py: Fatal error while checking 'agentlib_mpc/modules/estimation/mhe.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-49.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc.coordinator",
            "obj": "",
            "line": 204,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/coordinator.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'not' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc.coordinator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/coordinator.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.modules.dmpc.coordinator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/coordinator.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/modules/dmpc/coordinator.py: Fatal error while checking 'agentlib_mpc/modules/dmpc/coordinator.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-49.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "",
            "line": 91,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "line-too-long",
            "message": "Line too long (140/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "",
            "line": 185,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'not' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "",
            "line": 14,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.datamodels'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "MiniEmployeeConfig",
            "line": 25,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "MiniEmployee",
            "line": 48,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "MiniEmployee.registration_callback",
            "line": 188,
            "column": 8,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"OptimOpts\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "MiniEmployee.process",
            "line": 57,
            "column": 4,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "MiniEmployee.register_callbacks",
            "line": 65,
            "column": 4,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "MiniEmployee.pre_computation_hook",
            "line": 93,
            "column": 8,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "MiniEmployee.get_new_measurement",
            "line": 134,
            "column": 8,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "unnecessary-ellipsis",
            "message": "Unnecessary ellipsis constant",
            "message-id": "W2301"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "MiniEmployee.shift_trajectories",
            "line": 172,
            "column": 8,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "unnecessary-ellipsis",
            "message": "Unnecessary ellipsis constant",
            "message-id": "W2301"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "MiniEmployee.registration_callback",
            "line": 188,
            "column": 8,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'OptimOpts' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package logging are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package dataclasses are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "unused-import",
            "message": "Unused BaseModule imported from agentlib.core",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.modules.dmpc.employee",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/employee.py",
            "symbol": "unused-import",
            "message": "Unused BaseModuleConfig imported from agentlib.core",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/__init__.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.modules.dmpc.admm.admm_coordinated",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/admm/admm_coordinated.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/modules/dmpc/admm/admm_coordinated.py: Fatal error while checking 'agentlib_mpc/modules/dmpc/admm/admm_coordinated.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-49.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.modules.dmpc.admm.admm",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/admm/admm.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/modules/dmpc/admm/admm.py: Fatal error while checking 'agentlib_mpc/modules/dmpc/admm/admm.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-50.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc.admm.admm_coordinator",
            "obj": "",
            "line": 599,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/admm/admm_coordinator.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'not' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc.admm.admm_coordinator",
            "obj": "",
            "line": 631,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/admm/admm_coordinator.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'not' keyword",
            "message-id": "C0325"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.modules.dmpc.admm.admm_coordinator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/admm/admm_coordinator.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/modules/dmpc/admm/admm_coordinator.py: Fatal error while checking 'agentlib_mpc/modules/dmpc/admm/admm_coordinator.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-50.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.dmpc.admm.admm_coordinator",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_mpc/modules/dmpc/admm/admm_coordinator.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package time are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "",
            "line": 97,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "line-too-long",
            "message": "Line too long (122/100)",
            "message-id": "C0301"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.gaussian_process.kernels'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "InducingPoints.reduce",
            "line": 24,
            "column": 4,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "NystroemReducer",
            "line": 33,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "NystroemReducer.__init__",
            "line": 34,
            "column": 23,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'n_components' from outer scope (line 59)",
            "message-id": "W0621"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "NystroemReducer.__init__",
            "line": 35,
            "column": 8,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "super-with-arguments",
            "message": "Consider using Python 3 style super() without arguments",
            "message-id": "R1725"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "",
            "line": 56,
            "column": 4,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.gaussian_process'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "",
            "line": 57,
            "column": 4,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.pyplot'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "",
            "line": 59,
            "column": 4,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "invalid-name",
            "message": "Constant name \"n_components\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "f",
            "line": 61,
            "column": 4,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "invalid-name",
            "message": "Function name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "get_score",
            "line": 66,
            "column": 4,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "get_score",
            "line": 66,
            "column": 24,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'x_test' from outer scope (line 83)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "get_score",
            "line": 66,
            "column": 32,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'y_test' from outer scope (line 84)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "get_score",
            "line": 69,
            "column": 8,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "invalid-name",
            "message": "Variable name \"s\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "",
            "line": 75,
            "column": 13,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "use-list-literal",
            "message": "Consider using [] instead of list()",
            "message-id": "R1734"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_training.data_reduction",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_training/data_reduction.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from abc import ABC, abstractmethod\" should be placed before \"import numpy as np\"",
            "message-id": "C0411"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.ml_model_training.setpoint_generator",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_training/setpoint_generator.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_training.setpoint_generator",
            "obj": "SetPointGenerator.register_callbacks",
            "line": 42,
            "column": 4,
            "path": "agentlib_mpc/modules/ml_model_training/setpoint_generator.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_training.setpoint_generator",
            "obj": "SetPointGenerator.process",
            "line": 44,
            "column": 4,
            "path": "agentlib_mpc/modules/ml_model_training/setpoint_generator.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_training.ml_model_trainer",
            "obj": "",
            "line": 515,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_training/ml_model_trainer.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after '=' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_training.ml_model_trainer",
            "obj": "",
            "line": 723,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_training/ml_model_trainer.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.ml_model_training.ml_model_trainer",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_training/ml_model_trainer.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib_mpc.modules.ml_model_training.ml_model_trainer",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/ml_model_training/ml_model_trainer.py",
            "symbol": "astroid-error",
            "message": "agentlib_mpc/modules/ml_model_training/ml_model_trainer.py: Fatal error while checking 'agentlib_mpc/modules/ml_model_training/ml_model_trainer.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-10-42-50.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.InputPrediction.try_predictor",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/try_predictor.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.InputPrediction.try_predictor",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/try_predictor.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.InputPrediction.try_predictor",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/try_predictor.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.InputPrediction.try_predictor",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/try_predictor.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_mpc.modules.InputPrediction.try_predictor",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/try_predictor.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.modules.utils.try_sensor'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.InputPrediction.try_predictor",
            "obj": "TRYPredictorConfig",
            "line": 7,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/try_predictor.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.InputPrediction.try_predictor",
            "obj": "TRYPredictor",
            "line": 70,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/try_predictor.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.InputPrediction.try_predictor",
            "obj": "TRYPredictor.process",
            "line": 74,
            "column": 4,
            "path": "agentlib_mpc/modules/InputPrediction/try_predictor.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.InputPrediction.try_predictor",
            "obj": "TRYPredictor.send_prediction",
            "line": 80,
            "column": 4,
            "path": "agentlib_mpc/modules/InputPrediction/try_predictor.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.InputPrediction.try_predictor",
            "obj": "TRYPredictor.send_measurement",
            "line": 87,
            "column": 4,
            "path": "agentlib_mpc/modules/InputPrediction/try_predictor.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_mpc.modules.InputPrediction",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "invalid-name",
            "message": "Module name \"InputPrediction\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[47:114]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[39:104]\n        self.states = OptimizationVariable.declare(\n            denotation=\"state\",\n            variables=model.get_states(var_ref.states),\n            ref_list=var_ref.states,\n            assert_complete=True,\n        )\n        self.controls = OptimizationVariable.declare(\n            denotation=\"control\",\n            variables=model.get_inputs(var_ref.controls),\n            ref_list=var_ref.controls,\n            assert_complete=True,\n        )\n        self.algebraics = OptimizationVariable.declare(\n            denotation=\"z\",\n            variables=model.auxiliaries,\n            ref_list=[],\n        )\n        self.outputs = OptimizationVariable.declare(\n            denotation=\"y\",\n            variables=model.outputs,\n            ref_list=var_ref.outputs,\n        )\n\n        # define parameters\n        self.non_controlled_inputs = OptimizationParameter.declare(\n            denotation=\"d\",\n            variables=model.get_inputs(var_ref.inputs),\n            ref_list=var_ref.inputs,\n            assert_complete=True,\n        )\n        self.model_parameters = OptimizationParameter.declare(\n            denotation=\"parameter\",\n            variables=model.parameters,\n            ref_list=var_ref.parameters,\n        )\n        self.initial_state = OptimizationParameter.declare(\n            denotation=\"initial_state\",\n            variables=model.get_states(var_ref.states),\n            ref_list=var_ref.states,\n            use_in_stage_function=False,\n            assert_complete=True,\n        )\n        self.last_control = OptimizationParameter.declare(\n            denotation=\"initial_control\",\n            variables=model.get_inputs(var_ref.controls),\n            ref_list=var_ref.controls,\n            use_in_stage_function=False,\n            assert_complete=True,\n        )\n        self.r_del_u = OptimizationParameter.declare(\n            denotation=\"r_del_u\",\n            variables=[CasadiParameter(name=r_del_u) for r_del_u in var_ref.r_del_u],\n            ref_list=var_ref.r_del_u,\n            use_in_stage_function=False,\n            assert_complete=True,\n        )\n        self.cost_function = model.cost_func\n        self.model_constraints = Constraint(\n            function=ca.vertcat(*[c.function for c in model.get_constraints()]),\n            lb=ca.vertcat(*[c.lb for c in model.get_constraints()]),\n            ub=ca.vertcat(*[c.ub for c in model.get_constraints()]),\n        )\n        self.sim_step = model.make_predict_function_for_mpc()\n        self.model = model\n        self.lags_dict: dict[str, int] = model.lags_dict",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.admm:[33:89]\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[114:168]\n        coup_names = [c.name for c in var_ref.couplings]\n        exchange_names = [c.name for c in var_ref.exchange]\n        pure_outs = [\n            m for m in model.outputs if m.name not in coup_names + exchange_names\n        ]\n        self.outputs = OptimizationVariable.declare(\n            denotation=\"y\",\n            variables=pure_outs,\n            ref_list=var_ref.outputs,\n        )\n\n        self.local_couplings = OptimizationVariable.declare(\n            denotation=\"local_couplings\",\n            variables=[model.get(name) for name in coup_names],\n            ref_list=coup_names,\n        )\n        couplings_global = [coup.mean for coup in var_ref.couplings]\n        self.global_couplings = OptimizationParameter.declare(\n            denotation=\"global_couplings\",\n            variables=[CasadiInput(name=coup) for coup in couplings_global],\n            ref_list=couplings_global,\n        )\n\n        multipliers = [coup.multiplier for coup in var_ref.couplings]\n        self.multipliers = OptimizationParameter.declare(\n            denotation=\"multipliers\",\n            variables=[CasadiInput(name=coup) for coup in multipliers],\n            ref_list=multipliers,\n        )\n\n        self.local_exchange = OptimizationVariable.declare(\n            denotation=\"local_exchange\",\n            variables=[model.get(name) for name in exchange_names],\n            ref_list=exchange_names,\n        )\n        couplings_mean_diff = [coup.mean_diff for coup in var_ref.exchange]\n        self.exchange_diff = OptimizationParameter.declare(\n            denotation=\"average_diff\",\n            variables=[CasadiInput(name=coup) for coup in couplings_mean_diff],\n            ref_list=couplings_mean_diff,\n        )\n\n        multipliers = [coup.multiplier for coup in var_ref.exchange]\n        self.exchange_multipliers = OptimizationParameter.declare(\n            denotation=\"exchange_multipliers\",\n            variables=[CasadiInput(name=coup) for coup in multipliers],\n            ref_list=multipliers,\n        )\n\n        self.penalty_factor = OptimizationParameter.declare(\n            denotation=\"rho\",\n            variables=[CasadiParameter(name=\"penalty_factor\")],\n            ref_list=[\"penalty_factor\"],\n        )\n\n        # add admm terms to objective function",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[46:90]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[39:81]\n        self.states = OptimizationVariable.declare(\n            denotation=\"state\",\n            variables=model.get_states(var_ref.states),\n            ref_list=var_ref.states,\n            assert_complete=True,\n        )\n        self.controls = OptimizationVariable.declare(\n            denotation=\"control\",\n            variables=model.get_inputs(var_ref.controls),\n            ref_list=var_ref.controls,\n            assert_complete=True,\n        )\n        self.algebraics = OptimizationVariable.declare(\n            denotation=\"z\",\n            variables=model.auxiliaries,\n            ref_list=[],\n        )\n        self.outputs = OptimizationVariable.declare(\n            denotation=\"y\",\n            variables=model.outputs,\n            ref_list=var_ref.outputs,\n        )\n\n        # define parameters\n        self.non_controlled_inputs = OptimizationParameter.declare(\n            denotation=\"d\",\n            variables=model.get_inputs(var_ref.inputs),\n            ref_list=var_ref.inputs,\n            assert_complete=True,\n        )\n        self.model_parameters = OptimizationParameter.declare(\n            denotation=\"parameter\",\n            variables=model.parameters,\n            ref_list=var_ref.parameters,\n        )\n        self.initial_state = OptimizationParameter.declare(\n            denotation=\"initial_state\",  # append the 0 as a convention to get initial guess\n            variables=model.get_states(var_ref.states),\n            ref_list=var_ref.states,\n            use_in_stage_function=False,\n            assert_complete=True,\n        )\n\n        # dynamics",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[446:497]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[296:347]\n                    all_input_variables[l_name] = new_lag_var\n\n                    # add the mx variable to its lag time and denotation\n                    lagged_inputs_j = lagged_inputs.setdefault(j, {})\n                    lv_mx = lagged_inputs_j.setdefault(q_name, ca.DM([]))\n                    lagged_inputs[j][q_name] = ca.vertcat(lv_mx, new_lag_var)\n\n                    # keep track of the variable names that were added\n                    lagged_input_names_j = lagged_input_names.setdefault(j, {})\n                    lv_names = lagged_input_names_j.setdefault(q_name, [])\n                    lv_names.append(v_name)\n\n        self._lagged_input_names = lagged_input_names\n        flat_lagged_inputs = {\n            f\"{den}_{i}\": mx\n            for i, subdict in lagged_inputs.items()\n            for den, mx in subdict.items()\n        }\n\n        all_outputs = system.sim_step(**all_input_variables)\n        state_output_it = (all_outputs[s_name] for s_name in system.states.full_names)\n        state_output = ca.vertcat(*state_output_it)\n\n        # aggregate outputs\n        outputs = [\n            state_output,\n            system.cost_function,\n            *constraints_func,\n            *constraints_lb,\n            *constraints_ub,\n        ]\n        output_denotations = [\n            \"next_states\",\n            \"cost_function\",\n            *constraint_denotations,\n            *constraint_lb_denotations,\n            *constraint_ub_denotations,\n        ]\n\n        # function describing system dynamics and cost function\n        self._stage_function = ca.Function(\n            \"f\",\n            inputs + list(flat_lagged_inputs.values()),\n            outputs,\n            # input handles to make kwarg use possible and to debug\n            input_denotations + list(flat_lagged_inputs),\n            # output handles to make kwarg use possible and to debug\n            output_denotations,\n        )\n\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[208:275]\n==agentlib_mpc.optimization_backends.casadi_.mhe:[231:298]\n        constraints_func = [c.function for c in constraints.values()]\n        constraints_lb = [c.lb for c in constraints.values()]\n        constraints_ub = [c.ub for c in constraints.values()]\n        constraint_denotations = list(constraints.keys())\n        constraint_lb_denotations = [LB_PREFIX + k for k in constraints]\n        constraint_ub_denotations = [UB_PREFIX + k for k in constraints]\n\n        # aggregate outputs\n        outputs = [\n            system.ode,\n            system.cost_function,\n            *constraints_func,\n            *constraints_lb,\n            *constraints_ub,\n        ]\n        output_denotations = [\n            \"ode\",\n            \"cost_function\",\n            *constraint_denotations,\n            *constraint_lb_denotations,\n            *constraint_ub_denotations,\n        ]\n\n        # function describing system dynamics and cost function\n        self._stage_function = ca.Function(\n            \"f\",\n            inputs,\n            outputs,\n            # input handles to make kwarg use possible and to debug\n            input_denotations,\n            # output handles to make kwarg use possible and to debug\n            output_denotations,\n        )\n\n    def initialize(self, system: BaseSystem, solver_factory: SolverFactory):\n        \"\"\"Initializes the trajectory optimization problem, creating all symbolic\n        variables of the OCP, the mapping function and the numerical solver.\"\"\"\n        self._construct_stage_function(system)\n        super().initialize(system=system, solver_factory=solver_factory)\n\n    def _collocation_inner_loop(\n        self,\n        state_at_beginning: ca.MX,\n        collocation: CollocationMatrices,\n        states: OptimizationVariable,\n        opt_vars: list[OptimizationVariable],\n        opt_pars: list[OptimizationParameter],\n        const: dict[OptimizationQuantity, ca.MX],\n    ) -> tuple[ca.MX, tuple]:\n        \"\"\"\n        Constructs the inner loop of a collocation discretization. Takes the\n\n        Args\n            collocation: The collocation matrices\n            state_at_beginning: The casadi MX instance representing the state at the\n                beginning of the collocation interval\n            states: The OptimizationVariable representing the states\n            opt_vars: The OptimizationVariables which should be defined at each\n                collocation point\n            par_vars: The OptimizationParameters which should be defined at each\n                collocation point\n            const: Variables or parameters to feed into the system function that are\n                constant over the inner loop. Value is the current MX to be used.\n\n        Returns:\n            state_k_end[MX]: state at the end of collocation interval\n        \"\"\"",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[248:286]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[125:163]\n        du_weights = self.add_opt_par(sys.r_del_u)\n\n        pre_grid_states = [ts * i for i in range(-sys.max_lag + 1, 1)]\n        inputs_lag = min(-2, -sys.max_lag)  # at least -2, to consider last control\n        pre_grid_inputs = [ts * i for i in range(inputs_lag + 1, 0)]\n        prediction_grid = [ts * i for i in range(0, n)]\n\n        # sort for debugging purposes\n        full_grid = sorted(\n            list(set(prediction_grid + pre_grid_inputs + pre_grid_states))\n        )\n\n        # dict[time, dict[denotation, ca.MX]]\n        mx_dict: dict[float, dict[str, ca.MX]] = {time: {} for time in full_grid}\n\n        # add past state variables\n        for time in pre_grid_states:\n            self.pred_time = time\n            x_past = self.add_opt_par(sys.initial_state)\n            # add past states as optimization variables with fixed values so they can\n            # be accessed by the first few steps, when there are lags\n            mx_dict[time][sys.states.name] = self.add_opt_var(\n                sys.states, lb=x_past, ub=x_past, guess=x_past\n            )\n            mx_dict[time][sys.initial_state.name] = x_past\n\n        # add past inputs\n        for time in pre_grid_inputs:\n            self.pred_time = time\n            d = sys.non_controlled_inputs\n            mx_dict[time][d.name] = self.add_opt_par(d)\n            u_past = self.add_opt_par(sys.last_control)\n            mx_dict[time][sys.controls.name] = self.add_opt_var(\n                sys.controls, lb=u_past, ub=u_past, guess=u_past\n            )\n            mx_dict[time][sys.last_control.name] = u_past\n\n        # add all variables over future grid",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[344:392]\n==agentlib_mpc.optimization_backends.casadi_.mhe:[365:413]\n        d = self.options.collocation_order\n        polynomial = self.options.collocation_method\n\n        # Get collocation points\n        tau_root = np.append(0, ca.collocation_points(d, polynomial))\n\n        # Coefficients of the collocation equation\n        C = np.zeros((d + 1, d + 1))\n\n        # Coefficients of the continuity equation\n        D = np.zeros(d + 1)\n\n        # Coefficients of the quadrature function\n        B = np.zeros(d + 1)\n\n        # Construct polynomial basis\n        for j in range(d + 1):\n            # Construct Lagrange polynomials to get the polynomial basis at\n            # the collocation point\n            p = np.poly1d([1])\n            for r in range(d + 1):\n                if r != j:\n                    p *= np.poly1d([1, -tau_root[r]]) / (tau_root[j] - tau_root[r])\n\n            # Evaluate the polynomial at the final time to get the\n            # coefficients of the continuity equation\n            D[j] = p(1.0)\n\n            # Evaluate the time derivative of the polynomial at all collocation\n            # points to get the coefficients of the continuity equation\n            pder = np.polyder(p)\n            for r in range(d + 1):\n                C[j, r] = pder(tau_root[r])\n\n            # Evaluate the integral of the polynomial to get the coefficients\n            # of the quadrature function\n            pint = np.polyint(p)\n            B[j] = pint(1.0)\n\n        return CollocationMatrices(\n            order=d,\n            root=tau_root,\n            B=B,\n            C=C,\n            D=D,\n        )\n\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.full:[78:115]\n==agentlib_mpc.optimization_backends.casadi_.minlp:[103:140]\n            xk_end, constraints = self._collocation_inner_loop(\n                collocation=collocation_matrices,\n                state_at_beginning=xk,\n                states=sys.states,\n                opt_vars=opt_vars_inside_inner,\n                opt_pars=opt_pars_inside_inner,\n                const=constant_over_inner,\n            )\n\n            # increment loop counter and time\n            self.k += 1\n            self.pred_time = ts * self.k\n\n            # New NLP variable for differential state at end of interval\n            xk = self.add_opt_var(sys.states)\n\n            # Add continuity constraint\n            self.add_constraint(xk - xk_end, gap_closing=True)\n\n            # add collocation constraints later for fatrop\n            for constraint in constraints:\n                self.add_constraint(*constraint)\n\n\nclass MultipleShooting(basic.MultipleShooting):\n    def _discretize(self, sys: CasadiMINLPSystem):\n        \"\"\"\n        Defines a multiple shooting discretization\n        \"\"\"\n        vars_dict = {sys.states.name: {}}\n        n = self.options.prediction_horizon\n        ts = self.options.time_step\n        opts = {\"t0\": 0, \"tf\": ts}\n        # Initial State\n        x0 = self.add_opt_par(sys.initial_state)\n        xk = self.add_opt_var(sys.states, lb=x0, ub=x0, guess=x0)\n        vars_dict[sys.states.name][0] = xk",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.mhe:[484:518]\n==agentlib_mpc.utils.sampling:[116:150]\n        if (target_grid.shape == source_grid.shape) and all(target_grid == source_grid):\n            return list(values)\n        values = np.array(values)\n\n        # check requested portion of trajectory, whether the most recent value in the\n        # source grid is older than the first value in the MHE trajectory\n        if target_grid[0] >= source_grid[-1]:\n            # return the last value of the trajectory if requested sample\n            # starts out of range\n            logger.warning(\n                f\"Latest value of source grid %s is older than \"\n                f\"current time (%s. Returning latest value anyway.\",\n                source_grid[-1],\n                current,\n            )\n            return [values[-1]] * target_grid_length\n\n        # determine whether the target grid lies within the available source grid, and\n        # how many entries to extrapolate on either side\n        source_grid_oldest_time: float = source_grid[0]\n        source_grid_newest_time: float = source_grid[-1]\n        source_is_recent_enough: np.ndarray = target_grid < source_grid_newest_time\n        source_is_old_enough: np.ndarray = target_grid > source_grid_oldest_time\n        number_of_missing_old_entries: int = target_grid_length - np.count_nonzero(\n            source_is_old_enough\n        )\n        number_of_missing_new_entries: int = target_grid_length - np.count_nonzero(\n            source_is_recent_enough\n        )\n        # shorten target interpolation grid by extra points that go above or below\n        # available data range\n        target_grid = target_grid[source_is_recent_enough * source_is_old_enough]\n\n        # interpolate data to match new grid",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[326:355]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[175:204]\n        self.pred_time = 0\n        for time in prediction_grid[1:]:\n            self.pred_time = time\n            mx_dict[time][sys.states.name] = self.add_opt_var(sys.states)\n        self.pred_time += ts\n        mx_dict[self.pred_time] = {sys.states.name: self.add_opt_var(sys.states)}\n\n        all_quantities = sys.all_system_quantities()\n        # add constraints and create the objective function for all stages\n        for time in prediction_grid:\n            stage_mx = mx_dict[time]\n\n            # add penalty on control change between intervals\n            u_prev = mx_dict[time - ts][sys.controls.name]\n            uk = stage_mx[sys.controls.name]\n            self.objective_function += ts * ca.dot(du_weights, (u_prev - uk) ** 2)\n\n            # get stage arguments from current time step\n            stage_arguments = {\n                # variables\n                sys.states.name: stage_mx[sys.states.name],\n                sys.algebraics.name: stage_mx[sys.algebraics.name],\n                sys.outputs.name: stage_mx[sys.outputs.name],\n                # parameters\n                sys.controls.name: stage_mx[sys.controls.name],\n                sys.non_controlled_inputs.name: stage_mx[\n                    sys.non_controlled_inputs.name\n                ],\n                sys.model_parameters.name: const_par,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[363:405]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[205:235]\n            }\n\n            # collect stage arguments for lagged variables\n            for lag, denotation_dict in self._lagged_input_names.items():\n                for denotation, var_names in denotation_dict.items():\n                    l_name = name_with_lag(denotation, lag)\n                    mx_list = []\n                    for v_name in var_names:\n                        index = all_quantities[denotation].full_names.index(v_name)\n                        mx_list.append(mx_dict[time - lag * ts][denotation][index])\n                    stage_arguments[l_name] = ca.vertcat(*mx_list)\n\n            # evaluate a stage, add path constraints, multiple shooting constraints\n            # and add to the objective function\n            stage_result = self._stage_function(**stage_arguments)\n            self.add_constraint(\n                stage_result[\"model_constraints\"],\n                lb=stage_result[\"lb_model_constraints\"],\n                ub=stage_result[\"ub_model_constraints\"],\n            )\n            self.add_constraint(\n                stage_result[\"next_states\"] - mx_dict[time + ts][sys.states.name]\n            )\n            self.objective_function += stage_result[\"cost_function\"] * ts\n\n    def _construct_stage_function(self, system: CasadiADMMNNSystem):\n        \"\"\"\n        Combine information from the model and the var_ref to create CasADi\n        functions which describe the system dynamics and constraints at each\n        stage of the optimization problem. Sets the stage function. It has\n        all mpc variables as inputs, sorted by denotation (declared in\n        self.declare_quantities) and outputs ode, cost function and 3 outputs\n        per constraint (constraint, lb_constraint, ub_constraint).\n\n        In the basic case, it has the form:\n        CasadiFunction: ['x', 'z', 'u', 'y', 'd', 'p'] ->\n            ['ode', 'cost_function', 'model_constraints',\n            'ub_model_constraints', 'lb_model_constraints']\n\n        Args:\n            system\n        \"\"\"",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[495:519]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[256:280]\n        constraints = {\"model_constraints\": system.model_constraints}\n\n        inputs = [\n            q.full_symbolic\n            for q in all_system_quantities.values()\n            if q.use_in_stage_function\n        ]\n        inputs.append(system.time)\n        input_denotations = [\n            q.name\n            for denotation, q in all_system_quantities.items()\n            if q.use_in_stage_function\n        ]\n        input_denotations.append(\"__time\")\n\n        # aggregate constraints\n        constraints_func = [c.function for c in constraints.values()]\n        constraints_lb = [c.lb for c in constraints.values()]\n        constraints_ub = [c.ub for c in constraints.values()]\n        constraint_denotations = list(constraints.keys())\n        constraint_lb_denotations = [LB_PREFIX + k for k in constraints]\n        constraint_ub_denotations = [UB_PREFIX + k for k in constraints]\n\n        # create a dictionary which holds all the inputs for the sim step of the model",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[276:307]\n==agentlib_mpc.optimization_backends.casadi_.mhe:[298:331]\n        constants = {var.name: mx for var, mx in const.items()}\n\n        # remember time at start of collocation loop\n        start_time = self.pred_time\n\n        # shorthands\n        ts = self.options.time_step\n\n        # State variables at collocation points\n        state_collocation = []\n        opt_vars_collocation = []\n        opt_pars_collocation = []\n\n        # add variables at collocation points\n        for j in range(collocation.order):  # d is collocation order\n            # set time\n            self.pred_time = start_time + collocation.root[j + 1] * ts\n\n            # differential state\n            state_kj = self.add_opt_var(states, post_den=f\"_{j}\")\n            state_collocation.append(state_kj)\n\n            opt_vars_collocation.append({})\n            for opt_var in opt_vars:\n                var_kj = self.add_opt_var(opt_var, post_den=f\"_{j}\")\n                opt_vars_collocation[-1].update({opt_var.name: var_kj})\n\n            opt_pars_collocation.append({})\n            for opt_par in opt_pars:\n                par_kj = self.add_opt_par(opt_par, post_den=f\"_{j}\")\n                opt_pars_collocation[-1].update({opt_par.name: par_kj})\n\n        # Loop over collocation points",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[406:428]\n==agentlib_mpc.optimization_backends.casadi_.mhe:[217:239]\n        constraints = {\"model_constraints\": system.model_constraints}\n\n        inputs = [\n            q.full_symbolic\n            for q in all_system_quantities.values()\n            if q.use_in_stage_function\n        ]\n        input_denotations = [\n            q.name\n            for denotation, q in all_system_quantities.items()\n            if q.use_in_stage_function\n        ]\n\n        # aggregate constraints\n        constraints_func = [c.function for c in constraints.values()]\n        constraints_lb = [c.lb for c in constraints.values()]\n        constraints_ub = [c.ub for c in constraints.values()]\n        constraint_denotations = list(constraints.keys())\n        constraint_lb_denotations = [LB_PREFIX + k for k in constraints]\n        constraint_ub_denotations = [UB_PREFIX + k for k in constraints]\n\n        # aggregate outputs",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.admm:[157:182]\n==agentlib_mpc.optimization_backends.casadi_.minlp:[102:127]\n            }\n            xk_end, constraints = self._collocation_inner_loop(\n                collocation=collocation_matrices,\n                state_at_beginning=xk,\n                states=sys.states,\n                opt_vars=opt_vars_inside_inner,\n                opt_pars=opt_pars_inside_inner,\n                const=constant_over_inner,\n            )\n\n            # increment loop counter and time\n            self.k += 1\n            self.pred_time = ts * self.k\n\n            # New NLP variable for differential state at end of interval\n            xk = self.add_opt_var(sys.states)\n\n            # Add continuity constraint\n            self.add_constraint(xk - xk_end, gap_closing=True)\n\n            # add collocation constraints later for fatrop\n            for constraint in constraints:\n                self.add_constraint(*constraint)\n\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.admm:[86:106]\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[181:202]\n        )\n\n        # add admm terms to objective function\n        admm_objective = 0\n        rho = self.penalty_factor.full_symbolic[0]\n        for i in range(len(var_ref.couplings)):\n            admm_in = self.global_couplings.full_symbolic[i]\n            admm_out = self.local_couplings.full_symbolic[i]\n            admm_lam = self.multipliers.full_symbolic[i]\n            admm_objective += admm_lam * admm_out + rho / 2 * (admm_in - admm_out) ** 2\n\n        for i in range(len(var_ref.exchange)):\n            admm_in = self.exchange_diff.full_symbolic[i]\n            admm_out = self.local_exchange.full_symbolic[i]\n            admm_lam = self.exchange_multipliers.full_symbolic[i]\n            admm_objective += admm_lam * admm_out + rho / 2 * (admm_in - admm_out) ** 2\n\n        self.cost_function += admm_objective\n\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.admm:[158:182]\n==agentlib_mpc.optimization_backends.casadi_.full:[78:102]\n            xk_end, constraints = self._collocation_inner_loop(\n                collocation=collocation_matrices,\n                state_at_beginning=xk,\n                states=sys.states,\n                opt_vars=opt_vars_inside_inner,\n                opt_pars=opt_pars_inside_inner,\n                const=constant_over_inner,\n            )\n\n            # increment loop counter and time\n            self.k += 1\n            self.pred_time = ts * self.k\n\n            # New NLP variables at end of interval\n            xk = self.add_opt_var(sys.states)\n\n            # Add continuity constraint\n            self.add_constraint(xk - xk_end, gap_closing=True)\n\n            # add collocation constraints later for fatrop\n            for constraint in constraints:\n                self.add_constraint(*constraint)\n\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.admm:[309:325]\n==agentlib_mpc.optimization_backends.casadi_.basic:[458:492]\n            sys.non_controlled_inputs.full_symbolic,\n            sys.model_parameters.full_symbolic,\n            sys.algebraics.full_symbolic,\n            sys.outputs.full_symbolic,\n        )\n        integrator_ode = {\"x\": x, \"p\": p, \"ode\": ode}\n\n        if integrator == Integrators.euler:\n            xk_end = x + ode * opts[\"tf\"]\n            opt_integrator = ca.Function(\n                \"system\", [x, p], [xk_end], [\"x0\", \"p\"], [\"xf\"]\n            )\n        else:  # rk, cvodes\n            opt_integrator = ca.integrator(\"system\", integrator, integrator_ode, opts)\n\n        return opt_integrator\n\n    def _construct_stage_function(self, system: BaseSystem):\n        \"\"\"\n        Combine information from the model and the var_ref to create CasADi\n        functions which describe the system dynamics and constraints at each\n        stage of the optimization problem. Sets the stage function. It has\n        all mpc variables as inputs, sorted by denotation (declared in\n        self.declare_quantities) and outputs ode, cost function and 3 outputs\n        per constraint (constraint, lb_constraint, ub_constraint).\n\n        In the basic case, it has the form:\n        CasadiFunction: ['x', 'z', 'u', 'y', 'd', 'p'] ->\n            ['ode', 'cost_function', 'model_constraints',\n            'ub_model_constraints', 'lb_model_constraints']\n\n        Args:\n            system\n        \"\"\"",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.full:[151:168]\n==agentlib_mpc.optimization_backends.casadi_.minlp:[168:184]\n            )\n            xk_end = fk[\"xf\"]\n            self.k += 1\n            self.pred_time = ts * self.k\n            xk = self.add_opt_var(sys.states)\n            vars_dict[sys.states.name][self.k] = xk\n            self.add_constraint(xk - xk_end, gap_closing=True)\n\n            # add model constraints last due to fatrop\n            self.add_constraint(\n                stage[\"model_constraints\"],\n                lb=stage[\"lb_model_constraints\"],\n                ub=stage[\"ub_model_constraints\"],\n            )\n            self.objective_function += stage[\"cost_function\"] * ts\n\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.utils.plotting.interactive:[340:359]\n==agentlib_mpc.utils.plotting.mpc_dashboard:[331:357]\n                )\n\n    return html.Div(\n        components,\n        style={\n            \"display\": \"grid\",\n            \"grid-template-columns\": \"repeat(auto-fit, minmax(600px, 1fr))\",\n            \"grid-gap\": \"20px\",\n            \"padding\": \"20px\",\n            \"min-width\": \"600px\",\n            \"min-height\": \"200px\",\n        },\n        id=\"plot-container\",\n    )\n\n\ndef detect_index_type(data: pd.DataFrame) -> Tuple[bool, bool]:\n    \"\"\"\n    Detect the type of index in the DataFrame.\n\n    Args:\n        data: DataFrame to check\n\n    Returns:\n        Tuple of (is_multi_index, is_datetime)\n    \"\"\"",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[83:95]\n==agentlib_mpc.optimization_backends.casadi_.full:[25:38]\n            variables=model.get_inputs(var_ref.controls),\n            ref_list=var_ref.controls,\n            use_in_stage_function=False,\n            assert_complete=True,\n        )\n        self.r_del_u = OptimizationParameter.declare(\n            denotation=\"r_del_u\",\n            variables=[CasadiParameter(name=r_del_u) for r_del_u in var_ref.r_del_u],\n            ref_list=var_ref.r_del_u,\n            use_in_stage_function=False,\n            assert_complete=True,\n        )\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[192:205]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[256:269]\n        constraints = {\"model_constraints\": system.model_constraints}\n\n        inputs = [\n            q.full_symbolic\n            for q in all_system_quantities.values()\n            if q.use_in_stage_function\n        ]\n        inputs.append(system.time)\n        input_denotations = [\n            q.name\n            for denotation, q in all_system_quantities.items()\n            if q.use_in_stage_function\n        ]",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.utils.plotting.interactive:[169:205]\n==agentlib_mpc.utils.plotting.mpc_dashboard:[227:262]\n    fig.update_layout(\n        showlegend=True,\n        legend=dict(\n            groupclick=\"toggleitem\",\n            itemclick=\"toggle\",\n            itemdoubleclick=\"toggleothers\",\n        ),\n        xaxis_title=x_axis_label,\n        yaxis_title=y_axis_label,\n        uirevision=\"same\",  # Add this line\n    )\n\n    return fig\n\n\ndef plot_admm_plotly(\n    series: pd.Series,\n    plot_actual_values: bool = True,\n    plot_predictions: bool = False,\n    step: bool = False,\n    convert_to: Literal[\"seconds\", \"minutes\", \"hours\", \"days\"] = \"seconds\",\n):\n    \"\"\"\n    Args:\n        series: A column of the MPC results Dataframe\n        fig: Plotly figure to plot on\n        plot_actual_values: whether the closed loop actual values at the start of each\n         optimization should be plotted (default True)\n        plot_predictions: whether all predicted trajectories should be plotted\n        step: whether to use a step plot or a line plot\n        convert_to: Will convert the index of the returned series to the specified unit\n         (seconds, minutes, hours, days)\n\n    Returns:\n        None\n    \"\"\"",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[202:224]\n==agentlib_mpc.optimization_backends.casadi_.core.system:[57:76]\n        return [\n            var\n            for var in self.__dict__.values()\n            if isinstance(var, OptimizationVariable)\n        ]\n\n    @property\n    def parameters(self) -> list[OptimizationParameter]:\n        return [\n            var\n            for var in self.__dict__.values()\n            if isinstance(var, OptimizationParameter)\n        ]\n\n    @property\n    def quantities(self) -> list[Union[OptimizationParameter, OptimizationVariable]]:\n        return self.variables + self.parameters\n\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[310:324]\n==agentlib_mpc.optimization_backends.casadi_.mhe:[331:345]\n        state_k_end = collocation.D[0] * state_at_beginning\n        for j in range(1, collocation.order + 1):\n            # Expression for the state derivative at the collocation point\n            xp = collocation.C[0, j] * state_at_beginning\n            for r in range(collocation.order):\n                xp = xp + collocation.C[r + 1, j] * state_collocation[r]\n\n            stage = self._stage_function(\n                **{states.name: state_collocation[j - 1]},\n                **opt_pars_collocation[j - 1],\n                **opt_vars_collocation[j - 1],\n                **constants,\n            )\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[397:411]\n==agentlib_mpc.optimization_backends.casadi_.minlp:[132:146]\n        vars_dict = {sys.states.name: {}}\n        n = self.options.prediction_horizon\n        ts = self.options.time_step\n        opts = {\"t0\": 0, \"tf\": ts}\n        # Initial State\n        x0 = self.add_opt_par(sys.initial_state)\n        xk = self.add_opt_var(sys.states, lb=x0, ub=x0, guess=x0)\n        vars_dict[sys.states.name][0] = xk\n        const_par = self.add_opt_par(sys.model_parameters)\n        # ODE is used here because the algebraics can be calculated with the stage function\n        opt_integrator = self._create_ode(sys, opts, integrator=self.options.integrator)\n        # initiate states\n        while self.k < n:\n            uk = self.add_opt_var(sys.controls)",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.utils.plotting.interactive:[323:334]\n==agentlib_mpc.utils.plotting.mpc_dashboard:[292:303]\n                                ),\n                                style={\n                                    \"min-width\": \"600px\",\n                                    \"min-height\": \"400px\",\n                                    \"max-width\": \"900px\",\n                                    \"max-height\": \"450px\",\n                                },\n                            ),\n                        ],\n                        className=\"draggable\",\n                    )",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.utils.plotting.interactive:[95:107]\n==agentlib_mpc.utils.plotting.mpc_dashboard:[158:172]\n            actual_values[time_converted] = prediction.loc[0]\n        except KeyError:\n            pass\n        prediction.index = (prediction.index + time_seconds) / TIME_CONVERSION[\n            convert_to\n        ]\n\n        progress = i / number_of_predictions\n        prediction_color = interpolate_colors(\n            progress=progress,\n            colors=[EBCColors.red, EBCColors.dark_grey],\n        )",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[15:27]\n==agentlib_mpc.optimization_backends.casadi_.mhe:[18:30]\nfrom agentlib_mpc.optimization_backends.casadi_.core.casadi_backend import CasADiBackend\nfrom agentlib_mpc.optimization_backends.casadi_.core.VariableGroup import (\n    OptimizationQuantity,\n    OptimizationVariable,\n    OptimizationParameter,\n)\nfrom agentlib_mpc.optimization_backends.casadi_.core.discretization import (\n    Discretization,\n)\nfrom agentlib_mpc.optimization_backends.casadi_.core.system import System\n\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[411:424]\n==agentlib_mpc.optimization_backends.casadi_.full:[129:143]\n            dk = self.add_opt_par(sys.non_controlled_inputs)\n            zk = self.add_opt_var(sys.algebraics)\n            yk = self.add_opt_var(sys.outputs)\n            # get stage\n            stage_arguments = {\n                # variables\n                sys.states.name: xk,\n                sys.algebraics.name: zk,\n                sys.outputs.name: yk,\n                # parameters\n                sys.controls.name: uk,\n                sys.non_controlled_inputs.name: dk,\n                sys.model_parameters.name: const_par,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.backend:[70:82]\n==agentlib_mpc.optimization_backends.casadi_.minlp_cia:[47:59]\n                except FileNotFoundError:\n                    pass\n            else:\n                if os.path.isfile(info.data[\"results_file\"]):\n                    raise FileExistsError(\n                        f\"Results file {res_file} already exists and will not be \"\n                        f\"overwritten automatically. Set 'overwrite_result_file' to \"\n                        f\"True to enable automatic overwrite it.\"\n                    )\n        return overwrite_result_file\n\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.mhe:[458:470]\n==agentlib_mpc.utils.sampling:[79:91]\n        target_grid_length = len(grid)\n        if isinstance(trajectory, (float, int)):\n            # return constant trajectory for scalars\n            return [trajectory] * target_grid_length\n        if isinstance(trajectory, list):\n            # return lists of matching length without timestamps\n            if len(trajectory) == target_grid_length:\n                return trajectory\n            raise ValueError(\n                f\"Passed list with length {len(trajectory)} \"\n                f\"does not match target ({target_grid_length}).\"\n            )",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[420:433]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[272:284]\n        constraints_func = [c.function for c in constraints.values()]\n        constraints_lb = [c.lb for c in constraints.values()]\n        constraints_ub = [c.ub for c in constraints.values()]\n        constraint_denotations = list(constraints.keys())\n        constraint_lb_denotations = [LB_PREFIX + k for k in constraints]\n        constraint_ub_denotations = [UB_PREFIX + k for k in constraints]\n\n        # create a dictionary which holds all the inputs for the sim step of the model\n        all_input_variables = {}\n        lagged_inputs: dict[int, dict[str, ca.MX]] = {}\n        # dict[lag, dict[denotation, list[var_name]]]\n        lagged_input_names: dict[int, dict[str, list[str]]] = {}\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[189:199]\n==agentlib_mpc.optimization_backends.casadi_.mhe:[214:224]\n        all_system_quantities: dict[str, OptimizationQuantity] = {\n            var.name: var for var in system.quantities\n        }\n        constraints = {\"model_constraints\": system.model_constraints}\n\n        inputs = [\n            q.full_symbolic\n            for q in all_system_quantities.values()\n            if q.use_in_stage_function\n        ]",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.admm:[157:168]\n==agentlib_mpc.optimization_backends.casadi_.basic:[148:159]\n            }\n            xk_end, constraints = self._collocation_inner_loop(\n                collocation=collocation_matrices,\n                state_at_beginning=xk,\n                states=sys.states,\n                opt_vars=opt_vars_inside_inner,\n                opt_pars=opt_pars_inside_inner,\n                const=constant_over_inner,\n            )\n\n            # increment loop counter and time",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[434:444]\n==agentlib_mpc.optimization_backends.casadi_.full:[148:157]\n            fk = opt_integrator(\n                x0=xk,\n                p=ca.vertcat(uk, dk, const_par, zk, yk),\n            )\n            xk_end = fk[\"xf\"]\n            self.k += 1\n            self.pred_time = ts * self.k\n            xk = self.add_opt_var(sys.states)\n            vars_dict[sys.states.name][self.k] = xk",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.modules.dmpc.admm.admm_coordinator:[60:68]\n==agentlib_mpc.modules.mpc.mpc:[46:54]\n    )\n    sampling_time: Optional[float] = Field(\n        default=None,  # seconds\n        description=\"Sampling interval for control steps. If None, will be the same as\"\n        \" time step. Does not affect the discretization of the MPC, \"\n        \"only the interval with which there will be optimization steps.\",\n        validate_default=True,\n    )",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.modules.estimation.mhe:[331:341]\n==agentlib_mpc.modules.mpc.mpc:[402:412]\n        results = load_mpc(results_file)\n        stats = load_mpc_stats(results_file)\n        return results, stats\n\n    def cleanup_results(self):\n        results_file = self.optimization_backend.config.results_file\n        if not results_file:\n            return\n        os.remove(results_file)\n        os.remove(mpc_datamodels.stats_path(results_file))",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.modules.deactivate_mpc.deactivate_mpc:[10:18]\n==agentlib_mpc.modules.mpc.skippable_mixin:[20:28]\n    active: AgentVariable = Field(\n        default=AgentVariable(\n            name=mpc_datamodels.MPC_FLAG_ACTIVE,\n            description=\"MPC is active\",\n            type=\"bool\",\n            value=True,\n            shared=False,\n        ),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.modules.minlp_mpc:[81:96]\n==agentlib_mpc.modules.mpc.mpc:[228:245]\n        )\n\n        # return dict should have model variables as keys, not mpc variables\n        unassigned_by_model_var = {\n            \"states\": unassigned_by_mpc_var[\"states\"],\n            \"inputs\": intersection_input,\n            \"outputs\": unassigned_by_mpc_var[\"outputs\"],\n            \"parameters\": unassigned_by_mpc_var[\"parameters\"],\n        }\n\n        return unassigned_by_model_var\n\n    def set_actuation(self, solution):\n        \"\"\"Takes the solution from optimization backend and sends the first\n        step to AgentVariables.\"\"\"",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.modules.minlp_mpc:[65:77]\n==agentlib_mpc.modules.mpc.mpc:[214:226]\n            (\"inputs\", self.model.get_input_names(), \"Inputs\"),\n            (\"outputs\", self.model.get_output_names(), \"Outputs\"),\n            (\"parameters\", self.model.get_parameter_names(), \"Parameters\"),\n        ]\n\n        # perform validations and make a dictionary of unassigned variables\n        unassigned_by_mpc_var = {\n            key: self.assert_subset(self.var_ref.__dict__[key], names, message)\n            for key, names, message in args\n        }\n\n        # fix unassigned values for inputs",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.admm:[114:128]\n==agentlib_mpc.optimization_backends.casadi_.full:[49:66]\n        collocation_matrices = self._collocation_polynomial()\n\n        # shorthands\n        n = self.options.prediction_horizon\n        ts = self.options.time_step\n\n        # Initial State\n        x0 = self.add_opt_par(sys.initial_state)\n        xk = self.add_opt_var(sys.states, lb=x0, ub=x0, guess=x0)\n        uk = self.add_opt_par(sys.last_control)\n\n        # Parameters that are constant over the horizon\n        const_par = self.add_opt_par(sys.model_parameters)\n        du_weights = self.add_opt_par(sys.r_del_u)",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[439:458]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[357:376]\n                lag = system.lags_dict.get(v_name, 1)\n\n                # if lag exists, we have to create and organize new variables\n                for j in range(1, lag):\n                    # create an MX variable for this lag\n                    l_name = name_with_lag(v_name, j)\n                    new_lag_var = ca.MX.sym(l_name)\n                    all_input_variables[l_name] = new_lag_var\n\n                    # add the mx variable to its lag time and denotation\n                    lagged_inputs_j = lagged_inputs.setdefault(j, {})\n                    lv_mx = lagged_inputs_j.setdefault(q_name, ca.DM([]))\n                    lagged_inputs[j][q_name] = ca.vertcat(lv_mx, new_lag_var)\n\n                    # keep track of the variable names that were added\n                    lagged_input_names_j = lagged_input_names.setdefault(j, {})\n                    lv_names = lagged_input_names_j.setdefault(q_name, [])\n                    lv_names.append(v_name)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[298:308]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[163:175]\n        for time in prediction_grid:\n            self.pred_time = time\n            mx_dict[time][sys.controls.name] = self.add_opt_var(sys.controls)\n            mx_dict[time][sys.non_controlled_inputs.name] = self.add_opt_par(\n                sys.non_controlled_inputs\n            )\n            mx_dict[time][sys.algebraics.name] = self.add_opt_var(sys.algebraics)\n            mx_dict[time][sys.outputs.name] = self.add_opt_var(sys.outputs)\n\n        # create the state grid\n        # x0 will always be the state at time 0 since the loop it is defined in starts\n        # in the past and finishes at 0",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[101:118]\n==agentlib_mpc.optimization_backends.casadi_.mhe:[125:135]\n@dataclasses.dataclass\nclass CollocationMatrices:\n    order: int\n    root: np.ndarray\n    B: np.ndarray\n    C: np.ndarray\n    D: np.ndarray\n\n\nclass DirectCollocation(Discretization):",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[411:422]\n==agentlib_mpc.optimization_backends.casadi_.minlp:[147:158]\n            dk = self.add_opt_par(sys.non_controlled_inputs)\n            zk = self.add_opt_var(sys.algebraics)\n            yk = self.add_opt_var(sys.outputs)\n            # get stage\n            stage_arguments = {\n                # variables\n                sys.states.name: xk,\n                sys.algebraics.name: zk,\n                sys.outputs.name: yk,\n                # parameters\n                sys.controls.name: uk,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[149:159]\n==agentlib_mpc.optimization_backends.casadi_.full:[78:88]\n            xk_end, constraints = self._collocation_inner_loop(\n                collocation=collocation_matrices,\n                state_at_beginning=xk,\n                states=sys.states,\n                opt_vars=opt_vars_inside_inner,\n                opt_pars=opt_pars_inside_inner,\n                const=constant_over_inner,\n            )\n\n            # increment loop counter and time",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.modules.minlp_mpc:[57:64]\n==agentlib_mpc.modules.mpc.mpc:[207:214]\n        args = [\n            (\n                \"states\",\n                self.model.get_state_names(),\n                \"Differential variables / States\",\n            ),\n            (\"controls\", self.model.get_input_names(), \"Controls\"),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[405:413]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[255:263]\n        all_system_quantities = system.all_system_quantities()\n        constraints = {\"model_constraints\": system.model_constraints}\n\n        inputs = [\n            q.full_symbolic\n            for q in all_system_quantities.values()\n            if q.use_in_stage_function\n        ]",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[528:537]\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[479:488]\n            \"cost_function\",\n            *constraint_denotations,\n            *constraint_lb_denotations,\n            *constraint_ub_denotations,\n        ]\n\n        # function describing system dynamics and cost function\n        self._stage_function = ca.Function(\n            \"f\",",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[138:148]\n==agentlib_mpc.optimization_backends.casadi_.minlp:[91:101]\n            dk = self.add_opt_par(sys.non_controlled_inputs)\n\n            # perform inner collocation loop\n            opt_vars_inside_inner = [sys.algebraics, sys.outputs]\n            opt_pars_inside_inner = []\n\n            constant_over_inner = {\n                sys.controls: uk,\n                sys.non_controlled_inputs: dk,\n                sys.model_parameters: const_par,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[397:405]\n==agentlib_mpc.optimization_backends.casadi_.full:[107:115]\n        vars_dict = {sys.states.name: {}}\n        n = self.options.prediction_horizon\n        ts = self.options.time_step\n        opts = {\"t0\": 0, \"tf\": ts}\n        # Initial State\n        x0 = self.add_opt_par(sys.initial_state)\n        xk = self.add_opt_var(sys.states, lb=x0, ub=x0, guess=x0)\n        vars_dict[sys.states.name][0] = xk",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[225:234]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[329:338]\n            \"cost_function\",\n            *constraint_denotations,\n            *constraint_lb_denotations,\n            *constraint_ub_denotations,\n        ]\n\n        # function describing system dynamics and cost function\n        self._stage_function = ca.Function(\n            \"f\",",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.mhe:[532:542]\n==agentlib_mpc.utils.sampling:[152:166]\n            )\n\n        # extrapolate sequence with last available value if necessary\n        interpolated_trajectory = (\n            [values[0]] * number_of_missing_old_entries\n            + sequence_new\n            + [values[-1]] * number_of_missing_new_entries\n        )\n\n        return interpolated_trajectory",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.modules.dmpc.coordinator:[6:13]\n==agentlib_mpc.modules.dmpc.employee:[4:11]\nfrom pydantic import Field\n\nfrom agentlib.core import (\n    BaseModule,\n    BaseModuleConfig,\n    AgentVariable,\n    Agent,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.modules.estimation.mhe:[221:231]\n==agentlib_mpc.modules.mpc.mpc_full:[120:128]\n            self.agent.data_broker.register_callback(\n                alias=var.alias,\n                source=var.source,\n                callback=self._callback_hist_vars,\n                name=var.name,\n            )\n\n    def _after_config_update(self):",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.modules.estimation.mhe:[147:153]\n==agentlib_mpc.modules.mpc.mpc:[161:167]\n        self.init_status = mpc_datamodels.InitStatus.during_update\n        opti_back = create_optimization_backend(\n            self.config.optimization_backend, self.agent.id\n        )\n        opti_back.register_logger(self.logger)\n        disc_opts = opti_back.config.discretization_options",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.full:[81:89]\n==agentlib_mpc.optimization_backends.casadi_.mhe:[181:189]\n                states=sys.states,\n                opt_vars=opt_vars_inside_inner,\n                opt_pars=opt_pars_inside_inner,\n                const=constant_over_inner,\n            )\n\n            # increment loop counter and time\n            self.k += 1",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.full:[41:58]\n==agentlib_mpc.optimization_backends.casadi_.minlp:[62:81]\nclass DirectCollocation(basic.DirectCollocation):\n    def _discretize(self, sys: FullSystem):\n        \"\"\"\n        Defines a direct collocation discretization.\n        # pylint: disable=invalid-name\n        \"\"\"\n\n        # setup the polynomial base\n        collocation_matrices = self._collocation_polynomial()\n\n        # shorthands\n        n = self.options.prediction_horizon\n        ts = self.options.time_step\n\n        # Initial State\n        x0 = self.add_opt_par(sys.initial_state)\n        xk = self.add_opt_var(sys.states, lb=x0, ub=x0, guess=x0)",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[256:263]\n==agentlib_mpc.optimization_backends.casadi_.mhe:[217:224]\n        constraints = {\"model_constraints\": system.model_constraints}\n\n        inputs = [\n            q.full_symbolic\n            for q in all_system_quantities.values()\n            if q.use_in_stage_function\n        ]",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[521:527]\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[472:478]\n            system.cost_function,\n            *constraints_func,\n            *constraints_lb,\n            *constraints_ub,\n        ]\n        output_denotations = [",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[511:519]\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[420:428]\n        constraints_func = [c.function for c in constraints.values()]\n        constraints_lb = [c.lb for c in constraints.values()]\n        constraints_ub = [c.ub for c in constraints.values()]\n        constraint_denotations = list(constraints.keys())\n        constraint_lb_denotations = [LB_PREFIX + k for k in constraints]\n        constraint_ub_denotations = [UB_PREFIX + k for k in constraints]\n\n        # create a dictionary which holds all the inputs for the sim step of the model",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[192:199]\n==agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml:[406:413]\n        constraints = {\"model_constraints\": system.model_constraints}\n\n        inputs = [\n            q.full_symbolic\n            for q in all_system_quantities.values()\n            if q.use_in_stage_function\n        ]",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[5:11]\n==agentlib_mpc.optimization_backends.casadi_.mhe:[9:15]\nfrom agentlib_mpc.data_structures.casadi_utils import (\n    Constraint,\n    LB_PREFIX,\n    UB_PREFIX,\n    DiscretizationMethod,\n    SolverFactory,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[437:444]\n==agentlib_mpc.optimization_backends.casadi_.minlp:[168:175]\n            )\n            xk_end = fk[\"xf\"]\n            # calculate model constraint\n            self.k += 1\n            self.pred_time = ts * self.k\n            xk = self.add_opt_var(sys.states)\n            vars_dict[sys.states.name][self.k] = xk",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[118:133]\n==agentlib_mpc.optimization_backends.casadi_.minlp:[70:85]\n        collocation_matrices = self._collocation_polynomial()\n\n        # shorthands\n        n = self.options.prediction_horizon\n        ts = self.options.time_step\n\n        # Initial State\n        x0 = self.add_opt_par(sys.initial_state)\n        xk = self.add_opt_var(sys.states, lb=x0, ub=x0, guess=x0)\n\n        # Parameters that are constant over the horizon\n        const_par = self.add_opt_par(sys.model_parameters)\n\n        # Formulate the NLP\n        # loop over prediction horizon",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.admm:[300:308]\n==agentlib_mpc.optimization_backends.casadi_.basic:[449:458]\n        if sys.states.full_symbolic.shape[0] == 0:\n            return lambda *args, **kwargs: {\"xf\": ca.MX.sym(\"xk_end\", 0)}\n\n        ode = sys.ode\n        # create inputs\n        x = sys.states.full_symbolic\n        # the order of elements here is important when calling the integrator!\n        p = ca.vertcat(\n            sys.controls.full_symbolic,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[218:224]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[322:328]\n            system.cost_function,\n            *constraints_func,\n            *constraints_lb,\n            *constraints_ub,\n        ]\n        output_denotations = [",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[208:216]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[272:280]\n        constraints_func = [c.function for c in constraints.values()]\n        constraints_lb = [c.lb for c in constraints.values()]\n        constraints_ub = [c.ub for c in constraints.values()]\n        constraint_denotations = list(constraints.keys())\n        constraint_lb_denotations = [LB_PREFIX + k for k in constraints]\n        constraint_ub_denotations = [UB_PREFIX + k for k in constraints]\n\n        # aggregate outputs",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[92:98]\n==agentlib_mpc.optimization_backends.casadi_.casadi_ml:[95:101]\n        self.cost_function = model.cost_func\n        self.model_constraints = Constraint(\n            function=ca.vertcat(*[c.function for c in model.get_constraints()]),\n            lb=ca.vertcat(*[c.lb for c in model.get_constraints()]),\n            ub=ca.vertcat(*[c.ub for c in model.get_constraints()]),\n        )",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.utils.plotting.admm_dashboard:[19:37]\n==agentlib_mpc.utils.plotting.interactive:[18:27]\nexcept ImportError as e:\n    raise OptionalDependencyError(\n        dependency_name=\"interactive\",\n        dependency_install=\"plotly, dash\",\n        used_object=\"interactive\",\n    ) from e\n\n\ndef make_figure_plotly() -> go.Figure:",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.utils.plotting.interactive:[466:472]\n==agentlib_mpc.utils.plotting.mpc_dashboard:[321:327]\n        style={\n            \"min-width\": \"600px\",\n            \"min-height\": \"400px\",\n            \"max-width\": \"900px\",\n            \"max-height\": \"450px\",\n        },",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.utils.plotting.interactive:[381:387]\n==agentlib_mpc.utils.plotting.mpc_dashboard:[293:299]\n                                style={\n                                    \"min-width\": \"600px\",\n                                    \"min-height\": \"400px\",\n                                    \"max-width\": \"900px\",\n                                    \"max-height\": \"450px\",\n                                },",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.mhe:[473:481]\n==agentlib_mpc.utils.sampling:[101:109]\n        else:\n            raise TypeError(\n                f\"Passed trajectory of type '{type(trajectory)}' \" f\"cannot be sampled.\"\n            )\n        target_grid = np.array(grid) + current\n\n        # expand scalar values\n        if len(source_grid) == 1:",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.modules.dmpc.admm.admm:[832:841]\n==agentlib_mpc.modules.mpc.mpc_full:[146:155]\n        for hist_var in self._lags_dict_seconds:\n            past_values = self.history[hist_var]\n            if not past_values:\n                # if the history of a variable is empty, fallback to the scalar value\n                continue\n\n            # create copy to not mess up scalar value of original variable in case\n            # fallback is needed\n            updated_var = variables[hist_var].copy(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.modules.estimation.mhe:[139:147]\n==agentlib_mpc.modules.mpc.mpc:[272:277]\n        except (RuntimeError, ValueError) as err:\n            raise ConfigurationError(\n                f\"The optimization backend of Agent {self.source} could not \"\n                f\"finish its setup!\"\n            ) from err\n\n    def _setup_optimization_backend(self) -> OptimizationBackendT:\n        \"\"\"Performs the setup of the optimization_backend, keeps track of status\"\"\"",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.modules.minlp_mpc:[103:109]\n==agentlib_mpc.modules.mpc.mpc:[407:412]\n        results_file = self.optimization_backend.config.results_file\n        if not results_file:\n            return\n        os.remove(results_file)\n        os.remove(mpc_datamodels.stats_path(results_file))",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.admm:[114:123]\n==agentlib_mpc.optimization_backends.casadi_.minlp:[70:81]\n        collocation_matrices = self._collocation_polynomial()\n\n        # shorthands\n        n = self.options.prediction_horizon\n        ts = self.options.time_step\n\n        # Initial State\n        x0 = self.add_opt_par(sys.initial_state)\n        xk = self.add_opt_var(sys.states, lb=x0, ub=x0, guess=x0)",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.casadi_.basic:[118:129]\n==agentlib_mpc.optimization_backends.casadi_.full:[49:58]\n        collocation_matrices = self._collocation_polynomial()\n\n        # shorthands\n        n = self.options.prediction_horizon\n        ts = self.options.time_step\n\n        # Initial State\n        x0 = self.add_opt_par(sys.initial_state)\n        xk = self.add_opt_var(sys.states, lb=x0, ub=x0, guess=x0)",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.optimization_backends.backend:[65:70]\n==agentlib_mpc.optimization_backends.casadi_.minlp_cia:[40:45]\n        if res_file and info.data[\"save_results\"]:\n            if overwrite_result_file:\n                try:\n                    os.remove(res_file)\n                    os.remove(mpc_datamodels.stats_path(res_file))",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.utils.plotting.admm_dashboard:[13:18]\n==agentlib_mpc.utils.plotting.interactive:[13:18]\ntry:\n    import dash\n    from dash import html, dcc\n    from dash.dependencies import Input, Output, State\n    import plotly.graph_objects as go",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_mpc.modules.InputPrediction.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_mpc/modules/InputPrediction/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_mpc.utils.plotting.interactive:[125:130]\n==agentlib_mpc.utils.plotting.mpc_dashboard:[176:181]\n                    x=prediction.index,\n                    y=prediction,\n                    mode=\"lines\",\n                    line=dict(\n                        color=f\"rgb{prediction_color}\",",
            "message-id": "R0801"
        }
    ],
    "stats": {
        "bad_names": {
            "argument": 0,
            "attr": 5,
            "klass": 0,
            "class_attribute": 0,
            "class_const": 13,
            "const": 3,
            "inlinevar": 0,
            "function": 1,
            "method": 0,
            "module": 2,
            "variable": 72,
            "typevar": 0,
            "typealias": 0
        },
        "by_module": {
            "agentlib_mpc": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 3,
                "warning": 0
            },
            "agentlib_mpc.models.casadi_predictor": {
                "convention": 1,
                "error": 3,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.models.serialized_ml_model": {
                "convention": 11,
                "error": 6,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.models.casadi_ml_model": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.models.casadi_model": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.models.__init__": {
                "convention": 26,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 2,
                "warning": 0
            },
            "agentlib_mpc.utils.sampling": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.analysis": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.interactive": {
                "convention": 1,
                "error": 1,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.admm_consensus_shades": {
                "convention": 1,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 26,
                "warning": 7
            },
            "agentlib_mpc.utils.plotting.basic": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.mpc": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.mpc_dashboard": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.discretization_structure": {
                "convention": 2,
                "error": 2,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.ml_model_test": {
                "convention": 2,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.admm_dashboard": {
                "convention": 3,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.admm_residuals": {
                "convention": 2,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.admm_animation": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.__init__": {
                "convention": 13,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.data_structures.mpc_datamodels": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.data_structures.ml_model_datatypes": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.data_structures.admm_datatypes": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.data_structures.casadi_utils": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.data_structures.interpolation": {
                "convention": 9,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 9,
                "warning": 0
            },
            "agentlib_mpc.data_structures.coordinator_datatypes": {
                "convention": 11,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 51,
                "warning": 1
            },
            "agentlib_mpc.data_structures.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.backend": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.__init__": {
                "convention": 1,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 15,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.basic": {
                "convention": 36,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 5,
                "statement": 194,
                "warning": 1
            },
            "agentlib_mpc.optimization_backends.casadi_.casadi_ml": {
                "convention": 1,
                "error": 1,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.full": {
                "convention": 20,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 74,
                "warning": 1
            },
            "agentlib_mpc.optimization_backends.casadi_.admm": {
                "convention": 14,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 161,
                "warning": 2
            },
            "agentlib_mpc.optimization_backends.casadi_.minlp": {
                "convention": 21,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 83,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.minlp_cia": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 1
            },
            "agentlib_mpc.optimization_backends.casadi_.mhe": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.core.VariableGroup": {
                "convention": 5,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 84,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.core.casadi_backend": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.core.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.core.system": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.core.discretization": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.data_source": {
                "convention": 4,
                "error": 3,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.minlp_mpc": {
                "convention": 7,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 43,
                "warning": 1
            },
            "agentlib_mpc.modules.ml_model_simulator": {
                "convention": 5,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 41,
                "warning": 0
            },
            "agentlib_mpc.modules.__init__": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 9,
                "warning": 0
            },
            "agentlib_mpc.modules.deactivate_mpc.fallback_pid": {
                "convention": 3,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.deactivate_mpc.deactivate_mpc": {
                "convention": 3,
                "error": 3,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.deactivate_mpc.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.mpc.mpc": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.mpc.mpc_full": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.mpc.skippable_mixin": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.mpc.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.estimation.mhe": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.estimation.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.dmpc.coordinator": {
                "convention": 2,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.dmpc.employee": {
                "convention": 10,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 75,
                "warning": 6
            },
            "agentlib_mpc.modules.dmpc.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 4,
                "warning": 0
            },
            "agentlib_mpc.modules.dmpc.admm.admm_coordinated": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.dmpc.admm.admm": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.dmpc.admm.admm_coordinator": {
                "convention": 2,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.dmpc.admm.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.ml_model_training.data_reduction": {
                "convention": 8,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 45,
                "warning": 3
            },
            "agentlib_mpc.modules.ml_model_training.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.ml_model_training.setpoint_generator": {
                "convention": 2,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 46,
                "warning": 0
            },
            "agentlib_mpc.modules.ml_model_training.ml_model_trainer": {
                "convention": 3,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.InputPrediction.try_predictor": {
                "convention": 6,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 25,
                "warning": 0
            },
            "agentlib_mpc.modules.InputPrediction.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 82,
                "statement": 0,
                "warning": 0
            }
        },
        "by_msg": {
            "astroid-error": 40,
            "missing-module-docstring": 39,
            "import-error": 52,
            "line-too-long": 27,
            "wrong-import-order": 29,
            "ungrouped-imports": 18,
            "too-many-locals": 11,
            "undefined-variable": 1,
            "unused-argument": 1,
            "unused-variable": 6,
            "invalid-name": 96,
            "missing-class-docstring": 26,
            "missing-function-docstring": 14,
            "unused-import": 3,
            "trailing-newlines": 1,
            "too-many-instance-attributes": 2,
            "attribute-defined-outside-init": 3,
            "too-many-arguments": 3,
            "unspecified-encoding": 2,
            "anomalous-backslash-in-string": 1,
            "no-name-in-module": 2,
            "logging-fstring-interpolation": 1,
            "superfluous-parens": 5,
            "unnecessary-pass": 1,
            "unnecessary-ellipsis": 2,
            "redefined-outer-name": 3,
            "super-with-arguments": 1,
            "use-list-literal": 1,
            "duplicate-code": 82
        },
        "code_type_count": {
            "code": 0,
            "comment": 0,
            "docstring": 0,
            "empty": 0,
            "total": 0
        },
        "dependencies": {
            "agentlib_mpc.modules": [
                "agentlib_mpc"
            ],
            "agentlib_mpc.models": [
                "agentlib_mpc"
            ],
            "agentlib_mpc.data_structures.admm_datatypes": [
                "agentlib_mpc.optimization_backends.casadi_.admm",
                "agentlib_mpc.utils.plotting.admm_consensus_shades"
            ],
            "agentlib_mpc.utils.analysis": [
                "agentlib_mpc.utils.plotting.discretization_structure",
                "agentlib_mpc.utils.plotting.admm_consensus_shades"
            ],
            "agentlib_mpc.utils.plotting.basic": [
                "agentlib_mpc.utils.plotting.discretization_structure",
                "agentlib_mpc.utils.plotting.admm_consensus_shades"
            ],
            "agentlib_mpc.utils.plotting.mpc": [
                "agentlib_mpc.utils.plotting.admm_consensus_shades"
            ],
            "agentlib_mpc.data_structures.casadi_utils": [
                "agentlib_mpc.optimization_backends.casadi_.minlp",
                "agentlib_mpc.optimization_backends.casadi_.full",
                "agentlib_mpc.optimization_backends.casadi_.basic",
                "agentlib_mpc.optimization_backends.casadi_.admm"
            ],
            "agentlib_mpc.data_structures.mpc_datamodels": [
                "agentlib_mpc.optimization_backends.casadi_.admm",
                "agentlib_mpc.optimization_backends.casadi_.minlp",
                "agentlib_mpc.optimization_backends.casadi_.full",
                "agentlib_mpc.optimization_backends.casadi_.basic",
                "agentlib_mpc.modules.minlp_mpc"
            ],
            "agentlib_mpc.models.casadi_model": [
                "agentlib_mpc.optimization_backends.casadi_.core.VariableGroup",
                "agentlib_mpc.optimization_backends.casadi_.admm",
                "agentlib_mpc.optimization_backends.casadi_.minlp",
                "agentlib_mpc.optimization_backends.casadi_.full",
                "agentlib_mpc.optimization_backends.casadi_.basic"
            ],
            "agentlib_mpc.optimization_backends.casadi_.core.casadi_backend": [
                "agentlib_mpc.optimization_backends.casadi_.minlp",
                "agentlib_mpc.optimization_backends.casadi_.full",
                "agentlib_mpc.optimization_backends.casadi_.basic"
            ],
            "agentlib_mpc.optimization_backends.casadi_.core.VariableGroup": [
                "agentlib_mpc.optimization_backends.casadi_.minlp",
                "agentlib_mpc.optimization_backends.casadi_.full",
                "agentlib_mpc.optimization_backends.casadi_.basic",
                "agentlib_mpc.optimization_backends.casadi_.admm"
            ],
            "agentlib_mpc.optimization_backends.casadi_.core.discretization": [
                "agentlib_mpc.optimization_backends.casadi_.admm",
                "agentlib_mpc.optimization_backends.casadi_.basic"
            ],
            "agentlib_mpc.optimization_backends.casadi_.core.system": [
                "agentlib_mpc.optimization_backends.casadi_.basic"
            ],
            "agentlib_mpc.optimization_backends.casadi_.basic": [
                "agentlib_mpc.optimization_backends.casadi_.minlp",
                "agentlib_mpc.optimization_backends.casadi_.full",
                "agentlib_mpc.optimization_backends.casadi_.admm"
            ],
            "agentlib_mpc.optimization_backends.backend": [
                "agentlib_mpc.optimization_backends.casadi_.admm"
            ],
            "agentlib_mpc.optimization_backends.casadi_.full": [
                "agentlib_mpc.optimization_backends.casadi_.admm"
            ],
            "agentlib_mpc.modules.mpc": [
                "agentlib_mpc.modules.minlp_mpc"
            ],
            "agentlib_mpc.optimization_backends.casadi_.minlp_cia": [
                "agentlib_mpc.modules.minlp_mpc"
            ],
            "agentlib_mpc.models.casadi_ml_model": [
                "agentlib_mpc.modules.ml_model_simulator"
            ],
            "agentlib_mpc.models.serialized_ml_model": [
                "agentlib_mpc.modules.ml_model_simulator"
            ],
            "agentlib_mpc.data_structures.coordinator_datatypes": [
                "agentlib_mpc.modules.dmpc.employee"
            ],
            "agentlib_mpc.modules.mpc.skippable_mixin": [
                "agentlib_mpc.modules.dmpc.employee"
            ],
            "agentlib_mpc.modules.mpc.mpc_full": [
                "agentlib_mpc.modules.dmpc"
            ]
        },
        "duplicated_lines": {
            "nb_duplicated_lines": 0,
            "percent_duplicated_lines": 0.0
        },
        "node_count": {
            "function": 7,
            "klass": 42,
            "method": 69,
            "module": 65
        },
        "undocumented": {
            "function": 1,
            "klass": 26,
            "method": 13,
            "module": 39
        },
        "convention": 255,
        "error": 55,
        "fatal": 40,
        "info": 0,
        "refactor": 100,
        "statement": 1122,
        "warning": 23,
        "global_note": 0,
        "nb_duplicated_lines": 952,
        "percent_duplicated_lines": 6.204379562043796
    },
    "previous": {
        "bad_names": {
            "argument": 0,
            "attr": 5,
            "klass": 0,
            "class_attribute": 0,
            "class_const": 13,
            "const": 3,
            "inlinevar": 0,
            "function": 1,
            "method": 0,
            "module": 2,
            "variable": 72,
            "typevar": 0,
            "typealias": 0
        },
        "by_module": {
            "agentlib_mpc": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 3,
                "warning": 0
            },
            "agentlib_mpc.models.casadi_predictor": {
                "convention": 1,
                "error": 3,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.models.serialized_ml_model": {
                "convention": 11,
                "error": 6,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.models.casadi_ml_model": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.models.casadi_model": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.models.__init__": {
                "convention": 26,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 2,
                "warning": 0
            },
            "agentlib_mpc.utils.sampling": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.analysis": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.interactive": {
                "convention": 1,
                "error": 1,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.admm_consensus_shades": {
                "convention": 1,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 26,
                "warning": 7
            },
            "agentlib_mpc.utils.plotting.basic": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.mpc": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.mpc_dashboard": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.discretization_structure": {
                "convention": 2,
                "error": 2,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.ml_model_test": {
                "convention": 2,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.admm_dashboard": {
                "convention": 3,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.admm_residuals": {
                "convention": 2,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.admm_animation": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.utils.plotting.__init__": {
                "convention": 13,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.data_structures.mpc_datamodels": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.data_structures.ml_model_datatypes": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.data_structures.admm_datatypes": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.data_structures.casadi_utils": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.data_structures.interpolation": {
                "convention": 9,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 9,
                "warning": 0
            },
            "agentlib_mpc.data_structures.coordinator_datatypes": {
                "convention": 11,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 51,
                "warning": 1
            },
            "agentlib_mpc.data_structures.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.backend": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.__init__": {
                "convention": 1,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 15,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.basic": {
                "convention": 36,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 5,
                "statement": 194,
                "warning": 1
            },
            "agentlib_mpc.optimization_backends.casadi_.casadi_ml": {
                "convention": 1,
                "error": 1,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.full": {
                "convention": 20,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 74,
                "warning": 1
            },
            "agentlib_mpc.optimization_backends.casadi_.admm": {
                "convention": 14,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 161,
                "warning": 2
            },
            "agentlib_mpc.optimization_backends.casadi_.minlp": {
                "convention": 21,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 83,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.minlp_cia": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 1
            },
            "agentlib_mpc.optimization_backends.casadi_.mhe": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.casadi_admm_ml": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.core.VariableGroup": {
                "convention": 5,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 84,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.core.casadi_backend": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.core.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.core.system": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.optimization_backends.casadi_.core.discretization": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.data_source": {
                "convention": 4,
                "error": 3,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.minlp_mpc": {
                "convention": 7,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 43,
                "warning": 1
            },
            "agentlib_mpc.modules.ml_model_simulator": {
                "convention": 5,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 41,
                "warning": 0
            },
            "agentlib_mpc.modules.__init__": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 9,
                "warning": 0
            },
            "agentlib_mpc.modules.deactivate_mpc.fallback_pid": {
                "convention": 3,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.deactivate_mpc.deactivate_mpc": {
                "convention": 3,
                "error": 3,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.deactivate_mpc.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.mpc.mpc": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.mpc.mpc_full": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.mpc.skippable_mixin": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.mpc.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.estimation.mhe": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.estimation.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.dmpc.coordinator": {
                "convention": 2,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.dmpc.employee": {
                "convention": 10,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 75,
                "warning": 6
            },
            "agentlib_mpc.modules.dmpc.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 4,
                "warning": 0
            },
            "agentlib_mpc.modules.dmpc.admm.admm_coordinated": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.dmpc.admm.admm": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.dmpc.admm.admm_coordinator": {
                "convention": 2,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.dmpc.admm.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.ml_model_training.data_reduction": {
                "convention": 8,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 45,
                "warning": 3
            },
            "agentlib_mpc.modules.ml_model_training.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.ml_model_training.setpoint_generator": {
                "convention": 2,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 46,
                "warning": 0
            },
            "agentlib_mpc.modules.ml_model_training.ml_model_trainer": {
                "convention": 3,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_mpc.modules.InputPrediction.try_predictor": {
                "convention": 6,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 25,
                "warning": 0
            },
            "agentlib_mpc.modules.InputPrediction.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 82,
                "statement": 0,
                "warning": 0
            }
        },
        "by_msg": {
            "astroid-error": 40,
            "missing-module-docstring": 39,
            "import-error": 52,
            "line-too-long": 27,
            "wrong-import-order": 29,
            "ungrouped-imports": 18,
            "too-many-locals": 11,
            "undefined-variable": 1,
            "unused-argument": 1,
            "unused-variable": 6,
            "invalid-name": 96,
            "missing-class-docstring": 26,
            "missing-function-docstring": 14,
            "unused-import": 3,
            "trailing-newlines": 1,
            "too-many-instance-attributes": 2,
            "attribute-defined-outside-init": 3,
            "too-many-arguments": 3,
            "unspecified-encoding": 2,
            "anomalous-backslash-in-string": 1,
            "no-name-in-module": 2,
            "logging-fstring-interpolation": 1,
            "superfluous-parens": 5,
            "unnecessary-pass": 1,
            "unnecessary-ellipsis": 2,
            "redefined-outer-name": 3,
            "super-with-arguments": 1,
            "use-list-literal": 1,
            "duplicate-code": 82
        },
        "code_type_count": {
            "code": 0,
            "comment": 0,
            "docstring": 0,
            "empty": 0,
            "total": 0
        },
        "dependencies": {
            "agentlib_mpc.modules": [
                "agentlib_mpc"
            ],
            "agentlib_mpc.models": [
                "agentlib_mpc"
            ],
            "agentlib_mpc.data_structures.admm_datatypes": [
                "agentlib_mpc.optimization_backends.casadi_.admm",
                "agentlib_mpc.utils.plotting.admm_consensus_shades"
            ],
            "agentlib_mpc.utils.analysis": [
                "agentlib_mpc.utils.plotting.discretization_structure",
                "agentlib_mpc.utils.plotting.admm_consensus_shades"
            ],
            "agentlib_mpc.utils.plotting.basic": [
                "agentlib_mpc.utils.plotting.discretization_structure",
                "agentlib_mpc.utils.plotting.admm_consensus_shades"
            ],
            "agentlib_mpc.utils.plotting.mpc": [
                "agentlib_mpc.utils.plotting.admm_consensus_shades"
            ],
            "agentlib_mpc.data_structures.casadi_utils": [
                "agentlib_mpc.optimization_backends.casadi_.minlp",
                "agentlib_mpc.optimization_backends.casadi_.full",
                "agentlib_mpc.optimization_backends.casadi_.admm",
                "agentlib_mpc.optimization_backends.casadi_.basic"
            ],
            "agentlib_mpc.data_structures.mpc_datamodels": [
                "agentlib_mpc.optimization_backends.casadi_.admm",
                "agentlib_mpc.optimization_backends.casadi_.minlp",
                "agentlib_mpc.optimization_backends.casadi_.full",
                "agentlib_mpc.optimization_backends.casadi_.basic",
                "agentlib_mpc.modules.minlp_mpc"
            ],
            "agentlib_mpc.models.casadi_model": [
                "agentlib_mpc.optimization_backends.casadi_.core.VariableGroup",
                "agentlib_mpc.optimization_backends.casadi_.admm",
                "agentlib_mpc.optimization_backends.casadi_.minlp",
                "agentlib_mpc.optimization_backends.casadi_.full",
                "agentlib_mpc.optimization_backends.casadi_.basic"
            ],
            "agentlib_mpc.optimization_backends.casadi_.core.casadi_backend": [
                "agentlib_mpc.optimization_backends.casadi_.minlp",
                "agentlib_mpc.optimization_backends.casadi_.full",
                "agentlib_mpc.optimization_backends.casadi_.basic"
            ],
            "agentlib_mpc.optimization_backends.casadi_.core.VariableGroup": [
                "agentlib_mpc.optimization_backends.casadi_.minlp",
                "agentlib_mpc.optimization_backends.casadi_.full",
                "agentlib_mpc.optimization_backends.casadi_.admm",
                "agentlib_mpc.optimization_backends.casadi_.basic"
            ],
            "agentlib_mpc.optimization_backends.casadi_.core.discretization": [
                "agentlib_mpc.optimization_backends.casadi_.admm",
                "agentlib_mpc.optimization_backends.casadi_.basic"
            ],
            "agentlib_mpc.optimization_backends.casadi_.core.system": [
                "agentlib_mpc.optimization_backends.casadi_.basic"
            ],
            "agentlib_mpc.optimization_backends.casadi_.basic": [
                "agentlib_mpc.optimization_backends.casadi_.minlp",
                "agentlib_mpc.optimization_backends.casadi_.full",
                "agentlib_mpc.optimization_backends.casadi_.admm"
            ],
            "agentlib_mpc.optimization_backends.backend": [
                "agentlib_mpc.optimization_backends.casadi_.admm"
            ],
            "agentlib_mpc.optimization_backends.casadi_.full": [
                "agentlib_mpc.optimization_backends.casadi_.admm"
            ],
            "agentlib_mpc.modules.mpc": [
                "agentlib_mpc.modules.minlp_mpc"
            ],
            "agentlib_mpc.optimization_backends.casadi_.minlp_cia": [
                "agentlib_mpc.modules.minlp_mpc"
            ],
            "agentlib_mpc.models.casadi_ml_model": [
                "agentlib_mpc.modules.ml_model_simulator"
            ],
            "agentlib_mpc.models.serialized_ml_model": [
                "agentlib_mpc.modules.ml_model_simulator"
            ],
            "agentlib_mpc.data_structures.coordinator_datatypes": [
                "agentlib_mpc.modules.dmpc.employee"
            ],
            "agentlib_mpc.modules.mpc.skippable_mixin": [
                "agentlib_mpc.modules.dmpc.employee"
            ],
            "agentlib_mpc.modules.mpc.mpc_full": [
                "agentlib_mpc.modules.dmpc"
            ]
        },
        "duplicated_lines": {
            "nb_duplicated_lines": 0,
            "percent_duplicated_lines": 0.0
        },
        "node_count": {
            "function": 7,
            "klass": 42,
            "method": 69,
            "module": 65
        },
        "undocumented": {
            "function": 1,
            "klass": 26,
            "method": 13,
            "module": 39
        },
        "convention": 255,
        "error": 55,
        "fatal": 40,
        "info": 0,
        "refactor": 100,
        "statement": 1122,
        "warning": 23,
        "global_note": 4.180035650623886,
        "nb_duplicated_lines": 952,
        "percent_duplicated_lines": 6.204379562043796
    }
}
